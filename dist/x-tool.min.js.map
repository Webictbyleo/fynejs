{"version":3,"file":"x-tool.min.js","names":["ARRAY_ISARRAY","Array","isArray","XToolFramework","_Afrom","from","_AisArr","_Okeys","Object","keys","_logErr","_args","STR_STYLE","STR_DISPLAY","STR_NONE","STR_TAGNAME","STR_TEMPLATE","STR_LENGTH","XTOOL_ENABLE_STATIC_DIRECTIVES","d","document","head","getElementById","style","createElement","id","textContent","appendChild","PFX","attrName","name","ReactiveComponent","attachToParent","parent","this","_parent","_addChild","_id","framework","_framework","element","_element","el","isBound","_isBound","v","isMounted","_isMounted","isDestroyed","_isDestroyed","_getDefaultTransitionClasses","cfg","_getConfig","p","prefix","String","mk","s","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","_ensureDefaultTransitionStyles","injectTransitionCSS","styleId","cls","_addDirective","directive","existing","_directives","get","push","set","constructor","def","_propUpdateActive","_runningPropEffect","_beforeMountCalled","_children","_computed","_propEffects","_computedCache","Map","_computedDeps","_inverseComputedDeps","_isInComputedEvaluation","_isInMethodExecution","_allEffects","Set","_hasComputed","_cleanupFunctions","_eventListeners","_loopScopes","WeakMap","_expressionCache","_propertyDependencies","_activeEffect","_renderScheduled","_nextTickQueue","_transitionConfigs","_transitionEvaluators","_initialClassSets","_propParent","_callLifecycleHook","hookName","hook","_lifecycle","_safeExecute","_runWithGlobalInterception","_addCleanupFunction","fn","wrapper","delete","add","_addEventListenerWithCleanup","event","handler","options","addEventListener","_originalMethods","methods","computed","propEffects","length","mounted","unmounted","destroyed","updated","beforeMount","beforeUnmount","beforeDestroy","_data","_createReactiveData","data","_methods","_bindMethods","callBeforeMount","_onDataChange","_property","clear","effectsToRun","directDeps","i","effect","_scheduleRender","boundMethods","methodName","originalMethod","args","prev","_getComputedValue","key","_trackDependency","has","computeFn","dep","value","call","_createMethodContext","propKey","deps","includes","requestAnimationFrame","_render","q","splice","_errorMsg","fallback","e","console","error","bindToElement","completeBinding","getContext","includeComputed","_applyAsyncTemplateResolved","_parseDirectives","_getComponentByElement","_registerElement","_setupDOMRemovalDetection","child","_removeChild","index","indexOf","src","test","body","trim","Function","undefined","_createContextProxy","apply","destroy","self","directives","type","customDirective","unbind","removeEventListener","cleanup","_propEffect","values","idx","_unregisterElement","_deepReactiveCache","queueMicrotask","_unregisterComponent","_initReactiveProps","expr","evalFn","update","obj","ctx","$props","k","processElement","isRoot","hasAttribute","isComponentTag","hasTextOrHtml","forAttr","a","attributes","n","startsWith","_bindDirective","attr","_bindTextInterpolationsIn","_walkElements","nodes","childNodes","node","nodeType","Node","TEXT_NODE","textNode","raw","nodeValue","__x_tool_ti","parentTag","parentElement","tagName","toLowerCase","inCode","segs","open","literal","slice","bs","charCodeAt","prefixStart","prefixEnd","repeat","close","hasExpr","some","hasEscaped","evaluators","filter","map","_createElementEvaluator","exprIndex","out","val","dirInfo","expression","_createEffect","processor","firstElementChild","next","nextElementSibling","directiveName","isShortBind","removeAttribute","_bindAttributeDirective","_bindTransitionDirective","_bindSimpleDirective","_bindModelDirective","_bindIfDirective","_bindForDirective","rest","split","suffix","mods","modifiers","reduce","acc","m","_getCustomDirective","_bindCustomDirective","_bindEventDirective","defaults","_transitionIn","done","userConf","staticConf","conf","assign","end","_removeClasses","_addClasses","offsetWidth","_onTransitionEnd","_transitionOut","cb","called","setTimeout","_tokenizeClasses","input","flatMap","Boolean","classes","tokens","classList","t","remove","updateFn","directiveRef","_static","found","evaluator","originalDisplay","_prevShown","innerHTML","property","isCheckbox","isNumeric","isMultiSelect","multiple","Reflect","defineProperty","configurable","enumerable","writable","getValueEvaluator","setValueEvaluator","_createEvaluator","checkboxValue","loopScope","_collectLoopScope","inferCheckboxValue","member","checked","sel","arr","opt","selected","setInputValue","eventType","parseFloat","getInputValue","currentVal","forEach","$value","placeholder","createComment","parentNode","insertBefore","__x_if_anchorParent","branches","makeActualElement","content","cloneNode","isTemplate","first","firstEval","__x_tool_bound","originalNodes","sib","isElse","isElseIf","getAttribute","branch","active","orig","removeChild","mountBranch","b","__x_if_current","nextSibling","unmountBranch","eventName","trimmed","arrow","_extractArrowFunction","opts","once","passive","capture","onlySelf","shouldPrevent","prevent","shouldStop","stop","isOutside","outside","deferExec","defer","keyAliasMap","esc","escape","space","tab","backspace","del","arrowup","arrowdown","arrowleft","arrowright","home","pageup","pagedown","comboRequirements","ctrl","alt","shift","meta","buttonMap","left","middle","right","touchSingle","single","touchMulti","multi","modifierKeys","allowedKeys","aliases","allowedButtons","btn","needKeyCheck","needButtonCheck","needTouchCheck","passesFilters","path","composedPath","tgt","target","contains","TouchEvent","tCount","touches","MouseEvent","button","KeyboardEvent","ctrlKey","altKey","shiftKey","metaKey","runExpr","thisCtx","compiledArrow","_compileArrowForEvent","paramsList","isBlock","mapArgs","_","isStatement","executor","result","createEventHandler","preventDefault","stopPropagation","ev","canDelegate","delegate","remover","_registerDelegated","run","comp","ownerDocument","compiled","match","params","endsWith","_wrapData","parentKey","getPrototypeOf","prototype","proxy","Proxy","receiver","Symbol","iterator","beforeLen","beforeFirst","beforeLast","ownKeys","had","oldValue","deleteProperty","pc","eff","_includeComputed","specials","$log","$destroy","$forceUpdate","$addCleanupFunction","$nextTick","Promise","resolve","$el","$id","$isMounted","$isDestroyed","$parent","$children","$mutate","prevMethod","prevComputed","propStr","_target","warn","targetElement","component","mergedScope","scopeKeys","gWindow","window","gDocument","sandbox","sandboxExpressions","allow","allowGlobals","wrapTarget","handlerMap","makeKey","JSON","stringify","prop","rem","size","res","querySelector","list","querySelectorAll","doc","w","defaultView","_timeoutRemovers","_intervalRemovers","_rafRemovers","wrapObserverCtor","Orig","Wrapped","inst","disconnect","$target","$event","ms","clearTimeout","r","setInterval","clearInterval","cancelAnimationFrame","MutationObserver","ResizeObserver","IntersectionObserver","_t","_name","directiveInfo","bind","attributeName","baseSet","oc","className","elAny","propName","camel","replace","c","toUpperCase","isBooleanProp","hasNonFunctionProp","isKnownBooleanAttr","_BA","base","join","on","tk","toggle","cssText","boolVal","setAttribute","normalized","parts","cur","anchorParent","merged","scope","_updateElementDirectives","root","Element","itemVar","indexVar","listCode","templateToClone","contextAnchor","listEval","instances","createScope","item","idxOrKey","dir","norm","keysArr","pop","minLen","Math","min","keyVal","frag","createDocumentFragment","start","clone","ref","dr","itemscope","formnovalidate","novalidate","default","_components","_byEl","_pending","_config","_customDirectives","_namedComponentDefs","_delegated","_delegatedRootBound","Error","registerComponent","definition","_getRegisteredComponentDef","init","config","container","debug","staticDirectives","_hpf","readyState","_applyPrefixInitialCSS","_autoDiscoverComponents","_ensureRootObserver","_ensureDelegation","createComponent","_generateComponentId","componentElements","_bindElementAsComponent","reusable","_instantiateNamedComponent","_processPending","components","lastComponent","maybe","parentForEval","dataExpression","parentCtx","_parseDataExpression","initExpr","existingMounted","isConnected","Date","now","random","toString","substring","componentId","_log","_rootObserver","records","addedNodes","removedNodes","stack","_onComponentSourceChanged","observe","childList","subtree","attributeFilter","source","parentComp","par","props","dynamicPropObj","rawPropExpression","propExpr","initDef","baseData","makeData","compDef","originalChildren","firstChild","template","applyTemplate","tpl","slots","slotEl","matched","replaceChild","tplVal","then","html","nested","cancelBubble","h","captureEvents","bubbleEvents","entry","l","XTool","FyneJS"],"sourceRoot":"./dist","sources":["dist/x-tool.js"],"sourcesContent":["\"use strict\";\nconst ARRAY_ISARRAY = Array.isArray;\nconst FT_C = true;\nconst FT_TI = typeof __FEAT_TEXT_INTERP__ === 'boolean' ? __FEAT_TEXT_INTERP__ : true;\nconst _FT_DR = typeof __FEAT_DEEP_REACTIVE__ === 'boolean' ? __FEAT_DEEP_REACTIVE__ : true;\nconst FT_IFB = typeof __FEAT_IF_BRANCHES__ === 'boolean' ? __FEAT_IF_BRANCHES__ : true;\nconst FT_TR = typeof __FEAT_TRANSITION__ === 'boolean' ? __FEAT_TRANSITION__ : true;\nconst XToolFramework = function () {\n    const _Afrom = Array.from;\n    const _AisArr = ARRAY_ISARRAY;\n    const _Okeys = Object.keys;\n    const _logErr = (..._args) => { };\n    const STR_STYLE = 'style';\n    const STR_DISPLAY = 'display';\n    const STR_NONE = 'none';\n    const STR_TAGNAME = 'tagName';\n    const STR_TEMPLATE = 'TEMPLATE';\n    const STR_LENGTH = 'length';\n    let XTOOL_ENABLE_STATIC_DIRECTIVES = true;\n    const d = (typeof document !== 'undefined' ? document : null);\n    try {\n        if (d && d.head && !d.getElementById('x-tool-initial-css')) {\n            const style = d.createElement(STR_STYLE);\n            style.id = 'x-tool-initial-css';\n            style.textContent = '[x-show],[x-if],[x-else],[x-else-if],[x\\\\:show],[x\\\\:if],[x\\\\:else],[x\\\\:else-if]{display:none;}';\n            d.head.appendChild(style);\n        }\n    }\n    catch { }\n    let PFX = 'x';\n    const attrName = (name) => `${PFX}-${name}`;\n    class XToolFramework {\n        constructor() {\n            this._components = new Map();\n            this._byEl = new WeakMap();\n            this._pending = [];\n            this._config = {};\n            this._customDirectives = new Map();\n            this._namedComponentDefs = new Map();\n            this._delegated = new WeakMap();\n            this._delegatedRootBound = false;\n            this.directive = (name, directive) => {\n                if (name.startsWith(PFX + '-')) {\n                    throw new Error(`Custom directive names should not start with \"${PFX}-\". Use: XTool.directive(\"my-directive\", ...)`);\n                }\n                this._customDirectives.set(name, directive);\n                return this;\n            };\n            this.registerComponent = (definition) => {\n                if (!definition || !definition.name)\n                    throw new Error('registerComponent requires a name');\n                const name = definition.name.toLowerCase();\n                if (this._namedComponentDefs.has(name))\n                    throw new Error(`Component name \"${name}\" already registered`);\n                this._namedComponentDefs.set(name, definition);\n                return this;\n            };\n            this._getRegisteredComponentDef = (name) => this._namedComponentDefs.get(name.toLowerCase());\n            this._getCustomDirective = (name) => this._customDirectives.get(name);\n            this._getConfig = () => this._config;\n            this.init = (config = {}) => {\n                this._config = { container: 'body', debug: false, staticDirectives: true, ...config };\n                if (typeof this._config.staticDirectives === 'boolean') {\n                    XTOOL_ENABLE_STATIC_DIRECTIVES = this._config.staticDirectives;\n                }\n                const _hpf = this._config.prefix;\n                if (_hpf && typeof _hpf === 'string' && _hpf[STR_LENGTH] > 0) {\n                    PFX = _hpf;\n                }\n                else {\n                    PFX = 'x';\n                }\n                if (d && d.readyState === 'loading') {\n                    d.addEventListener('DOMContentLoaded', () => { this._applyPrefixInitialCSS(); this._autoDiscoverComponents(); const c = d?.querySelector(this._config.container); if (c) {\n                        this._ensureRootObserver(c);\n                        if (this._config.delegate)\n                            this._ensureDelegation(c);\n                    } });\n                }\n                else if (!d || d.readyState === 'complete' || d.readyState === 'interactive') {\n                    this._applyPrefixInitialCSS();\n                    this._autoDiscoverComponents();\n                    const c = d?.querySelector(this._config.container);\n                    if (c) {\n                        this._ensureRootObserver(c);\n                        if (this._config.delegate)\n                            this._ensureDelegation(c);\n                    }\n                }\n                return this;\n            };\n            this.createComponent = (definition) => {\n                const component = new ReactiveComponent(this._generateComponentId(), definition, this);\n                this._components.set(component.id, component);\n                component.callBeforeMount();\n                return component;\n            };\n            this._autoDiscoverComponents = () => {\n                const container = d?.querySelector(this._config.container);\n                if (!container)\n                    return;\n                const componentElements = container.querySelectorAll(`[${attrName('data')}]`);\n                for (const element of componentElements) {\n                    if (!this._getComponentByElement(element))\n                        this._bindElementAsComponent(element);\n                }\n                const reusable = container.querySelectorAll('component[source]');\n                for (const el of reusable) {\n                    if (!this._getComponentByElement(el))\n                        this._instantiateNamedComponent(el);\n                }\n                this._processPending();\n                if (componentElements[STR_LENGTH] === 0 && !this._getComponentByElement(container)) {\n                    const components = _Afrom(this._components.values());\n                    const lastComponent = components[components[STR_LENGTH] - 1];\n                    if (lastComponent && !lastComponent.isBound) {\n                        lastComponent.bindToElement(container);\n                    }\n                }\n            };\n            this._processPending = () => {\n                if (!this._pending[STR_LENGTH])\n                    return;\n                for (const p of this._pending) {\n                    let cur = p.el.parentElement;\n                    let parent;\n                    while (cur && !parent) {\n                        const maybe = this._getComponentByElement(cur);\n                        if (maybe)\n                            parent = maybe;\n                        else\n                            cur = cur.parentElement;\n                    }\n                    if (parent) {\n                        p.comp.attachToParent(parent);\n                    }\n                }\n                for (const p of this._pending)\n                    p.comp.completeBinding();\n                this._pending = [];\n            };\n            this._bindElementAsComponent = (element, parentForEval) => {\n                const dataExpression = element.getAttribute(attrName('data'));\n                let data = {};\n                if (dataExpression) {\n                    element.removeAttribute(attrName('data'));\n                    try {\n                        if (parentForEval) {\n                            let parentCtx = {};\n                            try {\n                                parentCtx = parentForEval._createMethodContext?.() || {};\n                            }\n                            catch {\n                                parentCtx = {};\n                            }\n                            const evalFn = new Function('parent', `with(parent){ return (${dataExpression}) }`);\n                            data = evalFn(parentCtx);\n                        }\n                        else {\n                            data = this._parseDataExpression(dataExpression);\n                        }\n                        if (data.methods) {\n                            data = { methods: data.methods, data: { ...data } };\n                        }\n                        else {\n                            data = { data: { ...data } };\n                        }\n                        if (parentForEval) {\n                            data.data.$parent = parentForEval;\n                        }\n                    }\n                    catch (e) {\n                    }\n                }\n                const comp = this.createComponent(data);\n                comp.element = element;\n                comp.callBeforeMount();\n                this._registerElement(comp.element, comp);\n                this._pending.push({ el: element, comp });\n                const initExpr = element.getAttribute(attrName('init'));\n                if (initExpr) {\n                    element.removeAttribute(attrName('init'));\n                    const existingMounted = comp._lifecycle?.mounted;\n                    comp._lifecycle.mounted = function () {\n                        if (existingMounted) {\n                            try {\n                                existingMounted.call(this);\n                            }\n                            catch { }\n                        }\n                        const evaluator = new Function('ctx', 'with(ctx){' + initExpr + '} ');\n                        queueMicrotask(() => {\n                            if (comp.isDestroyed || !comp.element || !comp.element.isConnected)\n                                return;\n                            try {\n                                const ctx = comp._createMethodContext?.() || comp.getContext?.() || {};\n                                const result = evaluator(ctx);\n                                if (typeof result === 'function') {\n                                    try {\n                                        result();\n                                    }\n                                    catch { }\n                                }\n                            }\n                            catch { }\n                        });\n                    };\n                }\n            };\n            this._generateComponentId = () => 'component_' + Date.now() + '_' + Math.random().toString(36).substring(2, 9);\n            this._parseDataExpression = (expression) => {\n                try {\n                    return new Function('return ' + expression.trim())();\n                }\n                catch {\n                    return {};\n                }\n            };\n            this._unregisterComponent = (componentId) => { this._components.delete(componentId); };\n            this._log = (..._args) => { };\n            this._registerElement = (element, component) => {\n                this._byEl.set(element, component);\n            };\n            this._unregisterElement = (element) => { try {\n                this._byEl.delete(element);\n            }\n            catch { } };\n        }\n        _applyPrefixInitialCSS() {\n            if (!d)\n                return;\n            if (PFX === 'x')\n                return;\n            const id = `x-tool-initial-css-${PFX}`;\n            if (d.head && !d.getElementById(id)) {\n                const style = d.createElement(STR_STYLE);\n                style.id = id;\n                style.textContent = `[${PFX}-show],[${PFX}-if],[${PFX}-else],[${PFX}-else-if],[${PFX}\\\\:show],[${PFX}\\\\:if],[${PFX}\\\\:else],[${PFX}\\\\:else-if]{display:none;}`;\n                d.head.appendChild(style);\n            }\n        }\n        _ensureRootObserver(container) {\n            if (this._rootObserver || typeof MutationObserver === 'undefined')\n                return;\n            this._rootObserver = new MutationObserver(records => {\n                for (const r of records) {\n                    if (r.type === 'childList') {\n                        for (let i = 0; i < r.addedNodes.length; i++) {\n                            const n = r.addedNodes[i];\n                            if (n.nodeType !== 1)\n                                continue;\n                            const el = n;\n                            if (el[STR_TAGNAME] === 'COMPONENT') {\n                                const src = el.getAttribute('source');\n                                if (src && !this._getComponentByElement(el))\n                                    this._instantiateNamedComponent(el);\n                            }\n                        }\n                        for (let i = 0; i < r.removedNodes.length; i++) {\n                            const n = r.removedNodes[i];\n                            if (n.nodeType !== 1)\n                                continue;\n                            const el = n;\n                            queueMicrotask(() => {\n                                if (el.isConnected)\n                                    return;\n                                const stack = [el];\n                                while (stack.length) {\n                                    const cur = stack.pop();\n                                    const comp = this._getComponentByElement(cur);\n                                    if (comp && !comp.isDestroyed) {\n                                        try {\n                                            comp.destroy();\n                                        }\n                                        catch { }\n                                    }\n                                    let child = cur.firstElementChild;\n                                    while (child) {\n                                        stack.push(child);\n                                        child = child.nextElementSibling;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else if (r.type === 'attributes') {\n                        const target = r.target;\n                        if (target && target[STR_TAGNAME] === 'COMPONENT' && r.attributeName === 'source') {\n                            this._onComponentSourceChanged(target);\n                        }\n                    }\n                }\n                this._processPending();\n            });\n            this._rootObserver.observe(container, { childList: true, subtree: true, attributes: true, attributeFilter: ['source'] });\n        }\n        _onComponentSourceChanged(el) {\n            const src = (el.getAttribute('source') || '').trim();\n            const existing = this._getComponentByElement(el);\n            if (!src) {\n                if (existing && !existing.isDestroyed) {\n                    try {\n                        existing.destroy();\n                    }\n                    catch { }\n                }\n                el.innerHTML = '';\n                return;\n            }\n            if (existing && !existing.isDestroyed) {\n                try {\n                    existing.destroy();\n                }\n                catch { }\n            }\n            el.innerHTML = '';\n            this._instantiateNamedComponent(el);\n        }\n        _instantiateNamedComponent(el) {\n            const source = el.getAttribute('source');\n            if (!source)\n                return;\n            const def = this._getRegisteredComponentDef(source);\n            if (!def) {\n                return;\n            }\n            let parentComp;\n            let par = el.parentElement;\n            while (par && !parentComp) {\n                const maybe = this._getComponentByElement(par);\n                if (maybe)\n                    parentComp = maybe;\n                else\n                    par = par.parentElement;\n            }\n            let props = null;\n            let dynamicPropObj = null;\n            let rawPropExpression = null;\n            if (!props)\n                props = {};\n            const propExpr = el.getAttribute(attrName('prop'));\n            if (propExpr) {\n                rawPropExpression = propExpr;\n                if (parentComp) {\n                    try {\n                        const fn = new Function('ctx', 'with(ctx){return (' + propExpr + ')}');\n                        const ctx = parentComp.getContext(true);\n                        dynamicPropObj = fn(ctx);\n                    }\n                    catch {\n                        dynamicPropObj = null;\n                    }\n                }\n                else {\n                    try {\n                        dynamicPropObj = new Function('return (' + propExpr + ')')();\n                    }\n                    catch {\n                        dynamicPropObj = null;\n                    }\n                }\n                if (dynamicPropObj && typeof dynamicPropObj === 'object')\n                    for (const k in dynamicPropObj)\n                        if (!(k in props))\n                            props[k] = String(dynamicPropObj[k]);\n                el.removeAttribute(attrName('prop'));\n            }\n            let baseData = {};\n            if (def.makeData) {\n                try {\n                    baseData = def.makeData(props) || {};\n                }\n                catch {\n                    baseData = {};\n                }\n            }\n            if (def.data) {\n                for (const k in def.data) {\n                    baseData[k] = def.data[k];\n                }\n            }\n            for (const k in props) {\n                if (!(k in baseData))\n                    baseData[k] = props[k];\n            }\n            baseData.$props = props;\n            let initDef;\n            if (typeof def.init === 'function') {\n                try {\n                    const maybe = def.init(props);\n                    initDef = (maybe && typeof maybe === 'object') ? maybe : undefined;\n                }\n                catch {\n                    initDef = undefined;\n                }\n            }\n            const compDef = {\n                data: baseData,\n                methods: { ...(def.methods || {}), ...(initDef?.methods || {}) },\n                computed: { ...(def.computed || {}), ...(initDef?.computed || {}) },\n                propEffects: { ...(def.propEffects || {}), ...(initDef?.propEffects || {}) },\n                mounted: initDef?.mounted || def.mounted,\n                unmounted: initDef?.unmounted || def.unmounted,\n                beforeMount: initDef?.beforeMount || def.beforeMount,\n                beforeUnmount: initDef?.beforeUnmount || def.beforeUnmount,\n                updated: initDef?.updated || def.updated,\n                destroyed: initDef?.destroyed || def.destroyed,\n                beforeDestroy: initDef?.beforeDestroy || def.beforeDestroy\n            };\n            const comp = this.createComponent(compDef);\n            comp.element = el;\n            const originalChildren = [];\n            while (el.firstChild) {\n                const n = el.firstChild;\n                originalChildren.push(n);\n                el.removeChild(n);\n            }\n            if (def.template) {\n                const applyTemplate = (tpl) => {\n                    el.innerHTML = tpl;\n                    const slots = el.querySelectorAll('slot');\n                    if (slots.length) {\n                        for (const slotEl of slots) {\n                            const name = slotEl.getAttribute('name');\n                            let matched = [];\n                            if (name) {\n                                matched = originalChildren.filter(n => n.nodeType === 1 && n.getAttribute('slot') === name);\n                            }\n                            else {\n                                matched = originalChildren.filter(n => n.nodeType !== 1 || !n.hasAttribute('slot'));\n                            }\n                            if (matched.length) {\n                                const frag = d.createDocumentFragment();\n                                for (const n of matched)\n                                    frag.appendChild(n);\n                                slotEl.parentNode?.replaceChild(frag, slotEl);\n                            }\n                        }\n                    }\n                };\n                const tplVal = def.template;\n                if (typeof tplVal === 'string') {\n                    applyTemplate(tplVal);\n                }\n                else if (typeof tplVal === 'function') {\n                    try {\n                        const res = tplVal();\n                        if (res && typeof res.then === 'function') {\n                            el.innerHTML = '';\n                            res.then(html => { applyTemplate(html || ''); try {\n                                comp._applyAsyncTemplateResolved();\n                            }\n                            catch { } });\n                        }\n                        else {\n                            applyTemplate(String(res || ''));\n                        }\n                    }\n                    catch {\n                        el.innerHTML = '';\n                    }\n                }\n                else if (tplVal && typeof tplVal.then === 'function') {\n                    el.innerHTML = '';\n                    tplVal.then(html => { applyTemplate(html || ''); try {\n                        comp._applyAsyncTemplateResolved();\n                    }\n                    catch { } });\n                }\n            }\n            else {\n                for (const n of originalChildren)\n                    el.appendChild(n);\n            }\n            this._registerElement(el, comp);\n            try {\n                const nested = el.querySelectorAll(`[${attrName('data')}]`);\n                for (const node of nested) {\n                    if (!this._getComponentByElement(node))\n                        this._bindElementAsComponent(node, comp);\n                }\n            }\n            catch { }\n            this._pending.push({ el, comp });\n            if (rawPropExpression && parentComp) {\n                try {\n                    comp._initReactiveProps(rawPropExpression, parentComp);\n                }\n                catch { }\n            }\n            this._processPending();\n        }\n        _getComponentByElement(element) { return this._byEl.get(element); }\n        observe(_element) { }\n        _ensureDelegation(container) {\n            if (this._delegatedRootBound)\n                return;\n            const root = container;\n            const handler = (e) => {\n                let cur = e.target;\n                while (cur && cur !== root.parentElement) {\n                    if (e.cancelBubble)\n                        break;\n                    const map = this._delegated.get(cur);\n                    if (map) {\n                        const list = map.get(e.type);\n                        if (list && list.length) {\n                            for (const h of [...list]) {\n                                try {\n                                    if (h.comp && h.comp.isDestroyed) {\n                                        const i = list.indexOf(h);\n                                        if (i > -1)\n                                            list.splice(i, 1);\n                                        continue;\n                                    }\n                                    if (!h.filter || h.filter(e)) {\n                                        h.run(e);\n                                        if (h.once) {\n                                            const idx = list.indexOf(h);\n                                            if (idx > -1)\n                                                list.splice(idx, 1);\n                                        }\n                                    }\n                                }\n                                catch { }\n                            }\n                        }\n                    }\n                    cur = cur.parentElement;\n                }\n            };\n            const captureEvents = ['keydown', 'keyup'];\n            const bubbleEvents = ['click', 'input', 'change'];\n            for (const ev of captureEvents)\n                root.addEventListener(ev, handler, true);\n            for (const ev of bubbleEvents)\n                root.addEventListener(ev, handler, false);\n            this._delegatedRootBound = true;\n        }\n        _registerDelegated(element, event, entry) {\n            let map = this._delegated.get(element);\n            if (!map) {\n                map = new Map();\n                this._delegated.set(element, map);\n            }\n            let list = map.get(event);\n            if (!list) {\n                list = [];\n                map.set(event, list);\n            }\n            list.push(entry);\n            return () => {\n                try {\n                    const m = this._delegated.get(element);\n                    const l = m?.get(event);\n                    if (!l)\n                        return;\n                    const idx = l.indexOf(entry);\n                    if (idx > -1)\n                        l.splice(idx, 1);\n                }\n                catch { }\n            };\n        }\n    }\n    class ReactiveComponent {\n        attachToParent(parent) {\n            this._parent = parent;\n            parent._addChild(this);\n        }\n        get id() { return this._id; }\n        get framework() { return this._framework; }\n        get element() { return this._element; }\n        set element(el) { this._element = el; }\n        get isBound() { return this._isBound; }\n        set isBound(v) { this._isBound = v; }\n        get isMounted() { return this._isMounted; }\n        set isMounted(v) { this._isMounted = v; }\n        get isDestroyed() { return this._isDestroyed; }\n        set isDestroyed(v) { this._isDestroyed = v; }\n        _getDefaultTransitionClasses() {\n            const cfg = this.framework._getConfig();\n            const p = (cfg && cfg.prefix) ? String(cfg.prefix) : 'x';\n            const mk = (s) => `${p}t-${s}`;\n            return { enter: mk('enter'), enterFrom: mk('enter-from'), enterTo: mk('enter-to'), leave: mk('leave'), leaveFrom: mk('leave-from'), leaveTo: mk('leave-to') };\n        }\n        _ensureDefaultTransitionStyles() {\n            try {\n                const cfg = this.framework._getConfig();\n                if (cfg && cfg.injectTransitionCSS === false)\n                    return;\n                if (!d || !d.head)\n                    return;\n                const p = (cfg && cfg.prefix) ? String(cfg.prefix) : 'x';\n                const styleId = `x-tool-transition-css-${p}`;\n                if (d.getElementById(styleId))\n                    return;\n                const cls = (name) => `.${p}t-${name}`;\n                const style = d.createElement('style');\n                style.id = styleId;\n                style.textContent = (`${cls('enter')},${cls('leave')}{transition:opacity 150ms ease,transform 150ms ease}` +\n                    `${cls('enter-from')},${cls('leave-to')}{opacity:0;transform:translateY(-0.5rem)}` +\n                    `${cls('enter-to')},${cls('leave-from')}{opacity:1;transform:translateY(0)}`);\n                d.head.appendChild(style);\n            }\n            catch { }\n        }\n        _addDirective(element, directive) {\n            const existing = this._directives.get(element) || [];\n            existing.push(directive);\n            this._directives.set(element, existing);\n        }\n        constructor(id, def, framework) {\n            this._propUpdateActive = false;\n            this._runningPropEffect = false;\n            this._element = null;\n            this._isBound = false;\n            this._isMounted = false;\n            this._isDestroyed = false;\n            this._beforeMountCalled = false;\n            this._children = [];\n            this._parent = null;\n            this._computed = {};\n            this._propEffects = {};\n            this._computedCache = new Map();\n            this._computedDeps = new Map();\n            this._inverseComputedDeps = new Map();\n            this._isInComputedEvaluation = false;\n            this._isInMethodExecution = false;\n            this._allEffects = new Set();\n            this._hasComputed = false;\n            this._directives = new Map();\n            this._cleanupFunctions = new Set();\n            this._eventListeners = [];\n            this._loopScopes = new WeakMap();\n            this._expressionCache = new Map();\n            this._propertyDependencies = new Map();\n            this._activeEffect = null;\n            this._renderScheduled = false;\n            this._nextTickQueue = [];\n            this._transitionConfigs = new WeakMap();\n            this._transitionEvaluators = new WeakMap();\n            this._initialClassSets = new WeakMap();\n            this._propParent = null;\n            this._callLifecycleHook = (hookName) => {\n                const hook = this._lifecycle[hookName];\n                if (typeof hook === 'function') {\n                    this._safeExecute(() => this._runWithGlobalInterception(hook, []), `Error in '${String(hookName)}'`);\n                }\n            };\n            this._addCleanupFunction = (fn) => {\n                if (typeof fn !== 'function')\n                    return undefined;\n                const wrapper = () => {\n                    try {\n                        fn();\n                    }\n                    catch {\n                        _logErr();\n                    }\n                    try {\n                        this._cleanupFunctions.delete(wrapper);\n                    }\n                    catch { }\n                };\n                this._cleanupFunctions.add(wrapper);\n                return () => { try {\n                    this._cleanupFunctions.delete(wrapper);\n                }\n                catch { } };\n            };\n            this._addEventListenerWithCleanup = (element, event, handler, options) => {\n                element.addEventListener(event, handler, options);\n                this._eventListeners.push({ element, event, handler, options });\n            };\n            this._id = id;\n            this._framework = framework;\n            this._originalMethods = def.methods || {};\n            this._computed = def.computed || {};\n            this._propEffects = def.propEffects || {};\n            this._hasComputed = !!(def.computed && Object.keys(def.computed).length);\n            this._lifecycle = {\n                mounted: def.mounted,\n                unmounted: def.unmounted || def.destroyed,\n                updated: def.updated,\n                beforeMount: def.beforeMount,\n                beforeUnmount: def.beforeUnmount || def.beforeDestroy\n            };\n            this._data = this._createReactiveData(def.data || {});\n            this._methods = this._bindMethods();\n        }\n        callBeforeMount() {\n            if (!this._beforeMountCalled) {\n                this._callLifecycleHook('beforeMount');\n                this._beforeMountCalled = true;\n            }\n        }\n        _onDataChange(_property) {\n            if (this.isBound) {\n                if (FT_C)\n                    this._computedCache.clear();\n                const effectsToRun = new Set();\n                const directDeps = this._propertyDependencies.get(_property);\n                if (directDeps)\n                    for (let i = 0; i < directDeps.length; i++)\n                        effectsToRun.add(directDeps[i]);\n                for (const effect of effectsToRun)\n                    this._safeExecute(effect, 'Error in reactive effect');\n                if (this._hasComputed || !XTOOL_ENABLE_STATIC_DIRECTIVES) {\n                    this._scheduleRender();\n                }\n                this._callLifecycleHook('updated');\n            }\n        }\n        _bindMethods() {\n            const boundMethods = {};\n            for (const methodName in this._originalMethods) {\n                const originalMethod = this._originalMethods[methodName];\n                boundMethods[methodName] = (...args) => {\n                    const prev = this._isInMethodExecution;\n                    this._isInMethodExecution = true;\n                    try {\n                        return this._safeExecute(() => this._runWithGlobalInterception(originalMethod, args), `Error in method '${methodName}'`);\n                    }\n                    finally {\n                        this._isInMethodExecution = prev;\n                    }\n                };\n            }\n            return boundMethods;\n        }\n        _getComputedValue(key) {\n            if (!FT_C)\n                return undefined;\n            this._trackDependency(key);\n            if (this._computedCache.has(key))\n                return this._computedCache.get(key);\n            try {\n                const computeFn = this._computed[key];\n                this._isInComputedEvaluation = true;\n                const prev = this._computedDeps.get(key);\n                if (prev) {\n                    for (const dep of prev) {\n                        const set = this._inverseComputedDeps.get(dep);\n                        if (set)\n                            set.delete(key);\n                    }\n                }\n                this._computedDeps.set(key, new Set());\n                const value = computeFn.call(this._createMethodContext());\n                this._isInComputedEvaluation = false;\n                this._computedCache.set(key, value);\n                return value;\n            }\n            catch {\n                this._isInComputedEvaluation = false;\n                return undefined;\n            }\n        }\n        _trackDependency(propKey) {\n            if (!this._activeEffect)\n                return;\n            let deps = this._propertyDependencies.get(propKey);\n            if (!deps) {\n                deps = [];\n                this._propertyDependencies.set(propKey, deps);\n            }\n            if (!deps.includes(this._activeEffect))\n                deps.push(this._activeEffect);\n        }\n        _scheduleRender() {\n            if (this._renderScheduled)\n                return;\n            this._renderScheduled = true;\n            requestAnimationFrame(() => {\n                this._renderScheduled = false;\n                this._render();\n                if (this._nextTickQueue && this._nextTickQueue.length) {\n                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                    for (const fn of q) {\n                        try {\n                            fn();\n                        }\n                        catch { }\n                    }\n                }\n            });\n        }\n        _safeExecute(fn, _errorMsg, fallback) {\n            try {\n                return fn();\n            }\n            catch (e) {\n                console.error(e);\n                return fallback;\n            }\n        }\n        bindToElement(element) {\n            if (this._isBound)\n                return;\n            this._element = element;\n            if (!this._beforeMountCalled) {\n                this.callBeforeMount();\n            }\n            this.completeBinding();\n        }\n        getContext(includeComputed = true) {\n            return this._createMethodContext(includeComputed);\n        }\n        _applyAsyncTemplateResolved() {\n            if (!this._element)\n                return;\n            try {\n                this._parseDirectives(this._element);\n            }\n            catch { }\n            this._scheduleRender();\n        }\n        completeBinding() {\n            if (this._isBound || !this._element)\n                return;\n            if (!this._framework._getComponentByElement(this._element))\n                this._framework._registerElement(this._element, this);\n            this._isBound = true;\n            this._isMounted = true;\n            this._parseDirectives(this._element);\n            this._setupDOMRemovalDetection();\n            this._render();\n            this._callLifecycleHook('mounted');\n        }\n        _addChild(child) {\n            if (!this._children.includes(child)) {\n                this._children.push(child);\n            }\n        }\n        _removeChild(child) {\n            const index = this._children.indexOf(child);\n            if (index > -1) {\n                this._children.splice(index, 1);\n            }\n        }\n        _setupDOMRemovalDetection() { }\n        _runWithGlobalInterception(fn, args) {\n            try {\n                const src = String(fn);\n                if (!/\\[native code\\]/.test(src)) {\n                    let body = src.trim();\n                    if (!/^function[\\s\\(]/.test(body) && !/^[\\w\\$_][\\w\\d\\$_]*\\s*=>/.test(body) && !/^\\(.*?\\)\\s*=>/.test(body)) {\n                        body = 'function ' + body;\n                    }\n                    const trySrc = 'with(ctx){ const f = (' + body + '); return f.apply(thisArg, argsArray); }';\n                    const wrapper = new Function('thisArg', 'argsArray', 'ctx', trySrc);\n                    return wrapper.call(undefined, this._createMethodContext(), args, this._createContextProxy(undefined, undefined));\n                }\n            }\n            catch {\n            }\n            return fn.apply(this._createMethodContext(), args);\n        }\n        destroy() {\n            const self = this;\n            if (self._isDestroyed)\n                return;\n            self._callLifecycleHook('beforeUnmount');\n            for (const child of self._children) {\n                if (!child.isDestroyed)\n                    child.destroy();\n            }\n            if (self._parent) {\n                self._parent._removeChild(self);\n            }\n            for (const [element, directives] of self._directives) {\n                for (const directive of directives) {\n                    if (directive.type === 'custom' && directive.customDirective?.unbind) {\n                        try {\n                            directive.customDirective.unbind(element, self);\n                        }\n                        catch {\n                            _logErr();\n                        }\n                    }\n                }\n            }\n            self._directives.clear();\n            for (const { element, event, handler, options } of self._eventListeners) {\n                element.removeEventListener(event, handler, options);\n            }\n            self._eventListeners = [];\n            for (const cleanup of Array.from(self._cleanupFunctions)) {\n                try {\n                    cleanup();\n                }\n                catch {\n                    _logErr();\n                }\n            }\n            self._cleanupFunctions.clear();\n            self._computedCache.clear();\n            self._expressionCache.clear();\n            self._propertyDependencies.clear();\n            if (self._propParent && self._propEffect) {\n                for (const deps of self._propParent._propertyDependencies.values()) {\n                    const idx = deps.indexOf(self._propEffect);\n                    if (idx > -1)\n                        deps.splice(idx, 1);\n                }\n            }\n            if (self._element)\n                self._framework._unregisterElement(self._element);\n            self._callLifecycleHook('unmounted');\n            self._isDestroyed = true;\n            self._isMounted = false;\n            self._isBound = false;\n            self._children = [];\n            self._parent = null;\n            this._deepReactiveCache = new WeakMap;\n            self._element = null;\n            queueMicrotask(() => self._framework._unregisterComponent(self._id));\n        }\n        _initReactiveProps(expr, parent) {\n            if (!expr || !parent)\n                return;\n            this._propParent = parent;\n            let evalFn;\n            try {\n                evalFn = new Function('ctx', 'with(ctx){return (' + expr + ')}');\n            }\n            catch {\n                return;\n            }\n            const update = () => {\n                parent._activeEffect = update;\n                let obj;\n                try {\n                    const ctx = parent.getContext(true);\n                    obj = evalFn(ctx);\n                }\n                catch {\n                    obj = null;\n                }\n                parent._activeEffect = null;\n                if (obj && typeof obj === 'object') {\n                    this._data.$props = this._data.$props || {};\n                    this._propUpdateActive = true;\n                    for (const k in obj) {\n                        const v = obj[k];\n                        if (this._data[k] !== v)\n                            this._data[k] = v;\n                    }\n                    this._propUpdateActive = false;\n                }\n            };\n            this._propEffect = update;\n            update();\n        }\n        _parseDirectives(element) {\n            const self = this;\n            let processedElements = 0;\n            const processElement = (el, isRoot = false) => {\n                if (!isRoot && (el.hasAttribute(attrName('data')) || this._framework._getComponentByElement(el))) {\n                    return false;\n                }\n                const isComponentTag = el[STR_TAGNAME] === 'COMPONENT';\n                const directives = [];\n                let hasTextOrHtml = false;\n                let forAttr = null;\n                for (const a of el.attributes) {\n                    const n = a.name;\n                    if (n.startsWith(PFX + '-') || n.startsWith(PFX + ':')) {\n                        directives.push(a);\n                        if (!hasTextOrHtml && (n === attrName('text') || n === attrName('html')))\n                            hasTextOrHtml = true;\n                        if (!forAttr && n === attrName('for'))\n                            forAttr = a;\n                    }\n                }\n                if (directives.length > 0) {\n                    processedElements++;\n                    if (forAttr) {\n                        self._bindDirective(el, forAttr.name, forAttr.value);\n                        return false;\n                    }\n                    for (const attr of directives)\n                        self._bindDirective(el, attr.name, attr.value);\n                }\n                if (FT_TI && !hasTextOrHtml)\n                    self._bindTextInterpolationsIn(el);\n                return isRoot || !isComponentTag;\n            };\n            processElement(element, true);\n            self._walkElements(element, processElement);\n        }\n        _bindTextInterpolationsIn(el) {\n            const nodes = Array.from(el.childNodes);\n            for (const node of nodes) {\n                if (node.nodeType !== Node.TEXT_NODE)\n                    continue;\n                const textNode = node;\n                const raw = textNode.nodeValue || '';\n                if (textNode.__x_tool_ti || raw.indexOf('{{') === -1)\n                    continue;\n                const parentTag = (textNode.parentElement?.tagName || '').toLowerCase();\n                const inCode = parentTag === 'code' || parentTag === 'pre';\n                const segs = [];\n                let i = 0;\n                while (i < raw.length) {\n                    const open = raw.indexOf('{{', i);\n                    if (open === -1) {\n                        segs.push({ literal: raw.slice(i) });\n                        break;\n                    }\n                    let bs = 0;\n                    for (let p = open - 1; p >= 0 && raw.charCodeAt(p) === 92; p--)\n                        bs++;\n                    if (bs > 0) {\n                        const prefixStart = i;\n                        const prefixEnd = open - bs;\n                        if (prefixEnd > prefixStart)\n                            segs.push({ literal: raw.slice(prefixStart, prefixEnd) });\n                        if (bs > 1)\n                            segs.push({ literal: '\\\\'.repeat(bs - 1) });\n                        const close = raw.indexOf('}}', open + 2);\n                        if (close === -1) {\n                            segs.push({ literal: raw.slice(open, raw.length) });\n                            i = raw.length;\n                            break;\n                        }\n                        segs.push({ literal: raw.slice(open, close + 2) });\n                        i = close + 2;\n                        continue;\n                    }\n                    else {\n                        if (open > i)\n                            segs.push({ literal: raw.slice(i, open) });\n                        const close = raw.indexOf('}}', open + 2);\n                        if (close === -1) {\n                            segs.push({ literal: raw.slice(open) });\n                            i = raw.length;\n                            break;\n                        }\n                        const expr = raw.slice(open + 2, close).trim();\n                        if (expr)\n                            segs.push({ expr });\n                        else\n                            segs.push({ literal: '' });\n                        i = close + 2;\n                        continue;\n                    }\n                }\n                const hasExpr = segs.some(s => s.expr);\n                const hasEscaped = segs.some(s => s.literal && s.literal.includes('{{'));\n                if (!hasExpr && !hasEscaped)\n                    continue;\n                textNode.__x_tool_ti = true;\n                const evaluators = hasExpr && !inCode ? segs.filter(s => s.expr).map(s => this._createElementEvaluator(s.expr, el)) : [];\n                let exprIndex = 0;\n                const update = () => {\n                    exprIndex = 0;\n                    let out = '';\n                    for (const s of segs) {\n                        if (s.literal != null) {\n                            out += s.literal;\n                        }\n                        else if (s.expr) {\n                            if (inCode) {\n                                out += '{{ ' + s.expr + ' }}';\n                            }\n                            else {\n                                const val = evaluators[exprIndex++]();\n                                out += (val == null ? '' : String(val));\n                            }\n                        }\n                    }\n                    if (textNode.textContent !== out)\n                        textNode.textContent = out;\n                };\n                const dirInfo = { type: 'text-interpolation', expression: raw, update: undefined };\n                this._addDirective(el, dirInfo);\n                const effect = this._createEffect(update, dirInfo);\n                dirInfo.update = effect;\n            }\n        }\n        _walkElements(parent, processor) {\n            let child = parent.firstElementChild;\n            while (child) {\n                const next = child.nextElementSibling;\n                if (processor(child))\n                    this._walkElements(child, processor);\n                child = next;\n            }\n        }\n        _bindDirective(element, directiveName, expression) {\n            const self = this;\n            const isShortBind = directiveName.startsWith(PFX + ':');\n            const type = directiveName.slice(PFX.length + 1);\n            if (isShortBind || type === 'class' || type === STR_STYLE) {\n                element.removeAttribute(directiveName);\n                return self._bindAttributeDirective(element, type, expression);\n            }\n            if (type === 'transition') {\n                element.removeAttribute(directiveName);\n                return self._bindTransitionDirective(element, expression);\n            }\n            if (type === 'text' || type === 'html' || type === 'show') {\n                element.removeAttribute(directiveName);\n                return self._bindSimpleDirective(element, expression, type);\n            }\n            const handled = type === 'model' ? (element.removeAttribute(directiveName), self._bindModelDirective(element, expression), true)\n                : type === 'if' ? (element.removeAttribute(directiveName), self._bindIfDirective(element, expression), true)\n                    : type === 'for' ? (element.removeAttribute(directiveName), self._bindForDirective(element, expression), true)\n                        : false;\n            if (handled)\n                return;\n            if (type.indexOf(':') > -1) {\n                const [prefix, rest] = type.split(':', 2);\n                const [suffix, ...mods] = rest.split('.');\n                const modifiers = mods.reduce((acc, m) => { if (m)\n                    acc[m] = true; return acc; }, {});\n                if (prefix === 'on') {\n                    element.removeAttribute(directiveName);\n                    const customDirective = self.framework._getCustomDirective(suffix);\n                    return customDirective\n                        ? self._bindCustomDirective(element, suffix, expression, customDirective, modifiers)\n                        : self._bindEventDirective(element, suffix, expression, modifiers);\n                }\n                element.removeAttribute(directiveName);\n                return self._bindAttributeDirective(element, suffix, expression);\n            }\n        }\n        _bindTransitionDirective(element, expression) {\n            if (!FT_TR)\n                return;\n            this._ensureDefaultTransitionStyles();\n            const defaults = this._getDefaultTransitionClasses();\n            const expr = (expression || '').trim();\n            if (expr) {\n                try {\n                    const evalFn = this._createElementEvaluator(expr, element);\n                    this._transitionEvaluators.set(element, evalFn);\n                }\n                catch { }\n            }\n            else {\n                this._transitionConfigs.set(element, defaults);\n            }\n            this._addDirective(element, { type: 'transition', expression });\n        }\n        _transitionIn(el, done) {\n            if (!FT_TR) {\n                if (done)\n                    done();\n                return;\n            }\n            const defaults = this._getDefaultTransitionClasses();\n            let userConf = null;\n            const evalFn = this._transitionEvaluators.get(el);\n            if (evalFn) {\n                try {\n                    userConf = evalFn();\n                }\n                catch {\n                    userConf = null;\n                }\n            }\n            const staticConf = this._transitionConfigs.get(el) || null;\n            const conf = Object.assign({}, defaults, (userConf && typeof userConf === 'object') ? userConf : (staticConf || {}));\n            const { enter, enterFrom, enterTo } = conf;\n            const end = () => { try {\n                if (enter)\n                    this._removeClasses(el, enter);\n                if (enterTo)\n                    this._removeClasses(el, enterTo);\n            }\n            catch { } ; if (done)\n                done(); };\n            if (enter || enterFrom || enterTo) {\n                if (enter)\n                    this._addClasses(el, enter);\n                if (enterFrom)\n                    this._addClasses(el, enterFrom);\n                void el.offsetWidth;\n                if (enterFrom)\n                    this._removeClasses(el, enterFrom);\n                if (enterTo)\n                    this._addClasses(el, enterTo);\n                this._onTransitionEnd(el, end);\n            }\n            else {\n                end();\n            }\n        }\n        _transitionOut(el, done) {\n            if (!FT_TR) {\n                if (done)\n                    done();\n                return;\n            }\n            const defaults = this._getDefaultTransitionClasses();\n            let userConf = null;\n            const evalFn = this._transitionEvaluators.get(el);\n            if (evalFn) {\n                try {\n                    userConf = evalFn();\n                }\n                catch {\n                    userConf = null;\n                }\n            }\n            const staticConf = this._transitionConfigs.get(el) || null;\n            const conf = Object.assign({}, defaults, (userConf && typeof userConf === 'object') ? userConf : (staticConf || {}));\n            const { leave, leaveFrom, leaveTo } = conf;\n            const end = () => { try {\n                if (leave)\n                    this._removeClasses(el, leave);\n                if (leaveTo)\n                    this._removeClasses(el, leaveTo);\n            }\n            catch { } ; if (done)\n                done(); };\n            if (leave || leaveFrom || leaveTo) {\n                if (leave)\n                    this._addClasses(el, leave);\n                if (leaveFrom)\n                    this._addClasses(el, leaveFrom);\n                void el.offsetWidth;\n                if (leaveFrom)\n                    this._removeClasses(el, leaveFrom);\n                if (leaveTo)\n                    this._addClasses(el, leaveTo);\n                this._onTransitionEnd(el, end);\n            }\n            else {\n                end();\n            }\n        }\n        _onTransitionEnd(el, cb) {\n            let called = false;\n            const done = () => { if (called)\n                return; called = true; try {\n                el.removeEventListener('transitionend', done);\n                el.removeEventListener('animationend', done);\n            }\n            catch { } ; cb(); };\n            try {\n                el.addEventListener('transitionend', done);\n                el.addEventListener('animationend', done);\n                setTimeout(done, 500);\n            }\n            catch {\n                cb();\n            }\n        }\n        _tokenizeClasses(input) {\n            if (!input)\n                return [];\n            if (Array.isArray(input))\n                return input.map(String).flatMap(s => String(s).split(/\\s+/)).filter(Boolean);\n            if (typeof input === 'string')\n                return input.split(/\\s+/).filter(Boolean);\n            return [];\n        }\n        _addClasses(el, classes) {\n            const tokens = this._tokenizeClasses(classes);\n            if (!tokens.length)\n                return;\n            try {\n                el.classList.add(...tokens);\n            }\n            catch {\n                for (const t of tokens) {\n                    try {\n                        el.classList.add(t);\n                    }\n                    catch { }\n                }\n            }\n        }\n        _removeClasses(el, classes) {\n            const tokens = this._tokenizeClasses(classes);\n            if (!tokens.length)\n                return;\n            try {\n                el.classList.remove(...tokens);\n            }\n            catch {\n                for (const t of tokens) {\n                    try {\n                        el.classList.remove(t);\n                    }\n                    catch { }\n                }\n            }\n        }\n        _createEffect(updateFn, directiveRef) {\n            const effect = () => {\n                this._activeEffect = effect;\n                try {\n                    updateFn();\n                }\n                finally {\n                    this._activeEffect = null;\n                }\n            };\n            effect();\n            this._allEffects.add(effect);\n            if (XTOOL_ENABLE_STATIC_DIRECTIVES && directiveRef && directiveRef._static === undefined) {\n                let found = false;\n                for (const deps of this._propertyDependencies.values()) {\n                    if (deps.includes(effect)) {\n                        found = true;\n                        break;\n                    }\n                }\n                directiveRef._static = !found;\n            }\n            return effect;\n        }\n        _bindSimpleDirective(element, expression, type) {\n            if (type === 'class' || type === STR_STYLE) {\n                return this._bindAttributeDirective(element, type, expression);\n            }\n            const evaluator = this._createElementEvaluator(expression, element);\n            let originalDisplay;\n            if (type === 'show') {\n                const el = element;\n                originalDisplay = el.style[STR_DISPLAY] !== STR_NONE ? el.style[STR_DISPLAY] : undefined;\n            }\n            let _prevShown = undefined;\n            const update = () => {\n                const value = evaluator();\n                const el = element;\n                switch (type) {\n                    case 'text':\n                        el.textContent = String(value);\n                        break;\n                    case 'html':\n                        el.innerHTML = String(value || '');\n                        break;\n                    case 'show':\n                        const next = !!value;\n                        if (_prevShown === next)\n                            return;\n                        _prevShown = next;\n                        if (next) {\n                            el.style[STR_DISPLAY] = originalDisplay || '';\n                            this._transitionIn(el);\n                        }\n                        else {\n                            this._transitionOut(el, () => { el.style[STR_DISPLAY] = STR_NONE; });\n                        }\n                        break;\n                }\n            };\n            const dirInfo = { type, expression, update: undefined, originalDisplay };\n            this._addDirective(element, dirInfo);\n            const effect = this._createEffect(update, dirInfo);\n            dirInfo.update = effect;\n        }\n        _bindModelDirective(element, property) {\n            const isCheckbox = element.type === 'checkbox';\n            const isNumeric = element.type === 'number' || element.type === 'range';\n            const isMultiSelect = element.tagName === 'SELECT' && element.multiple === true;\n            if (!Reflect.has(this._data, property)) {\n                Reflect.defineProperty(this._data, property, {\n                    'configurable': true,\n                    'enumerable': true,\n                    'writable': true\n                });\n            }\n            const getValueEvaluator = this._createElementEvaluator(property, element);\n            const setValueEvaluator = this._createEvaluator(`${property} = $value`, true);\n            const inferCheckboxValue = () => {\n                if (element.hasAttribute('value'))\n                    return element.value;\n                const loopScope = this._collectLoopScope(element);\n                if (loopScope) {\n                    const keys = Object.keys(loopScope);\n                    if (keys.length === 1)\n                        return loopScope[keys[0]];\n                }\n                return element.value;\n            };\n            const checkboxValue = isCheckbox ? inferCheckboxValue() : undefined;\n            const getInputValue = () => {\n                if (isCheckbox) {\n                    if (Array.isArray(getValueEvaluator()) && checkboxValue !== undefined) {\n                        return element.checked ? checkboxValue : undefined;\n                    }\n                    if (element.hasAttribute('value'))\n                        return element.checked ? element.value : undefined;\n                    return element.checked;\n                }\n                if (isMultiSelect) {\n                    const sel = element;\n                    const values = [];\n                    for (let i = 0; i < sel.options.length; i++) {\n                        const opt = sel.options[i];\n                        if (opt.selected)\n                            values.push(opt.value);\n                    }\n                    return values;\n                }\n                return isNumeric ? parseFloat(element.value) || 0 : element.value;\n            };\n            const setInputValue = (value) => {\n                if (isCheckbox) {\n                    if (Array.isArray(value)) {\n                        const member = element.hasAttribute('value') ? element.value : checkboxValue;\n                        element.checked = member != null ? value.includes(member) : false;\n                    }\n                    else {\n                        element.checked = !!value;\n                    }\n                    return;\n                }\n                if (isMultiSelect) {\n                    const sel = element;\n                    const arr = Array.isArray(value) ? value : [];\n                    for (let i = 0; i < sel.options.length; i++) {\n                        const opt = sel.options[i];\n                        opt.selected = arr.includes(opt.value);\n                    }\n                    return;\n                }\n                element.value = String(value ?? (isNumeric ? 0 : ''));\n            };\n            this._createEffect(() => setInputValue(getValueEvaluator()));\n            const ctx = this._createContextProxy(undefined, element);\n            const updateData = () => {\n                const raw = getInputValue();\n                const currentVal = this._safeExecute(() => getValueEvaluator(), 'model read', undefined);\n                if (isCheckbox && Array.isArray(currentVal)) {\n                    const arr = currentVal;\n                    const member = element.hasAttribute('value') ? element.value : checkboxValue;\n                    if (member !== undefined) {\n                        const idx = arr.indexOf(member);\n                        if (element.checked) {\n                            if (idx === -1)\n                                arr.push(member);\n                        }\n                        else if (idx > -1) {\n                            arr.splice(idx, 1);\n                        }\n                    }\n                }\n                else if (isMultiSelect && Array.isArray(currentVal)) {\n                    const arr = currentVal;\n                    arr.splice(0, arr.length);\n                    raw.forEach(v => arr.push(v));\n                }\n                else {\n                    ctx.$value = raw;\n                    this._safeExecute(() => { setValueEvaluator.call(this._createMethodContext(), ctx); });\n                }\n            };\n            const t = element.type;\n            const eventType = (element[STR_TAGNAME] === 'SELECT' || t === 'checkbox' || t === 'radio' || t === 'file') ? 'change' : 'input';\n            this._addEventListenerWithCleanup(element, eventType, updateData);\n            this._addDirective(element, { type: 'model', property });\n        }\n        _bindIfDirective(element, expression) {\n            const self = this;\n            const placeholder = d.createComment('x-if');\n            element.parentNode?.insertBefore(placeholder, element);\n            element.__x_if_anchorParent = placeholder.parentElement || null;\n            const branches = [];\n            const makeActualElement = (el) => {\n                if (el[STR_TAGNAME] === STR_TEMPLATE) {\n                    const wrapper = d.createElement('div');\n                    wrapper.style[STR_DISPLAY] = 'contents';\n                    wrapper.appendChild(el.content.cloneNode(true));\n                    return { el: wrapper, isTemplate: true };\n                }\n                return { el: el, isTemplate: false };\n            };\n            const first = makeActualElement(element);\n            const firstEval = self._createElementEvaluator(expression, element);\n            branches.push({ el: first.el, test: firstEval, isTemplate: first.isTemplate });\n            if (!first.isTemplate)\n                first.el.__x_tool_bound = true;\n            const originalNodes = [element];\n            if (FT_IFB) {\n                if (FT_IFB) {\n                    let sib = element.nextElementSibling;\n                    while (sib) {\n                        const isElse = sib.hasAttribute('x-else');\n                        const isElseIf = sib.hasAttribute('x-else-if');\n                        if (!isElse && !isElseIf)\n                            break;\n                        if (sib.hasAttribute('x-else-if')) {\n                            const attr = sib.getAttribute('x-else-if') || '';\n                            const branch = makeActualElement(sib);\n                            const evalFn = self._createElementEvaluator((attr || '').trim(), sib);\n                            branches.push({ el: branch.el, test: evalFn, isTemplate: branch.isTemplate });\n                            if (!branch.isTemplate)\n                                branch.el.__x_tool_bound = true;\n                        }\n                        else {\n                            const branch = makeActualElement(sib);\n                            branches.push({ el: branch.el, test: null, isTemplate: branch.isTemplate });\n                            if (!branch.isTemplate)\n                                branch.el.__x_tool_bound = true;\n                        }\n                        sib.removeAttribute('x-else');\n                        sib.removeAttribute('x-else-if');\n                        originalNodes.push(sib);\n                        sib = sib.nextElementSibling;\n                    }\n                }\n            }\n            let active = -1;\n            for (const orig of originalNodes) {\n                if (orig.parentNode)\n                    orig.parentNode.removeChild(orig);\n            }\n            const mountBranch = (idx) => {\n                if (idx < 0)\n                    return;\n                const b = branches[idx];\n                if (!b.el.__x_tool_bound) {\n                    self._parseDirectives(b.el);\n                    b.el.__x_tool_bound = true;\n                }\n                element.__x_if_current?.parentNode?.removeChild(element.__x_if_current);\n                if (!b.el.parentNode) {\n                    placeholder.parentNode?.insertBefore(b.el, placeholder.nextSibling);\n                    this._transitionIn(b.el);\n                }\n                element.__x_if_current = b.el;\n                active = idx;\n            };\n            const unmountBranch = (idx, cb) => {\n                if (idx < 0) {\n                    if (cb)\n                        cb();\n                    return;\n                }\n                const b = branches[idx];\n                if (b.el.parentNode) {\n                    this._transitionOut(b.el, () => { if (b.el.parentNode)\n                        b.el.parentNode.removeChild(b.el); if (cb)\n                        cb(); });\n                }\n                else if (cb)\n                    cb();\n                active = -1;\n            };\n            const update = () => {\n                let next = -1;\n                for (let i = 0; i < branches[STR_LENGTH]; i++) {\n                    const b = branches[i];\n                    const pass = b.test ? !!b.test() : true;\n                    if (pass) {\n                        next = i;\n                        break;\n                    }\n                }\n                if (next === active)\n                    return;\n                if (active !== -1) {\n                    unmountBranch(active, () => mountBranch(next));\n                }\n                else {\n                    mountBranch(next);\n                }\n            };\n            const effect = self._createEffect(update);\n            self._addDirective(element, { type: 'if', expression, update: effect });\n        }\n        _bindEventDirective(element, eventName, expression, modifiers) {\n            const self = this;\n            const trimmed = (expression || '').trim();\n            const arrow = self._extractArrowFunction(trimmed);\n            const opts = modifiers ? {\n                once: !!modifiers.once,\n                passive: !!modifiers.passive,\n                capture: !!modifiers.capture,\n            } : undefined;\n            const onlySelf = !!modifiers?.self;\n            const shouldPrevent = !!modifiers?.prevent;\n            const shouldStop = !!modifiers?.stop;\n            const isOutside = !!modifiers?.outside;\n            const deferExec = !!modifiers?.defer;\n            const keyAliasMap = {\n                enter: ['enter'],\n                esc: ['escape', 'esc'],\n                escape: ['escape', 'esc'],\n                space: [' ', 'space', 'spacebar'],\n                tab: ['tab'],\n                backspace: ['backspace'],\n                delete: ['delete', 'del'],\n                del: ['delete', 'del'],\n                arrowup: ['arrowup', 'up'],\n                arrowdown: ['arrowdown', 'down'],\n                arrowleft: ['arrowleft', 'left'],\n                arrowright: ['arrowright', 'right'],\n                home: ['home'],\n                end: ['end'],\n                pageup: ['pageup'],\n                pagedown: ['pagedown']\n            };\n            const comboRequirements = {\n                ctrl: !!modifiers?.ctrl,\n                alt: !!modifiers?.alt,\n                shift: !!modifiers?.shift,\n                meta: !!modifiers?.meta,\n            };\n            const buttonMap = { left: 0, middle: 1, right: 2 };\n            const touchSingle = !!modifiers?.single;\n            const touchMulti = !!modifiers?.multi;\n            const modifierKeys = modifiers ? _Okeys(modifiers) : [];\n            const allowedKeys = [];\n            for (const m of modifierKeys) {\n                const aliases = keyAliasMap[m.toLowerCase()];\n                if (aliases)\n                    allowedKeys.push(...aliases);\n            }\n            const allowedButtons = [];\n            for (const m of modifierKeys) {\n                const btn = buttonMap[m.toLowerCase()];\n                if (btn !== undefined)\n                    allowedButtons.push(btn);\n            }\n            const needKeyCheck = allowedKeys.length > 0 || comboRequirements.ctrl || comboRequirements.alt || comboRequirements.shift || comboRequirements.meta;\n            const needButtonCheck = allowedButtons.length > 0;\n            const needTouchCheck = touchSingle || touchMulti;\n            const passesFilters = (event) => {\n                const path = event.composedPath ? event.composedPath() : null;\n                const tgt = (path && path.length ? path[0] : event.target);\n                if (isOutside) {\n                    if (!tgt)\n                        return false;\n                    if (element instanceof Node && (element === tgt || element.contains(tgt)))\n                        return false;\n                }\n                if (onlySelf && event.target !== element)\n                    return false;\n                if (needTouchCheck) {\n                    if (event instanceof TouchEvent) {\n                        const tCount = event.touches.length;\n                        if (touchSingle && tCount !== 1)\n                            return false;\n                        if (touchMulti && tCount < 2)\n                            return false;\n                    }\n                    else\n                        return false;\n                }\n                if (needButtonCheck) {\n                    if (event instanceof MouseEvent) {\n                        if (!allowedButtons.includes(event.button))\n                            return false;\n                    }\n                    else\n                        return false;\n                }\n                if (needKeyCheck) {\n                    if (!(event instanceof KeyboardEvent))\n                        return false;\n                    const k = (event.key || '').toLowerCase();\n                    if (allowedKeys.length > 0 && !allowedKeys.includes(k))\n                        return false;\n                    if (comboRequirements.ctrl && !event.ctrlKey)\n                        return false;\n                    if (comboRequirements.alt && !event.altKey)\n                        return false;\n                    if (comboRequirements.shift && !event.shiftKey)\n                        return false;\n                    if (comboRequirements.meta && !event.metaKey)\n                        return false;\n                }\n                return true;\n            };\n            const hasExpr = !!trimmed;\n            let runExpr = null;\n            const thisCtx = self._createMethodContext();\n            if (arrow) {\n                const compiledArrow = self._compileArrowForEvent(arrow.paramsList, arrow.body, arrow.isBlock);\n                const mapArgs = arrow.paramsList.length\n                    ? (event) => arrow.paramsList.map((_, idx) => (idx === 0 ? event : idx === 1 ? element : undefined))\n                    : () => [];\n                runExpr = (event) => {\n                    const ctx = self._createContextProxy(event, element);\n                    compiledArrow.call(thisCtx, ctx, ...mapArgs(event));\n                };\n            }\n            else if (hasExpr) {\n                const isStatement = trimmed.includes(';');\n                const executor = self._createEvaluator(trimmed, isStatement);\n                runExpr = (event) => {\n                    const ctx = self._createContextProxy(event, element);\n                    const result = executor.call(thisCtx, ctx);\n                    if (typeof result === 'function')\n                        result.call(thisCtx, event);\n                };\n            }\n            const createEventHandler = (event) => {\n                if (!passesFilters(event))\n                    return;\n                if (shouldPrevent && typeof event.preventDefault === 'function')\n                    event.preventDefault();\n                if (shouldStop && typeof event.stopPropagation === 'function')\n                    event.stopPropagation();\n                if (!runExpr)\n                    return;\n                if (deferExec && typeof queueMicrotask === 'function') {\n                    const ev = event;\n                    queueMicrotask(() => self._safeExecute(() => runExpr(ev)));\n                    return;\n                }\n                self._safeExecute(() => runExpr(event));\n            };\n            const cfg = this.framework._getConfig();\n            const canDelegate = !!cfg.delegate && ['click', 'input', 'change', 'keydown', 'keyup'].includes(eventName);\n            if (!isOutside && canDelegate) {\n                const remover = this.framework._registerDelegated(element, eventName, { filter: (e) => passesFilters(e), run: (e) => createEventHandler(e), once: !!modifiers?.once, comp: this });\n                this._addCleanupFunction(remover);\n            }\n            else {\n                const target = isOutside ? (element?.ownerDocument || d || document) : element;\n                self._addEventListenerWithCleanup(target, eventName, createEventHandler, opts);\n            }\n        }\n        _createEvaluator(expression, isStatement = false) {\n            const key = `${isStatement ? 's' : 'r'}:${expression}`;\n            let fn = this._expressionCache.get(key);\n            if (!fn) {\n                fn = new Function('ctx', `with(ctx){${isStatement ? expression : `return (${expression})`}}`);\n                this._expressionCache.set(key, fn);\n            }\n            return fn;\n        }\n        _createElementEvaluator(expression, element) {\n            const self = this;\n            const compiled = self._createEvaluator(expression);\n            return () => this._safeExecute(() => compiled.call(self._createMethodContext(), self._createContextProxy(undefined, element)), `Error evaluating expression: ${expression}`);\n        }\n        _extractArrowFunction(expression) {\n            let m = expression.match(/^\\s*\\(\\s*([^)]*?)\\s*\\)\\s*=>\\s*([\\s\\S]+)$/);\n            if (!m)\n                m = expression.match(/^\\s*([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*=>\\s*([\\s\\S]+)$/);\n            if (!m)\n                return null;\n            const params = (m[1] || '')\n                .split(',')\n                .map(p => p.trim())\n                .filter(Boolean);\n            const body = (m[2] || '').trim();\n            const isBlock = body.startsWith('{') && body.endsWith('}');\n            const finalBody = isBlock ? body.slice(1, -1) : body;\n            return { paramsList: params, body: finalBody, isBlock };\n        }\n        _compileArrowForEvent(params, body, isBlock) {\n            const content = isBlock ? body : 'return ( ' + body + ' );';\n            return new Function('ctx', ...params, 'with(ctx){ ' + content + ' }');\n        }\n        _wrapData(data, parentKey) {\n            if (!(Object.getPrototypeOf(data) === Object.prototype || ARRAY_ISARRAY(data)))\n                return data;\n            const self = this;\n            if (!this._deepReactiveCache)\n                this._deepReactiveCache = new WeakMap();\n            if (this._deepReactiveCache.has(data))\n                return this._deepReactiveCache.get(data);\n            const proxy = new Proxy(data, {\n                get: (target, p, receiver) => {\n                    if (ARRAY_ISARRAY(target)) {\n                        if (p === Symbol.iterator) {\n                            self._trackDependency(parentKey);\n                            return Reflect.get(target, p, receiver);\n                        }\n                        if (p === 'length' || (typeof p === 'string' && /^\\d+$/.test(p))) {\n                            self._trackDependency(parentKey);\n                        }\n                    }\n                    else {\n                        self._trackDependency(parentKey);\n                    }\n                    const value = Reflect.get(target, p, receiver);\n                    if (ARRAY_ISARRAY(target) && typeof value === 'function' && ['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse', 'copyWithin', 'fill'].includes(p)) {\n                        return function (...args) {\n                            const arr = target;\n                            const beforeLen = arr.length;\n                            const beforeFirst = arr[0];\n                            const beforeLast = arr[beforeLen - 1];\n                            const result = value.apply(target, args);\n                            if (arr.length !== beforeLen || arr[0] !== beforeFirst || arr[arr.length - 1] !== beforeLast) {\n                                self._onDataChange(parentKey);\n                            }\n                            return result;\n                        };\n                    }\n                    const type = typeof value;\n                    if (value && type === 'object') {\n                        return self._wrapData(value, parentKey);\n                    }\n                    return value;\n                },\n                ownKeys: (target) => { return Reflect.ownKeys(target); },\n                has: (target, key) => { return Reflect.has(target, key); },\n                set: (target, p, value) => {\n                    if (self._isDestroyed)\n                        return true;\n                    if (typeof p === 'symbol')\n                        return true;\n                    const had = Reflect.has(target, p);\n                    const oldValue = had ? Reflect.get(target, p) : undefined;\n                    if (value && typeof value === 'object') {\n                        self._wrapData(value, parentKey);\n                    }\n                    if (!had) {\n                        try {\n                            Reflect.defineProperty(target, p, {\n                                configurable: true,\n                                enumerable: true,\n                                writable: true,\n                                value\n                            });\n                        }\n                        catch {\n                            Reflect.set(target, p, value);\n                        }\n                        self._onDataChange(parentKey);\n                        return true;\n                    }\n                    if (oldValue === value)\n                        return true;\n                    Reflect.set(target, p, value);\n                    self._onDataChange(parentKey);\n                    return true;\n                },\n                deleteProperty: (target, p) => Reflect.deleteProperty(target, p)\n            });\n            this._deepReactiveCache.set(data, proxy);\n            return proxy;\n        }\n        _createReactiveData(data) {\n            const self = this;\n            return new Proxy(data, {\n                get: (target, property, receiver) => {\n                    const value = Reflect.get(target, property, receiver);\n                    if (property === Symbol.iterator)\n                        return value;\n                    if (typeof property !== 'symbol') {\n                        self._trackDependency(property);\n                    }\n                    if (value && typeof value == 'object') {\n                        return self._wrapData(value, property);\n                    }\n                    return value;\n                },\n                ownKeys: (target) => Reflect.ownKeys(target),\n                has: (target, key) => Reflect.has(target, key),\n                set: (target, property, value, receiver) => {\n                    if (self._isDestroyed)\n                        return true;\n                    if (property === Symbol.iterator && ARRAY_ISARRAY(target))\n                        return value;\n                    const oldValue = Reflect.get(target, property);\n                    if (oldValue === value)\n                        return true;\n                    const had = Reflect.has(target, property);\n                    if (!had) {\n                        try {\n                            Reflect.defineProperty(target, property, {\n                                configurable: true,\n                                enumerable: true,\n                                writable: true,\n                                value\n                            });\n                        }\n                        catch {\n                            Reflect.set(target, property, value, receiver);\n                        }\n                    }\n                    else {\n                        Reflect.set(target, property, value, receiver);\n                    }\n                    this._onDataChange(property);\n                    if (this._propUpdateActive && property !== '$props') {\n                        const pc = target.$props;\n                        if (pc)\n                            pc[property] = value;\n                        const eff = this._propEffects[property];\n                        if (eff && !this._runningPropEffect) {\n                            this._runningPropEffect = true;\n                            this._safeExecute(() => eff.call(this._createMethodContext(), value, oldValue));\n                            this._runningPropEffect = false;\n                        }\n                    }\n                    return true;\n                }\n            });\n        }\n        _createMethodContext(_includeComputed = true) {\n            const specials = {\n                '$log': (..._args) => { },\n                '$destroy': () => this.destroy(),\n                '$forceUpdate': () => this._scheduleRender(),\n                '$addCleanupFunction': (fn) => this._addCleanupFunction(fn),\n                '$nextTick': (cb) => {\n                    if (cb) {\n                        this._nextTickQueue.push(cb);\n                        if (!this._renderScheduled)\n                            queueMicrotask(() => {\n                                if (!this._renderScheduled && this._nextTickQueue.length) {\n                                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                                    for (const fn of q) {\n                                        try {\n                                            fn();\n                                        }\n                                        catch { }\n                                    }\n                                }\n                            });\n                        return;\n                    }\n                    return new Promise(resolve => {\n                        this._nextTickQueue.push(() => resolve());\n                        if (!this._renderScheduled)\n                            queueMicrotask(() => {\n                                if (!this._renderScheduled && this._nextTickQueue.length) {\n                                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                                    for (const fn of q) {\n                                        try {\n                                            fn();\n                                        }\n                                        catch { }\n                                    }\n                                }\n                            });\n                    });\n                },\n                '$el': this._element,\n                '$id': this._id,\n                '$isMounted': this._isMounted,\n                '$isDestroyed': this._isDestroyed,\n                '$parent': this._parent,\n                '$children': this._children,\n                '$mutate': (fn) => {\n                    const prevMethod = this._isInMethodExecution;\n                    const prevComputed = this._isInComputedEvaluation;\n                    this._isInMethodExecution = false;\n                    this._isInComputedEvaluation = false;\n                    try {\n                        return typeof fn === 'function' ? fn() : undefined;\n                    }\n                    finally {\n                        this._isInMethodExecution = prevMethod;\n                        this._isInComputedEvaluation = prevComputed;\n                        this._scheduleRender();\n                    }\n                }\n            };\n            return new Proxy(this._data, {\n                get: (target, propStr) => {\n                    if (propStr in target) {\n                        this._trackDependency(propStr);\n                        const v = target[propStr];\n                        return v;\n                    }\n                    if (FT_C && (propStr in this._computed))\n                        return this._getComputedValue(propStr);\n                    if (propStr in specials)\n                        return specials[propStr];\n                    return this._methods[propStr];\n                },\n                set: (_target, propStr, value) => {\n                    if (this._isInComputedEvaluation) {\n                        if (typeof console !== 'undefined' && console.warn)\n                            console.warn(`Ignored mutation of '${String(propStr)}' inside ${this._isInComputedEvaluation ? 'computed' : 'method'}; wrap in $mutate(()=>{ ... }) to apply.`);\n                        return true;\n                    }\n                    this._data[propStr] = value;\n                    return true;\n                }\n            });\n        }\n        _createContextProxy(event, targetElement) {\n            const component = this;\n            const mergedScope = targetElement ? this._collectLoopScope(targetElement) : null;\n            const scopeKeys = mergedScope ? new Set(_Okeys(mergedScope)) : new Set();\n            const gWindow = (typeof window !== 'undefined' ? window : undefined);\n            const gDocument = (typeof document !== 'undefined' ? document : undefined);\n            const cfg = this.framework._getConfig();\n            const sandbox = !!cfg.sandboxExpressions;\n            const allow = new Set((cfg.allowGlobals || []).map(s => String(s)));\n            const wrapTarget = (t) => {\n                if (!t)\n                    return t;\n                const hasAdd = typeof t.addEventListener === 'function';\n                if (!hasAdd)\n                    return t;\n                const handlerMap = new WeakMap();\n                const makeKey = (event, options) => {\n                    try {\n                        return event + '|' + (options === undefined ? '' : (typeof options === 'object' ? JSON.stringify(options) : String(options)));\n                    }\n                    catch {\n                        return event + '|';\n                    }\n                };\n                return new Proxy(t, {\n                    get(target, prop, receiver) {\n                        if (prop === 'addEventListener') {\n                            return function (event, handler, options) {\n                                target.addEventListener(event, handler, options);\n                                const remover = component._addCleanupFunction(() => { try {\n                                    target.removeEventListener(event, handler, options);\n                                }\n                                catch { } });\n                                try {\n                                    if (typeof handler === 'function' && remover) {\n                                        let m = handlerMap.get(handler);\n                                        if (!m) {\n                                            m = new Map();\n                                            handlerMap.set(handler, m);\n                                        }\n                                        m.set(makeKey(event, options), remover);\n                                    }\n                                }\n                                catch { }\n                            };\n                        }\n                        if (prop === 'removeEventListener') {\n                            return function (event, handler, options) {\n                                try {\n                                    target.removeEventListener(event, handler, options);\n                                }\n                                catch { }\n                                try {\n                                    if (typeof handler === 'function') {\n                                        const m = handlerMap.get(handler);\n                                        if (m) {\n                                            const key = makeKey(event, options);\n                                            const rem = m.get(key);\n                                            if (rem) {\n                                                try {\n                                                    rem();\n                                                }\n                                                catch { }\n                                                ;\n                                                m.delete(key);\n                                            }\n                                            if (m.size === 0)\n                                                handlerMap.delete(handler);\n                                        }\n                                    }\n                                }\n                                catch { }\n                            };\n                        }\n                        if (prop === 'querySelector') {\n                            return function (sel) { const res = target.querySelector(sel); return wrapTarget(res); };\n                        }\n                        if (prop === 'querySelectorAll') {\n                            return function (sel) { const list = target.querySelectorAll(sel); return Array.from(list).map(wrapTarget); };\n                        }\n                        if (prop === 'getElementById') {\n                            return function (id) { const res = target.getElementById(id); return wrapTarget(res); };\n                        }\n                        if (prop === 'document') {\n                            const doc = target.document;\n                            return wrapTarget(doc) || doc;\n                        }\n                        if (prop === 'body' && target === gDocument) {\n                            const b = target.body;\n                            return wrapTarget(b) || b;\n                        }\n                        if (prop === 'defaultView' && target === gDocument) {\n                            const w = target.defaultView;\n                            return wrapTarget(w) || w;\n                        }\n                        return Reflect.get(target, prop, receiver);\n                    }\n                });\n            };\n            const _timeoutRemovers = new Map();\n            const _intervalRemovers = new Map();\n            const _rafRemovers = new Map();\n            const ctxSetTimeout = (fn, ms, ...args) => {\n                const id = gWindow?.setTimeout?.(fn, ms, ...args);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.clearTimeout?.(id);\n                    }\n                    catch { } });\n                    _timeoutRemovers.set(id, remover);\n                }\n                return id;\n            };\n            const ctxSetInterval = (fn, ms, ...args) => {\n                const id = gWindow?.setInterval?.(fn, ms, ...args);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.clearInterval?.(id);\n                    }\n                    catch { } });\n                    _intervalRemovers.set(id, remover);\n                }\n                return id;\n            };\n            const ctxRequestAnimationFrame = (cb) => {\n                const id = gWindow?.requestAnimationFrame?.(cb);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.cancelAnimationFrame?.(id);\n                    }\n                    catch { } });\n                    _rafRemovers.set(id, remover);\n                }\n                return id;\n            };\n            const wrapObserverCtor = (Orig) => {\n                if (!Orig)\n                    return undefined;\n                const Wrapped = function (...args) {\n                    const inst = new Orig(...args);\n                    component._addCleanupFunction(() => { try {\n                        inst.disconnect();\n                    }\n                    catch { } });\n                    return inst;\n                };\n                Wrapped.prototype = Orig.prototype;\n                return Wrapped;\n            };\n            const specials = {\n                '$target': targetElement || null,\n                '$event': event || null,\n                ...(sandbox && !allow.has('setTimeout') ? {} : { 'setTimeout': ctxSetTimeout }),\n                ...(sandbox && !allow.has('clearTimeout') ? {} : { 'clearTimeout': (id) => { try {\n                        gWindow?.clearTimeout?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _timeoutRemovers.get(id);\n                            if (r) {\n                                r();\n                                _timeoutRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('setInterval') ? {} : { 'setInterval': ctxSetInterval }),\n                ...(sandbox && !allow.has('clearInterval') ? {} : { 'clearInterval': (id) => { try {\n                        gWindow?.clearInterval?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _intervalRemovers.get(id);\n                            if (r) {\n                                r();\n                                _intervalRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('requestAnimationFrame') ? {} : { 'requestAnimationFrame': ctxRequestAnimationFrame }),\n                ...(sandbox && !allow.has('cancelAnimationFrame') ? {} : { 'cancelAnimationFrame': (id) => { try {\n                        gWindow?.cancelAnimationFrame?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _rafRemovers.get(id);\n                            if (r) {\n                                r();\n                                _rafRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('MutationObserver') ? {} : { 'MutationObserver': wrapObserverCtor(gWindow?.MutationObserver) }),\n                ...(sandbox && !allow.has('ResizeObserver') ? {} : { 'ResizeObserver': wrapObserverCtor(gWindow?.ResizeObserver) }),\n                ...(sandbox && !allow.has('IntersectionObserver') ? {} : { 'IntersectionObserver': wrapObserverCtor(gWindow?.IntersectionObserver) }),\n                ...(sandbox && !allow.has('window') ? {} : { 'window': wrapTarget(gWindow) }),\n                ...(sandbox && !allow.has('document') ? {} : { 'document': wrapTarget(gDocument) })\n            };\n            return new Proxy({}, {\n                get: (_t, propStr) => {\n                    if (mergedScope && propStr in mergedScope)\n                        return mergedScope[propStr];\n                    if (propStr in component._data)\n                        return component._data[propStr];\n                    if (propStr in component._computed)\n                        return component._getComputedValue(propStr);\n                    if (propStr in component._methods)\n                        return component._methods[propStr];\n                    if (propStr in specials)\n                        return specials[propStr];\n                    return undefined;\n                },\n                set: (_t, propStr, value) => {\n                    if (mergedScope && scopeKeys.has(propStr)) {\n                        mergedScope[propStr] = value;\n                    }\n                    else {\n                        component._data[propStr] = value;\n                    }\n                    return true;\n                },\n                has: (_t, propStr) => !!(mergedScope && propStr in mergedScope) ||\n                    propStr in component._data ||\n                    propStr in component._computed ||\n                    propStr in component._methods ||\n                    propStr in specials\n            });\n        }\n        _bindCustomDirective(element, _name, expression, directive, modifiers) {\n            const self = this;\n            const evaluator = self._createElementEvaluator(expression, element);\n            const directiveInfo = { type: 'custom', expression, customDirective: directive };\n            if (directive.bind) {\n                self._safeExecute(() => directive.bind(element, evaluator(), expression, self, modifiers, evaluator));\n            }\n            const update = () => {\n                if (directive.update)\n                    self._safeExecute(() => directive.update(element, evaluator(), expression, self, modifiers, evaluator));\n            };\n            const effect = self._createEffect(update);\n            directiveInfo.update = effect;\n            self._addDirective(element, directiveInfo);\n        }\n        _bindAttributeDirective(element, attributeName, expression) {\n            const self = this;\n            const evaluator = self._createElementEvaluator(expression, element);\n            if (attributeName === 'class') {\n                const el = element;\n                if (!self._initialClassSets.get(el)) {\n                    const baseSet = new Set();\n                    const oc = el.className || '';\n                    if (oc)\n                        for (const cls of oc.split(/\\s+/)) {\n                            if (cls)\n                                baseSet.add(cls);\n                        }\n                    self._initialClassSets.set(el, baseSet);\n                }\n            }\n            const elAny = element;\n            let propName = null;\n            if (attributeName in elAny)\n                propName = attributeName;\n            else {\n                const camel = attributeName.replace(/-([a-z])/g, (_, c) => c.toUpperCase());\n                if (camel in elAny)\n                    propName = camel;\n                else if (attributeName.toLowerCase() === 'readonly' && 'readOnly' in elAny)\n                    propName = 'readOnly';\n            }\n            const isBooleanProp = !!(propName && typeof elAny[propName] === 'boolean');\n            const hasNonFunctionProp = !!(propName && (propName in elAny) && typeof elAny[propName] !== 'function');\n            const isKnownBooleanAttr = !!ReactiveComponent._BA[attributeName.toLowerCase()];\n            const update = () => {\n                const value = evaluator();\n                if (attributeName === 'class') {\n                    const el = element;\n                    const base = self._initialClassSets.get(el);\n                    if (typeof value === 'string') {\n                        el.className = base && base.size ? [...base].join(' ') + (value ? ' ' + value : '') : value || '';\n                    }\n                    else if (ARRAY_ISARRAY(value)) {\n                        if (base && base.size)\n                            el.className = [...base, ...value.filter(Boolean)].join(' ');\n                        else\n                            el.className = value.filter(Boolean).join(' ');\n                    }\n                    else if (value && typeof value === 'object') {\n                        if (base && base.size)\n                            el.className = [...base].join(' ');\n                        for (const raw in value) {\n                            const on = !!value[raw];\n                            if (!raw)\n                                continue;\n                            const tokens = raw.split(/\\s+/);\n                            for (let i = 0; i < tokens.length; i++) {\n                                const tk = tokens[i];\n                                if (!tk)\n                                    continue;\n                                el.classList.toggle(tk, on);\n                            }\n                        }\n                    }\n                    else if (value == null && base && base.size) {\n                        el.className = [...base].join(' ');\n                    }\n                    else if (value == null) {\n                        el.removeAttribute('class');\n                    }\n                    return;\n                }\n                if (attributeName === STR_STYLE) {\n                    const el = element;\n                    if (typeof value === 'string') {\n                        el.style.cssText = value;\n                        return;\n                    }\n                    if (value && typeof value === 'object') {\n                        Object.assign(el.style, value);\n                        return;\n                    }\n                    if (value == null)\n                        el.removeAttribute('style');\n                    return;\n                }\n                if ((isBooleanProp && propName) || isKnownBooleanAttr) {\n                    const boolVal = !!value;\n                    if (propName && isBooleanProp)\n                        elAny[propName] = boolVal;\n                    if (boolVal)\n                        element.setAttribute(attributeName, '');\n                    else\n                        element.removeAttribute(attributeName);\n                    return;\n                }\n                let normalized = null;\n                if (value && typeof value === 'object') {\n                    const parts = [];\n                    for (const k in value) {\n                        if (value[k])\n                            parts.push(k);\n                    }\n                    normalized = parts.length ? parts.join(' ') : null;\n                }\n                else if (value !== null && value !== undefined) {\n                    normalized = String(value);\n                }\n                if (hasNonFunctionProp && propName) {\n                    if (normalized !== null) {\n                        try {\n                            elAny[propName] = normalized;\n                        }\n                        catch (e) {\n                            try {\n                                element.setAttribute(attributeName, normalized);\n                            }\n                            catch { }\n                        }\n                    }\n                    else {\n                        element.removeAttribute(attributeName);\n                    }\n                    return;\n                }\n                if (normalized !== null) {\n                    const cur = element.getAttribute(attributeName);\n                    if (cur !== normalized)\n                        element.setAttribute(attributeName, normalized);\n                }\n                else {\n                    if (element.hasAttribute(attributeName))\n                        element.removeAttribute(attributeName);\n                }\n            };\n            const effect = self._createEffect(update);\n            self._addDirective(element, { type: 'bind', expression, update: effect });\n        }\n        _collectLoopScope(el) {\n            if (!el)\n                return null;\n            if (!el.parentElement) {\n                const cur = el.__x_if_current;\n                if (cur && cur.parentElement) {\n                    el = cur;\n                }\n                else {\n                    const anchorParent = el.__x_if_anchorParent;\n                    if (anchorParent)\n                        el = anchorParent;\n                }\n            }\n            const merged = {};\n            let node = el;\n            while (node) {\n                const scope = this._loopScopes.get(node);\n                if (scope)\n                    Object.assign(merged, scope);\n                if (node === this.element)\n                    break;\n                node = node.parentElement;\n            }\n            return _Okeys(merged).length ? merged : null;\n        }\n        _updateElementDirectives(root) {\n            for (const [element, directives] of this._directives) {\n                for (const directive of directives) {\n                    if ((root === element || (element instanceof Element && root.contains(element))) && directive.update) {\n                        directive.update();\n                    }\n                }\n            }\n        }\n        _bindForDirective(element, expression) {\n            const self = this;\n            const match = expression.trim().match(/^(?:\\(\\s*([^,\\s]+)\\s*(?:,\\s*([^\\)]+))?\\s*\\)|([^,\\s]+))\\s+(in|of)\\s+(.+)$/);\n            if (!match) {\n                return;\n            }\n            const itemVar = match[1] || match[3];\n            const indexVar = match[2];\n            const listCode = match[5];\n            const placeholder = d.createComment('x-for');\n            element.parentNode?.insertBefore(placeholder, element);\n            let templateToClone;\n            if (element[STR_TAGNAME] === STR_TEMPLATE) {\n                templateToClone = d.createElement('div');\n                templateToClone.style[STR_DISPLAY] = 'contents';\n                templateToClone.appendChild(element.content.cloneNode(true));\n                element.parentNode?.removeChild(element);\n            }\n            else {\n                templateToClone = element;\n                element.parentNode?.removeChild(element);\n            }\n            const contextAnchor = placeholder.parentElement || self.element;\n            const listEval = self._createElementEvaluator(listCode.trim(), contextAnchor);\n            const instances = [];\n            const createScope = (item, idxOrKey) => {\n                const scope = { [itemVar]: item };\n                if (indexVar)\n                    scope[indexVar] = idxOrKey;\n                return scope;\n            };\n            const update = () => {\n                const norm = self._safeExecute(() => {\n                    const result = listEval();\n                    if (_AisArr(result))\n                        return { list: result, keys: null };\n                    if (typeof Map !== 'undefined' && result instanceof Map) {\n                        return { list: _Afrom(result.values()), keys: _Afrom(result.keys()) };\n                    }\n                    if (typeof Set !== 'undefined' && result instanceof Set) {\n                        return { list: _Afrom(result.values()), keys: null };\n                    }\n                    if (result && typeof result[Symbol.iterator] === 'function') {\n                        return { list: _Afrom(result), keys: null };\n                    }\n                    if (result && typeof result === 'object') {\n                        const keys = Object.keys(result);\n                        const list = keys.map(k => result[k]);\n                        return { list, keys };\n                    }\n                    return { list: [], keys: null };\n                }, 'x-for eval error', { list: [], keys: null });\n                const list = norm.list;\n                const keysArr = norm.keys;\n                if (instances.length > list.length) {\n                    while (instances.length > list.length) {\n                        const inst = instances.pop();\n                        if (inst.parentNode)\n                            inst.parentNode.removeChild(inst);\n                    }\n                }\n                const minLen = Math.min(instances.length, list.length);\n                for (let i = 0; i < minLen; i++) {\n                    const inst = instances[i];\n                    const keyVal = keysArr ? keysArr[i] : i;\n                    self._loopScopes.set(inst, createScope(list[i], keyVal));\n                    self._updateElementDirectives(inst);\n                }\n                if (list.length > instances.length) {\n                    const frag = d.createDocumentFragment();\n                    const start = instances.length;\n                    for (let i = start; i < list.length; i++) {\n                        const clone = templateToClone.cloneNode(true);\n                        clone.removeAttribute('x-for');\n                        const keyVal = keysArr ? keysArr[i] : i;\n                        self._loopScopes.set(clone, createScope(list[i], keyVal));\n                        try {\n                            self._parseDirectives(clone);\n                        }\n                        catch { }\n                        frag.appendChild(clone);\n                        instances.push(clone);\n                    }\n                    const ref = instances[start - 1] || placeholder;\n                    if (ref.parentNode)\n                        ref.parentNode.insertBefore(frag, ref.nextSibling);\n                }\n            };\n            const dir = { type: 'for', expression };\n            const effect = self._createEffect(update, dir);\n            dir.update = effect;\n            self._addDirective(placeholder, dir);\n        }\n        _render() {\n            const self = this;\n            for (const directives of self._directives.values()) {\n                for (const dr of directives) {\n                    if (XTOOL_ENABLE_STATIC_DIRECTIVES && dr._static)\n                        continue;\n                    if (dr.update) {\n                        try {\n                            dr.update();\n                        }\n                        catch (error) {\n                            if (!(error instanceof ReferenceError)) { }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    ReactiveComponent._BA = {\n        itemscope: 1, formnovalidate: 1, novalidate: 1, default: 1\n    };\n    const xTool = new XToolFramework();\n    return xTool;\n}();\nif (typeof window !== 'undefined') {\n    const w = window;\n    w.XTool = XToolFramework;\n    w.FyneJS = XToolFramework;\n}\n//# sourceMappingURL=x-tool.js.map"],"mappings":"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","ignoreList":[]}