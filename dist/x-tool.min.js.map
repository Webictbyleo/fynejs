{"version":3,"file":"x-tool.min.js","names":["ARRAY_ISARRAY","Array","isArray","XToolFramework","_Afrom","from","_AisArr","_Okeys","Object","keys","_logErr","_args","STR_STYLE","STR_DISPLAY","STR_NONE","STR_TAGNAME","STR_TEMPLATE","STR_LENGTH","XTOOL_ENABLE_STATIC_DIRECTIVES","d","document","head","getElementById","style","createElement","id","textContent","appendChild","PFX","attrName","name","ReactiveComponent","attachToParent","parent","this","_parent","_addChild","_id","framework","_framework","element","_element","el","isBound","_isBound","v","isMounted","_isMounted","isDestroyed","_isDestroyed","_addDirective","directive","existing","_directives","get","push","set","constructor","def","_propUpdateActive","_runningPropEffect","_beforeMountCalled","_children","_computed","_propEffects","_computedCache","Map","_computedDeps","_inverseComputedDeps","_isInComputedEvaluation","_isInMethodExecution","_allEffects","Set","_hasComputed","_cleanupFunctions","_eventListeners","_loopScopes","WeakMap","_expressionCache","_propertyDependencies","_activeEffect","_renderScheduled","_nextTickQueue","_transitionConfigs","_transitionEvaluators","_initialClassSets","_propParent","_callLifecycleHook","hookName","hook","_lifecycle","_safeExecute","_runWithGlobalInterception","String","_addCleanupFunction","fn","wrapper","delete","add","_addEventListenerWithCleanup","event","handler","options","addEventListener","_originalMethods","methods","computed","propEffects","length","mounted","unmounted","destroyed","updated","beforeMount","beforeUnmount","beforeDestroy","_data","_createReactiveData","data","_methods","_bindMethods","callBeforeMount","_onDataChange","_property","clear","effectsToRun","effect","_scheduleRender","boundMethods","methodName","originalMethod","args","prev","_getComputedValue","key","_trackDependency","has","computeFn","dep","value","call","_createMethodContext","propKey","deps","includes","requestAnimationFrame","_render","q","splice","_errorMsg","fallback","e","console","error","bindToElement","completeBinding","getContext","includeComputed","_applyAsyncTemplateResolved","_parseDirectives","_getComponentByElement","_registerElement","_setupDOMRemovalDetection","child","_removeChild","index","indexOf","src","test","body","trim","Function","undefined","_createContextProxy","apply","destroy","self","directives","type","customDirective","unbind","removeEventListener","cleanup","_propEffect","values","idx","_unregisterElement","_deepReactiveCache","queueMicrotask","_unregisterComponent","_initReactiveProps","expr","evalFn","update","obj","ctx","$props","k","processElement","isRoot","hasAttribute","isComponentTag","hasTextOrHtml","forAttr","a","attributes","n","startsWith","_bindDirective","attr","_bindTextInterpolationsIn","_walkElements","nodes","childNodes","node","nodeType","Node","TEXT_NODE","textNode","raw","nodeValue","__x_tool_ti","parentTag","parentElement","tagName","toLowerCase","inCode","segs","i","open","literal","slice","bs","p","charCodeAt","prefixStart","prefixEnd","repeat","close","hasExpr","some","s","hasEscaped","evaluators","filter","map","_createElementEvaluator","exprIndex","out","val","dirInfo","expression","_createEffect","processor","firstElementChild","next","nextElementSibling","directiveName","isShortBind","removeAttribute","_bindAttributeDirective","_bindTransitionDirective","_bindSimpleDirective","_bindModelDirective","_bindIfDirective","_bindForDirective","prefix","rest","split","suffix","mods","modifiers","reduce","acc","m","_getCustomDirective","_bindCustomDirective","_bindEventDirective","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","_transitionIn","done","userConf","staticConf","conf","assign","end","_removeClasses","_addClasses","offsetWidth","_onTransitionEnd","_transitionOut","cb","called","setTimeout","_tokenizeClasses","input","flatMap","Boolean","classes","tokens","classList","t","remove","updateFn","directiveRef","_static","found","evaluator","originalDisplay","_prevShown","innerHTML","property","isCheckbox","isNumeric","isMultiSelect","multiple","Reflect","defineProperty","configurable","enumerable","writable","getValueEvaluator","setValueEvaluator","_createEvaluator","checkboxValue","loopScope","_collectLoopScope","inferCheckboxValue","member","checked","sel","arr","opt","selected","setInputValue","eventType","parseFloat","getInputValue","currentVal","forEach","$value","placeholder","createComment","parentNode","insertBefore","__x_if_anchorParent","branches","makeActualElement","content","cloneNode","isTemplate","first","firstEval","__x_tool_bound","originalNodes","sib","isElse","isElseIf","getAttribute","branch","active","orig","removeChild","mountBranch","b","__x_if_current","nextSibling","unmountBranch","eventName","trimmed","arrow","_extractArrowFunction","opts","once","passive","capture","onlySelf","shouldPrevent","prevent","shouldStop","stop","keyAliasMap","esc","escape","space","tab","backspace","del","arrowup","arrowdown","arrowleft","arrowright","home","pageup","pagedown","comboRequirements","ctrl","alt","shift","meta","buttonMap","left","middle","right","touchSingle","single","touchMulti","multi","modifierKeys","allowedKeys","aliases","allowedButtons","btn","needKeyCheck","needButtonCheck","needTouchCheck","passesFilters","target","TouchEvent","tCount","touches","MouseEvent","button","KeyboardEvent","ctrlKey","altKey","shiftKey","metaKey","runExpr","thisCtx","compiledArrow","_compileArrowForEvent","paramsList","isBlock","mapArgs","_","isStatement","executor","result","createEventHandler","preventDefault","stopPropagation","_getConfig","delegate","remover","_registerDelegated","run","comp","compiled","match","params","endsWith","_wrapData","parentKey","getPrototypeOf","prototype","proxy","Proxy","receiver","Symbol","iterator","beforeLen","beforeFirst","beforeLast","ownKeys","had","oldValue","deleteProperty","pc","eff","_includeComputed","specials","$log","$destroy","$forceUpdate","$addCleanupFunction","$nextTick","Promise","resolve","$el","$id","$isMounted","$isDestroyed","$parent","$children","$mutate","prevMethod","prevComputed","propStr","_target","warn","targetElement","component","mergedScope","scopeKeys","gWindow","window","gDocument","cfg","sandbox","sandboxExpressions","allow","allowGlobals","wrapTarget","handlerMap","makeKey","JSON","stringify","prop","rem","size","res","querySelector","list","querySelectorAll","doc","w","defaultView","_timeoutRemovers","_intervalRemovers","_rafRemovers","wrapObserverCtor","Orig","Wrapped","inst","disconnect","$target","$event","ms","clearTimeout","r","setInterval","clearInterval","cancelAnimationFrame","MutationObserver","ResizeObserver","IntersectionObserver","_t","_name","directiveInfo","bind","attributeName","baseSet","oc","className","cls","elAny","propName","camel","replace","c","toUpperCase","isBooleanProp","hasNonFunctionProp","isKnownBooleanAttr","_BA","base","join","on","tk","toggle","cssText","boolVal","setAttribute","normalized","parts","cur","anchorParent","merged","scope","_updateElementDirectives","root","Element","contains","itemVar","indexVar","listCode","templateToClone","contextAnchor","listEval","instances","createScope","item","idxOrKey","dir","norm","keysArr","pop","minLen","Math","min","keyVal","frag","createDocumentFragment","start","clone","ref","dr","itemscope","formnovalidate","novalidate","default","_components","_byEl","_pending","_config","_customDirectives","_namedComponentDefs","_delegated","_delegatedRootBound","Error","registerComponent","definition","_getRegisteredComponentDef","init","config","container","debug","staticDirectives","_hpf","readyState","_applyPrefixInitialCSS","_autoDiscoverComponents","_ensureRootObserver","_ensureDelegation","createComponent","_generateComponentId","componentElements","_bindElementAsComponent","reusable","_instantiateNamedComponent","_processPending","components","lastComponent","maybe","parentForEval","dataExpression","parentCtx","_parseDataExpression","initExpr","existingMounted","isConnected","Date","now","random","toString","substring","componentId","_log","_rootObserver","records","addedNodes","removedNodes","stack","_onComponentSourceChanged","observe","childList","subtree","attributeFilter","source","parentComp","par","props","dynamicPropObj","rawPropExpression","propExpr","initDef","baseData","makeData","compDef","originalChildren","firstChild","template","applyTemplate","tpl","slots","slotEl","matched","replaceChild","tplVal","then","html","nested","cancelBubble","h","captureEvents","bubbleEvents","ev","entry","l","XTool","FyneJS"],"sourceRoot":"./dist","sources":["dist/x-tool.js"],"sourcesContent":["\"use strict\";\nconst ARRAY_ISARRAY = Array.isArray;\nconst FT_C = true;\nconst FT_TI = typeof __FEAT_TEXT_INTERP__ === 'boolean' ? __FEAT_TEXT_INTERP__ : true;\nconst _FT_DR = typeof __FEAT_DEEP_REACTIVE__ === 'boolean' ? __FEAT_DEEP_REACTIVE__ : true;\nconst FT_IFB = typeof __FEAT_IF_BRANCHES__ === 'boolean' ? __FEAT_IF_BRANCHES__ : true;\nconst FT_TR = typeof __FEAT_TRANSITION__ === 'boolean' ? __FEAT_TRANSITION__ : true;\nconst XToolFramework = function () {\n    const _Afrom = Array.from;\n    const _AisArr = ARRAY_ISARRAY;\n    const _Okeys = Object.keys;\n    const _logErr = (..._args) => { };\n    const STR_STYLE = 'style';\n    const STR_DISPLAY = 'display';\n    const STR_NONE = 'none';\n    const STR_TAGNAME = 'tagName';\n    const STR_TEMPLATE = 'TEMPLATE';\n    const STR_LENGTH = 'length';\n    let XTOOL_ENABLE_STATIC_DIRECTIVES = true;\n    const d = (typeof document !== 'undefined' ? document : null);\n    try {\n        if (d && d.head && !d.getElementById('x-tool-initial-css')) {\n            const style = d.createElement(STR_STYLE);\n            style.id = 'x-tool-initial-css';\n            style.textContent = '[x-show],[x-if],[x-else],[x-else-if],[x\\\\:show],[x\\\\:if],[x\\\\:else],[x\\\\:else-if]{display:none;}';\n            d.head.appendChild(style);\n        }\n    }\n    catch { }\n    let PFX = 'x';\n    const attrName = (name) => `${PFX}-${name}`;\n    class XToolFramework {\n        constructor() {\n            this._components = new Map();\n            this._byEl = new WeakMap();\n            this._pending = [];\n            this._config = {};\n            this._customDirectives = new Map();\n            this._namedComponentDefs = new Map();\n            this._delegated = new WeakMap();\n            this._delegatedRootBound = false;\n            this.directive = (name, directive) => {\n                if (name.startsWith(PFX + '-')) {\n                    throw new Error(`Custom directive names should not start with \"${PFX}-\". Use: XTool.directive(\"my-directive\", ...)`);\n                }\n                this._customDirectives.set(name, directive);\n                return this;\n            };\n            this.registerComponent = (definition) => {\n                if (!definition || !definition.name)\n                    throw new Error('registerComponent requires a name');\n                const name = definition.name.toLowerCase();\n                if (this._namedComponentDefs.has(name))\n                    throw new Error(`Component name \"${name}\" already registered`);\n                this._namedComponentDefs.set(name, definition);\n                return this;\n            };\n            this._getRegisteredComponentDef = (name) => this._namedComponentDefs.get(name.toLowerCase());\n            this._getCustomDirective = (name) => this._customDirectives.get(name);\n            this._getConfig = () => this._config;\n            this.init = (config = {}) => {\n                this._config = { container: 'body', debug: false, staticDirectives: true, ...config };\n                if (typeof this._config.staticDirectives === 'boolean') {\n                    XTOOL_ENABLE_STATIC_DIRECTIVES = this._config.staticDirectives;\n                }\n                const _hpf = this._config.prefix;\n                if (_hpf && typeof _hpf === 'string' && _hpf[STR_LENGTH] > 0) {\n                    PFX = _hpf;\n                }\n                else {\n                    PFX = 'x';\n                }\n                if (d && d.readyState === 'loading') {\n                    d.addEventListener('DOMContentLoaded', () => { this._applyPrefixInitialCSS(); this._autoDiscoverComponents(); const c = d?.querySelector(this._config.container); if (c) {\n                        this._ensureRootObserver(c);\n                        if (this._config.delegate)\n                            this._ensureDelegation(c);\n                    } });\n                }\n                else if (!d || d.readyState === 'complete' || d.readyState === 'interactive') {\n                    this._applyPrefixInitialCSS();\n                    this._autoDiscoverComponents();\n                    const c = d?.querySelector(this._config.container);\n                    if (c) {\n                        this._ensureRootObserver(c);\n                        if (this._config.delegate)\n                            this._ensureDelegation(c);\n                    }\n                }\n                return this;\n            };\n            this.createComponent = (definition) => {\n                const component = new ReactiveComponent(this._generateComponentId(), definition, this);\n                this._components.set(component.id, component);\n                component.callBeforeMount();\n                return component;\n            };\n            this._autoDiscoverComponents = () => {\n                const container = d?.querySelector(this._config.container);\n                if (!container)\n                    return;\n                const componentElements = container.querySelectorAll(`[${attrName('data')}]`);\n                for (const element of componentElements) {\n                    if (!this._getComponentByElement(element))\n                        this._bindElementAsComponent(element);\n                }\n                const reusable = container.querySelectorAll('component[source]');\n                for (const el of reusable) {\n                    if (!this._getComponentByElement(el))\n                        this._instantiateNamedComponent(el);\n                }\n                this._processPending();\n                if (componentElements[STR_LENGTH] === 0 && !this._getComponentByElement(container)) {\n                    const components = _Afrom(this._components.values());\n                    const lastComponent = components[components[STR_LENGTH] - 1];\n                    if (lastComponent && !lastComponent.isBound) {\n                        lastComponent.bindToElement(container);\n                    }\n                }\n            };\n            this._processPending = () => {\n                if (!this._pending[STR_LENGTH])\n                    return;\n                for (const p of this._pending) {\n                    let cur = p.el.parentElement;\n                    let parent;\n                    while (cur && !parent) {\n                        const maybe = this._getComponentByElement(cur);\n                        if (maybe)\n                            parent = maybe;\n                        else\n                            cur = cur.parentElement;\n                    }\n                    if (parent) {\n                        p.comp.attachToParent(parent);\n                    }\n                }\n                for (const p of this._pending)\n                    p.comp.completeBinding();\n                this._pending = [];\n            };\n            this._bindElementAsComponent = (element, parentForEval) => {\n                const dataExpression = element.getAttribute(attrName('data'));\n                let data = {};\n                if (dataExpression) {\n                    element.removeAttribute(attrName('data'));\n                    try {\n                        if (parentForEval) {\n                            let parentCtx = {};\n                            try {\n                                parentCtx = parentForEval._createMethodContext?.() || {};\n                            }\n                            catch {\n                                parentCtx = {};\n                            }\n                            const evalFn = new Function('parent', `with(parent){ return (${dataExpression}) }`);\n                            data = evalFn(parentCtx);\n                        }\n                        else {\n                            data = this._parseDataExpression(dataExpression);\n                        }\n                        if (data.methods) {\n                            data = { methods: data.methods, data: { ...data } };\n                        }\n                        else {\n                            data = { data: { ...data } };\n                        }\n                        if (parentForEval) {\n                            data.data.$parent = parentForEval;\n                        }\n                    }\n                    catch (e) {\n                    }\n                }\n                const comp = this.createComponent(data);\n                comp.element = element;\n                comp.callBeforeMount();\n                this._registerElement(comp.element, comp);\n                this._pending.push({ el: element, comp });\n                const initExpr = element.getAttribute(attrName('init'));\n                if (initExpr) {\n                    element.removeAttribute(attrName('init'));\n                    const existingMounted = comp._lifecycle?.mounted;\n                    comp._lifecycle.mounted = function () {\n                        if (existingMounted) {\n                            try {\n                                existingMounted.call(this);\n                            }\n                            catch { }\n                        }\n                        const evaluator = new Function('ctx', 'with(ctx){' + initExpr + '} ');\n                        queueMicrotask(() => {\n                            if (comp.isDestroyed || !comp.element || !comp.element.isConnected)\n                                return;\n                            try {\n                                const ctx = comp._createMethodContext?.() || comp.getContext?.() || {};\n                                const result = evaluator(ctx);\n                                if (typeof result === 'function') {\n                                    try {\n                                        result();\n                                    }\n                                    catch { }\n                                }\n                            }\n                            catch { }\n                        });\n                    };\n                }\n            };\n            this._generateComponentId = () => 'component_' + Date.now() + '_' + Math.random().toString(36).substring(2, 9);\n            this._parseDataExpression = (expression) => {\n                try {\n                    return new Function('return ' + expression.trim())();\n                }\n                catch {\n                    return {};\n                }\n            };\n            this._unregisterComponent = (componentId) => { this._components.delete(componentId); };\n            this._log = (..._args) => { };\n            this._registerElement = (element, component) => {\n                this._byEl.set(element, component);\n            };\n            this._unregisterElement = (element) => { try {\n                this._byEl.delete(element);\n            }\n            catch { } };\n        }\n        _applyPrefixInitialCSS() {\n            if (!d)\n                return;\n            if (PFX === 'x')\n                return;\n            const id = `x-tool-initial-css-${PFX}`;\n            if (d.head && !d.getElementById(id)) {\n                const style = d.createElement(STR_STYLE);\n                style.id = id;\n                style.textContent = `[${PFX}-show],[${PFX}-if],[${PFX}-else],[${PFX}-else-if],[${PFX}\\\\:show],[${PFX}\\\\:if],[${PFX}\\\\:else],[${PFX}\\\\:else-if]{display:none;}`;\n                d.head.appendChild(style);\n            }\n        }\n        _ensureRootObserver(container) {\n            if (this._rootObserver || typeof MutationObserver === 'undefined')\n                return;\n            this._rootObserver = new MutationObserver(records => {\n                for (const r of records) {\n                    if (r.type === 'childList') {\n                        for (let i = 0; i < r.addedNodes.length; i++) {\n                            const n = r.addedNodes[i];\n                            if (n.nodeType !== 1)\n                                continue;\n                            const el = n;\n                            if (el[STR_TAGNAME] === 'COMPONENT') {\n                                const src = el.getAttribute('source');\n                                if (src && !this._getComponentByElement(el))\n                                    this._instantiateNamedComponent(el);\n                            }\n                        }\n                        for (let i = 0; i < r.removedNodes.length; i++) {\n                            const n = r.removedNodes[i];\n                            if (n.nodeType !== 1)\n                                continue;\n                            const el = n;\n                            queueMicrotask(() => {\n                                if (el.isConnected)\n                                    return;\n                                const stack = [el];\n                                while (stack.length) {\n                                    const cur = stack.pop();\n                                    const comp = this._getComponentByElement(cur);\n                                    if (comp && !comp.isDestroyed) {\n                                        try {\n                                            comp.destroy();\n                                        }\n                                        catch { }\n                                    }\n                                    let child = cur.firstElementChild;\n                                    while (child) {\n                                        stack.push(child);\n                                        child = child.nextElementSibling;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else if (r.type === 'attributes') {\n                        const target = r.target;\n                        if (target && target[STR_TAGNAME] === 'COMPONENT' && r.attributeName === 'source') {\n                            this._onComponentSourceChanged(target);\n                        }\n                    }\n                }\n                this._processPending();\n            });\n            this._rootObserver.observe(container, { childList: true, subtree: true, attributes: true, attributeFilter: ['source'] });\n        }\n        _onComponentSourceChanged(el) {\n            const src = (el.getAttribute('source') || '').trim();\n            const existing = this._getComponentByElement(el);\n            if (!src) {\n                if (existing && !existing.isDestroyed) {\n                    try {\n                        existing.destroy();\n                    }\n                    catch { }\n                }\n                el.innerHTML = '';\n                return;\n            }\n            if (existing && !existing.isDestroyed) {\n                try {\n                    existing.destroy();\n                }\n                catch { }\n            }\n            el.innerHTML = '';\n            this._instantiateNamedComponent(el);\n        }\n        _instantiateNamedComponent(el) {\n            const source = el.getAttribute('source');\n            if (!source)\n                return;\n            const def = this._getRegisteredComponentDef(source);\n            if (!def) {\n                return;\n            }\n            let parentComp;\n            let par = el.parentElement;\n            while (par && !parentComp) {\n                const maybe = this._getComponentByElement(par);\n                if (maybe)\n                    parentComp = maybe;\n                else\n                    par = par.parentElement;\n            }\n            let props = null;\n            let dynamicPropObj = null;\n            let rawPropExpression = null;\n            if (!props)\n                props = {};\n            const propExpr = el.getAttribute(attrName('prop'));\n            if (propExpr) {\n                rawPropExpression = propExpr;\n                if (parentComp) {\n                    try {\n                        const fn = new Function('ctx', 'with(ctx){return (' + propExpr + ')}');\n                        const ctx = parentComp.getContext(true);\n                        dynamicPropObj = fn(ctx);\n                    }\n                    catch {\n                        dynamicPropObj = null;\n                    }\n                }\n                else {\n                    try {\n                        dynamicPropObj = new Function('return (' + propExpr + ')')();\n                    }\n                    catch {\n                        dynamicPropObj = null;\n                    }\n                }\n                if (dynamicPropObj && typeof dynamicPropObj === 'object')\n                    for (const k in dynamicPropObj)\n                        if (!(k in props))\n                            props[k] = String(dynamicPropObj[k]);\n                el.removeAttribute(attrName('prop'));\n            }\n            let baseData = {};\n            if (def.makeData) {\n                try {\n                    baseData = def.makeData(props) || {};\n                }\n                catch {\n                    baseData = {};\n                }\n            }\n            if (def.data) {\n                for (const k in def.data) {\n                    baseData[k] = def.data[k];\n                }\n            }\n            for (const k in props) {\n                if (!(k in baseData))\n                    baseData[k] = props[k];\n            }\n            baseData.$props = props;\n            let initDef;\n            if (typeof def.init === 'function') {\n                try {\n                    const maybe = def.init(props);\n                    initDef = (maybe && typeof maybe === 'object') ? maybe : undefined;\n                }\n                catch {\n                    initDef = undefined;\n                }\n            }\n            const compDef = {\n                data: baseData,\n                methods: { ...(def.methods || {}), ...(initDef?.methods || {}) },\n                computed: { ...(def.computed || {}), ...(initDef?.computed || {}) },\n                propEffects: { ...(def.propEffects || {}), ...(initDef?.propEffects || {}) },\n                mounted: initDef?.mounted || def.mounted,\n                unmounted: initDef?.unmounted || def.unmounted,\n                beforeMount: initDef?.beforeMount || def.beforeMount,\n                beforeUnmount: initDef?.beforeUnmount || def.beforeUnmount,\n                updated: initDef?.updated || def.updated,\n                destroyed: initDef?.destroyed || def.destroyed,\n                beforeDestroy: initDef?.beforeDestroy || def.beforeDestroy\n            };\n            const comp = this.createComponent(compDef);\n            comp.element = el;\n            const originalChildren = [];\n            while (el.firstChild) {\n                const n = el.firstChild;\n                originalChildren.push(n);\n                el.removeChild(n);\n            }\n            if (def.template) {\n                const applyTemplate = (tpl) => {\n                    el.innerHTML = tpl;\n                    const slots = el.querySelectorAll('slot');\n                    if (slots.length) {\n                        for (const slotEl of slots) {\n                            const name = slotEl.getAttribute('name');\n                            let matched = [];\n                            if (name) {\n                                matched = originalChildren.filter(n => n.nodeType === 1 && n.getAttribute('slot') === name);\n                            }\n                            else {\n                                matched = originalChildren.filter(n => n.nodeType !== 1 || !n.hasAttribute('slot'));\n                            }\n                            if (matched.length) {\n                                const frag = d.createDocumentFragment();\n                                for (const n of matched)\n                                    frag.appendChild(n);\n                                slotEl.parentNode?.replaceChild(frag, slotEl);\n                            }\n                        }\n                    }\n                };\n                const tplVal = def.template;\n                if (typeof tplVal === 'string') {\n                    applyTemplate(tplVal);\n                }\n                else if (typeof tplVal === 'function') {\n                    try {\n                        const res = tplVal();\n                        if (res && typeof res.then === 'function') {\n                            el.innerHTML = '';\n                            res.then(html => { applyTemplate(html || ''); try {\n                                comp._applyAsyncTemplateResolved();\n                            }\n                            catch { } });\n                        }\n                        else {\n                            applyTemplate(String(res || ''));\n                        }\n                    }\n                    catch {\n                        el.innerHTML = '';\n                    }\n                }\n                else if (tplVal && typeof tplVal.then === 'function') {\n                    el.innerHTML = '';\n                    tplVal.then(html => { applyTemplate(html || ''); try {\n                        comp._applyAsyncTemplateResolved();\n                    }\n                    catch { } });\n                }\n            }\n            else {\n                for (const n of originalChildren)\n                    el.appendChild(n);\n            }\n            this._registerElement(el, comp);\n            try {\n                const nested = el.querySelectorAll(`[${attrName('data')}]`);\n                for (const node of nested) {\n                    if (!this._getComponentByElement(node))\n                        this._bindElementAsComponent(node, comp);\n                }\n            }\n            catch { }\n            this._pending.push({ el, comp });\n            if (rawPropExpression && parentComp) {\n                try {\n                    comp._initReactiveProps(rawPropExpression, parentComp);\n                }\n                catch { }\n            }\n            this._processPending();\n        }\n        _getComponentByElement(element) { return this._byEl.get(element); }\n        observe(_element) { }\n        _ensureDelegation(container) {\n            if (this._delegatedRootBound)\n                return;\n            const root = container;\n            const handler = (e) => {\n                let cur = e.target;\n                while (cur && cur !== root.parentElement) {\n                    if (e.cancelBubble)\n                        break;\n                    const map = this._delegated.get(cur);\n                    if (map) {\n                        const list = map.get(e.type);\n                        if (list && list.length) {\n                            for (const h of [...list]) {\n                                try {\n                                    if (h.comp && h.comp.isDestroyed) {\n                                        const i = list.indexOf(h);\n                                        if (i > -1)\n                                            list.splice(i, 1);\n                                        continue;\n                                    }\n                                    if (!h.filter || h.filter(e)) {\n                                        h.run(e);\n                                        if (h.once) {\n                                            const idx = list.indexOf(h);\n                                            if (idx > -1)\n                                                list.splice(idx, 1);\n                                        }\n                                    }\n                                }\n                                catch { }\n                            }\n                        }\n                    }\n                    cur = cur.parentElement;\n                }\n            };\n            const captureEvents = ['keydown', 'keyup'];\n            const bubbleEvents = ['click', 'input', 'change'];\n            for (const ev of captureEvents)\n                root.addEventListener(ev, handler, true);\n            for (const ev of bubbleEvents)\n                root.addEventListener(ev, handler, false);\n            this._delegatedRootBound = true;\n        }\n        _registerDelegated(element, event, entry) {\n            let map = this._delegated.get(element);\n            if (!map) {\n                map = new Map();\n                this._delegated.set(element, map);\n            }\n            let list = map.get(event);\n            if (!list) {\n                list = [];\n                map.set(event, list);\n            }\n            list.push(entry);\n            return () => {\n                try {\n                    const m = this._delegated.get(element);\n                    const l = m?.get(event);\n                    if (!l)\n                        return;\n                    const idx = l.indexOf(entry);\n                    if (idx > -1)\n                        l.splice(idx, 1);\n                }\n                catch { }\n            };\n        }\n    }\n    class ReactiveComponent {\n        attachToParent(parent) {\n            this._parent = parent;\n            parent._addChild(this);\n        }\n        get id() { return this._id; }\n        get framework() { return this._framework; }\n        get element() { return this._element; }\n        set element(el) { this._element = el; }\n        get isBound() { return this._isBound; }\n        set isBound(v) { this._isBound = v; }\n        get isMounted() { return this._isMounted; }\n        set isMounted(v) { this._isMounted = v; }\n        get isDestroyed() { return this._isDestroyed; }\n        set isDestroyed(v) { this._isDestroyed = v; }\n        _addDirective(element, directive) {\n            const existing = this._directives.get(element) || [];\n            existing.push(directive);\n            this._directives.set(element, existing);\n        }\n        constructor(id, def, framework) {\n            this._propUpdateActive = false;\n            this._runningPropEffect = false;\n            this._element = null;\n            this._isBound = false;\n            this._isMounted = false;\n            this._isDestroyed = false;\n            this._beforeMountCalled = false;\n            this._children = [];\n            this._parent = null;\n            this._computed = {};\n            this._propEffects = {};\n            this._computedCache = new Map();\n            this._computedDeps = new Map();\n            this._inverseComputedDeps = new Map();\n            this._isInComputedEvaluation = false;\n            this._isInMethodExecution = false;\n            this._allEffects = new Set();\n            this._hasComputed = false;\n            this._directives = new Map();\n            this._cleanupFunctions = new Set();\n            this._eventListeners = [];\n            this._loopScopes = new WeakMap();\n            this._expressionCache = new Map();\n            this._propertyDependencies = new Map();\n            this._activeEffect = null;\n            this._renderScheduled = false;\n            this._nextTickQueue = [];\n            this._transitionConfigs = new WeakMap();\n            this._transitionEvaluators = new WeakMap();\n            this._initialClassSets = new WeakMap();\n            this._propParent = null;\n            this._callLifecycleHook = (hookName) => {\n                const hook = this._lifecycle[hookName];\n                if (typeof hook === 'function') {\n                    this._safeExecute(() => this._runWithGlobalInterception(hook, []), `Error in '${String(hookName)}'`);\n                }\n            };\n            this._addCleanupFunction = (fn) => {\n                if (typeof fn !== 'function')\n                    return undefined;\n                const wrapper = () => {\n                    try {\n                        fn();\n                    }\n                    catch {\n                        _logErr();\n                    }\n                    try {\n                        this._cleanupFunctions.delete(wrapper);\n                    }\n                    catch { }\n                };\n                this._cleanupFunctions.add(wrapper);\n                return () => { try {\n                    this._cleanupFunctions.delete(wrapper);\n                }\n                catch { } };\n            };\n            this._addEventListenerWithCleanup = (element, event, handler, options) => {\n                element.addEventListener(event, handler, options);\n                this._eventListeners.push({ element, event, handler, options });\n            };\n            this._id = id;\n            this._framework = framework;\n            this._originalMethods = def.methods || {};\n            this._computed = def.computed || {};\n            this._propEffects = def.propEffects || {};\n            this._hasComputed = !!(def.computed && Object.keys(def.computed).length);\n            this._lifecycle = {\n                mounted: def.mounted,\n                unmounted: def.unmounted || def.destroyed,\n                updated: def.updated,\n                beforeMount: def.beforeMount,\n                beforeUnmount: def.beforeUnmount || def.beforeDestroy\n            };\n            this._data = this._createReactiveData(def.data || {});\n            this._methods = this._bindMethods();\n        }\n        callBeforeMount() {\n            if (!this._beforeMountCalled) {\n                this._callLifecycleHook('beforeMount');\n                this._beforeMountCalled = true;\n            }\n        }\n        _onDataChange(_property) {\n            if (this.isBound) {\n                if (FT_C)\n                    this._computedCache.clear();\n                const effectsToRun = new Set(this._allEffects);\n                for (const effect of effectsToRun)\n                    this._safeExecute(effect, 'Error in reactive effect');\n                if (this._hasComputed || !XTOOL_ENABLE_STATIC_DIRECTIVES) {\n                    this._scheduleRender();\n                }\n                this._callLifecycleHook('updated');\n            }\n        }\n        _bindMethods() {\n            const boundMethods = {};\n            for (const methodName in this._originalMethods) {\n                const originalMethod = this._originalMethods[methodName];\n                boundMethods[methodName] = (...args) => {\n                    const prev = this._isInMethodExecution;\n                    this._isInMethodExecution = true;\n                    try {\n                        return this._safeExecute(() => this._runWithGlobalInterception(originalMethod, args), `Error in method '${methodName}'`);\n                    }\n                    finally {\n                        this._isInMethodExecution = prev;\n                    }\n                };\n            }\n            return boundMethods;\n        }\n        _getComputedValue(key) {\n            if (!FT_C)\n                return undefined;\n            this._trackDependency(key);\n            if (this._computedCache.has(key))\n                return this._computedCache.get(key);\n            try {\n                const computeFn = this._computed[key];\n                this._isInComputedEvaluation = true;\n                const prev = this._computedDeps.get(key);\n                if (prev) {\n                    for (const dep of prev) {\n                        const set = this._inverseComputedDeps.get(dep);\n                        if (set)\n                            set.delete(key);\n                    }\n                }\n                this._computedDeps.set(key, new Set());\n                const value = computeFn.call(this._createMethodContext());\n                this._isInComputedEvaluation = false;\n                this._computedCache.set(key, value);\n                return value;\n            }\n            catch {\n                this._isInComputedEvaluation = false;\n                return undefined;\n            }\n        }\n        _trackDependency(propKey) {\n            if (!this._activeEffect)\n                return;\n            let deps = this._propertyDependencies.get(propKey);\n            if (!deps) {\n                deps = [];\n                this._propertyDependencies.set(propKey, deps);\n            }\n            if (!deps.includes(this._activeEffect))\n                deps.push(this._activeEffect);\n        }\n        _scheduleRender() {\n            if (this._renderScheduled)\n                return;\n            this._renderScheduled = true;\n            requestAnimationFrame(() => {\n                this._renderScheduled = false;\n                this._render();\n                if (this._nextTickQueue && this._nextTickQueue.length) {\n                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                    for (const fn of q) {\n                        try {\n                            fn();\n                        }\n                        catch { }\n                    }\n                }\n            });\n        }\n        _safeExecute(fn, _errorMsg, fallback) {\n            try {\n                return fn();\n            }\n            catch (e) {\n                console.error(e);\n                return fallback;\n            }\n        }\n        bindToElement(element) {\n            if (this._isBound)\n                return;\n            this._element = element;\n            if (!this._beforeMountCalled) {\n                this.callBeforeMount();\n            }\n            this.completeBinding();\n        }\n        getContext(includeComputed = true) {\n            return this._createMethodContext(includeComputed);\n        }\n        _applyAsyncTemplateResolved() {\n            if (!this._element)\n                return;\n            try {\n                this._parseDirectives(this._element);\n            }\n            catch { }\n            this._scheduleRender();\n        }\n        completeBinding() {\n            if (this._isBound || !this._element)\n                return;\n            if (!this._framework._getComponentByElement(this._element))\n                this._framework._registerElement(this._element, this);\n            this._isBound = true;\n            this._isMounted = true;\n            this._parseDirectives(this._element);\n            this._setupDOMRemovalDetection();\n            this._render();\n            this._callLifecycleHook('mounted');\n        }\n        _addChild(child) {\n            if (!this._children.includes(child)) {\n                this._children.push(child);\n            }\n        }\n        _removeChild(child) {\n            const index = this._children.indexOf(child);\n            if (index > -1) {\n                this._children.splice(index, 1);\n            }\n        }\n        _setupDOMRemovalDetection() { }\n        _runWithGlobalInterception(fn, args) {\n            try {\n                const src = String(fn);\n                if (!/\\[native code\\]/.test(src)) {\n                    let body = src.trim();\n                    if (!/^function[\\s\\(]/.test(body) && !/^[\\w\\$_][\\w\\d\\$_]*\\s*=>/.test(body) && !/^\\(.*?\\)\\s*=>/.test(body)) {\n                        body = 'function ' + body;\n                    }\n                    const trySrc = 'with(ctx){ const f = (' + body + '); return f.apply(thisArg, argsArray); }';\n                    const wrapper = new Function('thisArg', 'argsArray', 'ctx', trySrc);\n                    return wrapper.call(undefined, this._createMethodContext(), args, this._createContextProxy(undefined, undefined));\n                }\n            }\n            catch {\n            }\n            return fn.apply(this._createMethodContext(), args);\n        }\n        destroy() {\n            const self = this;\n            if (self._isDestroyed)\n                return;\n            self._callLifecycleHook('beforeUnmount');\n            for (const child of self._children) {\n                if (!child.isDestroyed)\n                    child.destroy();\n            }\n            if (self._parent) {\n                self._parent._removeChild(self);\n            }\n            for (const [element, directives] of self._directives) {\n                for (const directive of directives) {\n                    if (directive.type === 'custom' && directive.customDirective?.unbind) {\n                        try {\n                            directive.customDirective.unbind(element, self);\n                        }\n                        catch {\n                            _logErr();\n                        }\n                    }\n                }\n            }\n            self._directives.clear();\n            for (const { element, event, handler, options } of self._eventListeners) {\n                element.removeEventListener(event, handler, options);\n            }\n            self._eventListeners = [];\n            for (const cleanup of Array.from(self._cleanupFunctions)) {\n                try {\n                    cleanup();\n                }\n                catch {\n                    _logErr();\n                }\n            }\n            self._cleanupFunctions.clear();\n            self._computedCache.clear();\n            self._expressionCache.clear();\n            self._propertyDependencies.clear();\n            if (self._propParent && self._propEffect) {\n                for (const deps of self._propParent._propertyDependencies.values()) {\n                    const idx = deps.indexOf(self._propEffect);\n                    if (idx > -1)\n                        deps.splice(idx, 1);\n                }\n            }\n            if (self._element)\n                self._framework._unregisterElement(self._element);\n            self._callLifecycleHook('unmounted');\n            self._isDestroyed = true;\n            self._isMounted = false;\n            self._isBound = false;\n            self._children = [];\n            self._parent = null;\n            this._deepReactiveCache = new WeakMap;\n            self._element = null;\n            queueMicrotask(() => self._framework._unregisterComponent(self._id));\n        }\n        _initReactiveProps(expr, parent) {\n            if (!expr || !parent)\n                return;\n            this._propParent = parent;\n            let evalFn;\n            try {\n                evalFn = new Function('ctx', 'with(ctx){return (' + expr + ')}');\n            }\n            catch {\n                return;\n            }\n            const update = () => {\n                parent._activeEffect = update;\n                let obj;\n                try {\n                    const ctx = parent.getContext(true);\n                    obj = evalFn(ctx);\n                }\n                catch {\n                    obj = null;\n                }\n                parent._activeEffect = null;\n                if (obj && typeof obj === 'object') {\n                    this._data.$props = this._data.$props || {};\n                    this._propUpdateActive = true;\n                    for (const k in obj) {\n                        const v = obj[k];\n                        if (this._data[k] !== v)\n                            this._data[k] = v;\n                    }\n                    this._propUpdateActive = false;\n                }\n            };\n            this._propEffect = update;\n            update();\n        }\n        _parseDirectives(element) {\n            const self = this;\n            let processedElements = 0;\n            const processElement = (el, isRoot = false) => {\n                if (!isRoot && (el.hasAttribute(attrName('data')) || this._framework._getComponentByElement(el))) {\n                    return false;\n                }\n                const isComponentTag = el[STR_TAGNAME] === 'COMPONENT';\n                const directives = [];\n                let hasTextOrHtml = false;\n                let forAttr = null;\n                for (const a of el.attributes) {\n                    const n = a.name;\n                    if (n.startsWith(PFX + '-') || n.startsWith(PFX + ':')) {\n                        directives.push(a);\n                        if (!hasTextOrHtml && (n === attrName('text') || n === attrName('html')))\n                            hasTextOrHtml = true;\n                        if (!forAttr && n === attrName('for'))\n                            forAttr = a;\n                    }\n                }\n                if (directives.length > 0) {\n                    processedElements++;\n                    if (forAttr) {\n                        self._bindDirective(el, forAttr.name, forAttr.value);\n                        return false;\n                    }\n                    for (const attr of directives)\n                        self._bindDirective(el, attr.name, attr.value);\n                }\n                if (FT_TI && !hasTextOrHtml)\n                    self._bindTextInterpolationsIn(el);\n                return isRoot || !isComponentTag;\n            };\n            processElement(element, true);\n            self._walkElements(element, processElement);\n        }\n        _bindTextInterpolationsIn(el) {\n            const nodes = Array.from(el.childNodes);\n            for (const node of nodes) {\n                if (node.nodeType !== Node.TEXT_NODE)\n                    continue;\n                const textNode = node;\n                const raw = textNode.nodeValue || '';\n                if (textNode.__x_tool_ti || raw.indexOf('{{') === -1)\n                    continue;\n                const parentTag = (textNode.parentElement?.tagName || '').toLowerCase();\n                const inCode = parentTag === 'code' || parentTag === 'pre';\n                const segs = [];\n                let i = 0;\n                while (i < raw.length) {\n                    const open = raw.indexOf('{{', i);\n                    if (open === -1) {\n                        segs.push({ literal: raw.slice(i) });\n                        break;\n                    }\n                    let bs = 0;\n                    for (let p = open - 1; p >= 0 && raw.charCodeAt(p) === 92; p--)\n                        bs++;\n                    if (bs > 0) {\n                        const prefixStart = i;\n                        const prefixEnd = open - bs;\n                        if (prefixEnd > prefixStart)\n                            segs.push({ literal: raw.slice(prefixStart, prefixEnd) });\n                        if (bs > 1)\n                            segs.push({ literal: '\\\\'.repeat(bs - 1) });\n                        const close = raw.indexOf('}}', open + 2);\n                        if (close === -1) {\n                            segs.push({ literal: raw.slice(open, raw.length) });\n                            i = raw.length;\n                            break;\n                        }\n                        segs.push({ literal: raw.slice(open, close + 2) });\n                        i = close + 2;\n                        continue;\n                    }\n                    else {\n                        if (open > i)\n                            segs.push({ literal: raw.slice(i, open) });\n                        const close = raw.indexOf('}}', open + 2);\n                        if (close === -1) {\n                            segs.push({ literal: raw.slice(open) });\n                            i = raw.length;\n                            break;\n                        }\n                        const expr = raw.slice(open + 2, close).trim();\n                        if (expr)\n                            segs.push({ expr });\n                        else\n                            segs.push({ literal: '' });\n                        i = close + 2;\n                        continue;\n                    }\n                }\n                const hasExpr = segs.some(s => s.expr);\n                const hasEscaped = segs.some(s => s.literal && s.literal.includes('{{'));\n                if (!hasExpr && !hasEscaped)\n                    continue;\n                textNode.__x_tool_ti = true;\n                const evaluators = hasExpr && !inCode ? segs.filter(s => s.expr).map(s => this._createElementEvaluator(s.expr, el)) : [];\n                let exprIndex = 0;\n                const update = () => {\n                    exprIndex = 0;\n                    let out = '';\n                    for (const s of segs) {\n                        if (s.literal != null) {\n                            out += s.literal;\n                        }\n                        else if (s.expr) {\n                            if (inCode) {\n                                out += '{{ ' + s.expr + ' }}';\n                            }\n                            else {\n                                const val = evaluators[exprIndex++]();\n                                out += (val == null ? '' : String(val));\n                            }\n                        }\n                    }\n                    if (textNode.textContent !== out)\n                        textNode.textContent = out;\n                };\n                const dirInfo = { type: 'text-interpolation', expression: raw, update: undefined };\n                this._addDirective(el, dirInfo);\n                const effect = this._createEffect(update, dirInfo);\n                dirInfo.update = effect;\n            }\n        }\n        _walkElements(parent, processor) {\n            let child = parent.firstElementChild;\n            while (child) {\n                const next = child.nextElementSibling;\n                if (processor(child))\n                    this._walkElements(child, processor);\n                child = next;\n            }\n        }\n        _bindDirective(element, directiveName, expression) {\n            const self = this;\n            const isShortBind = directiveName.startsWith(PFX + ':');\n            const type = directiveName.slice(PFX.length + 1);\n            if (isShortBind || type === 'class' || type === STR_STYLE) {\n                element.removeAttribute(directiveName);\n                return self._bindAttributeDirective(element, type, expression);\n            }\n            if (type === 'transition') {\n                element.removeAttribute(directiveName);\n                return self._bindTransitionDirective(element, expression);\n            }\n            if (type === 'text' || type === 'html' || type === 'show') {\n                element.removeAttribute(directiveName);\n                return self._bindSimpleDirective(element, expression, type);\n            }\n            const handled = type === 'model' ? (element.removeAttribute(directiveName), self._bindModelDirective(element, expression), true)\n                : type === 'if' ? (element.removeAttribute(directiveName), self._bindIfDirective(element, expression), true)\n                    : type === 'for' ? (element.removeAttribute(directiveName), self._bindForDirective(element, expression), true)\n                        : false;\n            if (handled)\n                return;\n            if (type.indexOf(':') > -1) {\n                const [prefix, rest] = type.split(':', 2);\n                const [suffix, ...mods] = rest.split('.');\n                const modifiers = mods.reduce((acc, m) => { if (m)\n                    acc[m] = true; return acc; }, {});\n                if (prefix === 'on') {\n                    element.removeAttribute(directiveName);\n                    const customDirective = self.framework._getCustomDirective(suffix);\n                    return customDirective\n                        ? self._bindCustomDirective(element, suffix, expression, customDirective, modifiers)\n                        : self._bindEventDirective(element, suffix, expression, modifiers);\n                }\n                element.removeAttribute(directiveName);\n                return self._bindAttributeDirective(element, suffix, expression);\n            }\n        }\n        _bindTransitionDirective(element, expression) {\n            if (!FT_TR)\n                return;\n            const defaults = { enter: 'xt-enter', enterFrom: 'xt-enter-from', enterTo: 'xt-enter-to', leave: 'xt-leave', leaveFrom: 'xt-leave-from', leaveTo: 'xt-leave-to' };\n            const expr = (expression || '').trim();\n            if (expr) {\n                try {\n                    const evalFn = this._createElementEvaluator(expr, element);\n                    this._transitionEvaluators.set(element, evalFn);\n                }\n                catch { }\n            }\n            else {\n                this._transitionConfigs.set(element, defaults);\n            }\n            this._addDirective(element, { type: 'transition', expression });\n        }\n        _transitionIn(el, done) {\n            if (!FT_TR) {\n                if (done)\n                    done();\n                return;\n            }\n            const defaults = { enter: 'xt-enter', enterFrom: 'xt-enter-from', enterTo: 'xt-enter-to', leave: 'xt-leave', leaveFrom: 'xt-leave-from', leaveTo: 'xt-leave-to' };\n            let userConf = null;\n            const evalFn = this._transitionEvaluators.get(el);\n            if (evalFn) {\n                try {\n                    userConf = evalFn();\n                }\n                catch {\n                    userConf = null;\n                }\n            }\n            const staticConf = this._transitionConfigs.get(el) || null;\n            const conf = Object.assign({}, defaults, (userConf && typeof userConf === 'object') ? userConf : (staticConf || {}));\n            const { enter, enterFrom, enterTo } = conf;\n            const end = () => { try {\n                if (enter)\n                    this._removeClasses(el, enter);\n                if (enterTo)\n                    this._removeClasses(el, enterTo);\n            }\n            catch { } ; if (done)\n                done(); };\n            if (enter || enterFrom || enterTo) {\n                if (enter)\n                    this._addClasses(el, enter);\n                if (enterFrom)\n                    this._addClasses(el, enterFrom);\n                void el.offsetWidth;\n                if (enterFrom)\n                    this._removeClasses(el, enterFrom);\n                if (enterTo)\n                    this._addClasses(el, enterTo);\n                this._onTransitionEnd(el, end);\n            }\n            else {\n                end();\n            }\n        }\n        _transitionOut(el, done) {\n            if (!FT_TR) {\n                if (done)\n                    done();\n                return;\n            }\n            const defaults = { enter: 'xt-enter', enterFrom: 'xt-enter-from', enterTo: 'xt-enter-to', leave: 'xt-leave', leaveFrom: 'xt-leave-from', leaveTo: 'xt-leave-to' };\n            let userConf = null;\n            const evalFn = this._transitionEvaluators.get(el);\n            if (evalFn) {\n                try {\n                    userConf = evalFn();\n                }\n                catch {\n                    userConf = null;\n                }\n            }\n            const staticConf = this._transitionConfigs.get(el) || null;\n            const conf = Object.assign({}, defaults, (userConf && typeof userConf === 'object') ? userConf : (staticConf || {}));\n            const { leave, leaveFrom, leaveTo } = conf;\n            const end = () => { try {\n                if (leave)\n                    this._removeClasses(el, leave);\n                if (leaveTo)\n                    this._removeClasses(el, leaveTo);\n            }\n            catch { } ; if (done)\n                done(); };\n            if (leave || leaveFrom || leaveTo) {\n                if (leave)\n                    this._addClasses(el, leave);\n                if (leaveFrom)\n                    this._addClasses(el, leaveFrom);\n                void el.offsetWidth;\n                if (leaveFrom)\n                    this._removeClasses(el, leaveFrom);\n                if (leaveTo)\n                    this._addClasses(el, leaveTo);\n                this._onTransitionEnd(el, end);\n            }\n            else {\n                end();\n            }\n        }\n        _onTransitionEnd(el, cb) {\n            let called = false;\n            const done = () => { if (called)\n                return; called = true; try {\n                el.removeEventListener('transitionend', done);\n                el.removeEventListener('animationend', done);\n            }\n            catch { } ; cb(); };\n            try {\n                el.addEventListener('transitionend', done);\n                el.addEventListener('animationend', done);\n                setTimeout(done, 500);\n            }\n            catch {\n                cb();\n            }\n        }\n        _tokenizeClasses(input) {\n            if (!input)\n                return [];\n            if (Array.isArray(input))\n                return input.map(String).flatMap(s => String(s).split(/\\s+/)).filter(Boolean);\n            if (typeof input === 'string')\n                return input.split(/\\s+/).filter(Boolean);\n            return [];\n        }\n        _addClasses(el, classes) {\n            const tokens = this._tokenizeClasses(classes);\n            if (!tokens.length)\n                return;\n            try {\n                el.classList.add(...tokens);\n            }\n            catch {\n                for (const t of tokens) {\n                    try {\n                        el.classList.add(t);\n                    }\n                    catch { }\n                }\n            }\n        }\n        _removeClasses(el, classes) {\n            const tokens = this._tokenizeClasses(classes);\n            if (!tokens.length)\n                return;\n            try {\n                el.classList.remove(...tokens);\n            }\n            catch {\n                for (const t of tokens) {\n                    try {\n                        el.classList.remove(t);\n                    }\n                    catch { }\n                }\n            }\n        }\n        _createEffect(updateFn, directiveRef) {\n            const effect = () => {\n                this._activeEffect = effect;\n                try {\n                    updateFn();\n                }\n                finally {\n                    this._activeEffect = null;\n                }\n            };\n            effect();\n            this._allEffects.add(effect);\n            if (XTOOL_ENABLE_STATIC_DIRECTIVES && directiveRef && directiveRef._static === undefined) {\n                let found = false;\n                for (const deps of this._propertyDependencies.values()) {\n                    if (deps.includes(effect)) {\n                        found = true;\n                        break;\n                    }\n                }\n                directiveRef._static = !found;\n            }\n            return effect;\n        }\n        _bindSimpleDirective(element, expression, type) {\n            if (type === 'class' || type === STR_STYLE) {\n                return this._bindAttributeDirective(element, type, expression);\n            }\n            const evaluator = this._createElementEvaluator(expression, element);\n            let originalDisplay;\n            if (type === 'show') {\n                const el = element;\n                originalDisplay = el.style[STR_DISPLAY] !== STR_NONE ? el.style[STR_DISPLAY] : undefined;\n            }\n            let _prevShown = undefined;\n            const update = () => {\n                const value = evaluator();\n                const el = element;\n                switch (type) {\n                    case 'text':\n                        el.textContent = String(value);\n                        break;\n                    case 'html':\n                        el.innerHTML = String(value || '');\n                        break;\n                    case 'show':\n                        const next = !!value;\n                        if (_prevShown === next)\n                            return;\n                        _prevShown = next;\n                        if (next) {\n                            el.style[STR_DISPLAY] = originalDisplay || '';\n                            this._transitionIn(el);\n                        }\n                        else {\n                            this._transitionOut(el, () => { el.style[STR_DISPLAY] = STR_NONE; });\n                        }\n                        break;\n                }\n            };\n            const dirInfo = { type, expression, update: undefined, originalDisplay };\n            this._addDirective(element, dirInfo);\n            const effect = this._createEffect(update, dirInfo);\n            dirInfo.update = effect;\n        }\n        _bindModelDirective(element, property) {\n            const isCheckbox = element.type === 'checkbox';\n            const isNumeric = element.type === 'number' || element.type === 'range';\n            const isMultiSelect = element.tagName === 'SELECT' && element.multiple === true;\n            if (!Reflect.has(this._data, property)) {\n                Reflect.defineProperty(this._data, property, {\n                    'configurable': true,\n                    'enumerable': true,\n                    'writable': true\n                });\n            }\n            const getValueEvaluator = this._createElementEvaluator(property, element);\n            const setValueEvaluator = this._createEvaluator(`${property} = $value`, true);\n            const inferCheckboxValue = () => {\n                if (element.hasAttribute('value'))\n                    return element.value;\n                const loopScope = this._collectLoopScope(element);\n                if (loopScope) {\n                    const keys = Object.keys(loopScope);\n                    if (keys.length === 1)\n                        return loopScope[keys[0]];\n                }\n                return element.value;\n            };\n            const checkboxValue = isCheckbox ? inferCheckboxValue() : undefined;\n            const getInputValue = () => {\n                if (isCheckbox) {\n                    if (Array.isArray(getValueEvaluator()) && checkboxValue !== undefined) {\n                        return element.checked ? checkboxValue : undefined;\n                    }\n                    if (element.hasAttribute('value'))\n                        return element.checked ? element.value : undefined;\n                    return element.checked;\n                }\n                if (isMultiSelect) {\n                    const sel = element;\n                    const values = [];\n                    for (let i = 0; i < sel.options.length; i++) {\n                        const opt = sel.options[i];\n                        if (opt.selected)\n                            values.push(opt.value);\n                    }\n                    return values;\n                }\n                return isNumeric ? parseFloat(element.value) || 0 : element.value;\n            };\n            const setInputValue = (value) => {\n                if (isCheckbox) {\n                    if (Array.isArray(value)) {\n                        const member = element.hasAttribute('value') ? element.value : checkboxValue;\n                        element.checked = member != null ? value.includes(member) : false;\n                    }\n                    else {\n                        element.checked = !!value;\n                    }\n                    return;\n                }\n                if (isMultiSelect) {\n                    const sel = element;\n                    const arr = Array.isArray(value) ? value : [];\n                    for (let i = 0; i < sel.options.length; i++) {\n                        const opt = sel.options[i];\n                        opt.selected = arr.includes(opt.value);\n                    }\n                    return;\n                }\n                element.value = String(value ?? (isNumeric ? 0 : ''));\n            };\n            this._createEffect(() => setInputValue(getValueEvaluator()));\n            const ctx = this._createContextProxy(undefined, element);\n            const updateData = () => {\n                const raw = getInputValue();\n                const currentVal = this._safeExecute(() => getValueEvaluator(), 'model read', undefined);\n                if (isCheckbox && Array.isArray(currentVal)) {\n                    const arr = currentVal;\n                    const member = element.hasAttribute('value') ? element.value : checkboxValue;\n                    if (member !== undefined) {\n                        const idx = arr.indexOf(member);\n                        if (element.checked) {\n                            if (idx === -1)\n                                arr.push(member);\n                        }\n                        else if (idx > -1) {\n                            arr.splice(idx, 1);\n                        }\n                    }\n                }\n                else if (isMultiSelect && Array.isArray(currentVal)) {\n                    const arr = currentVal;\n                    arr.splice(0, arr.length);\n                    raw.forEach(v => arr.push(v));\n                }\n                else {\n                    ctx.$value = raw;\n                    this._safeExecute(() => { setValueEvaluator.call(this._createMethodContext(), ctx); });\n                }\n            };\n            const t = element.type;\n            const eventType = (element[STR_TAGNAME] === 'SELECT' || t === 'checkbox' || t === 'radio' || t === 'file') ? 'change' : 'input';\n            this._addEventListenerWithCleanup(element, eventType, updateData);\n            this._addDirective(element, { type: 'model', property });\n        }\n        _bindIfDirective(element, expression) {\n            const self = this;\n            const placeholder = d.createComment('x-if');\n            element.parentNode?.insertBefore(placeholder, element);\n            element.__x_if_anchorParent = placeholder.parentElement || null;\n            const branches = [];\n            const makeActualElement = (el) => {\n                if (el[STR_TAGNAME] === STR_TEMPLATE) {\n                    const wrapper = d.createElement('div');\n                    wrapper.style[STR_DISPLAY] = 'contents';\n                    wrapper.appendChild(el.content.cloneNode(true));\n                    return { el: wrapper, isTemplate: true };\n                }\n                return { el: el, isTemplate: false };\n            };\n            const first = makeActualElement(element);\n            const firstEval = self._createElementEvaluator(expression, element);\n            branches.push({ el: first.el, test: firstEval, isTemplate: first.isTemplate });\n            if (!first.isTemplate)\n                first.el.__x_tool_bound = true;\n            const originalNodes = [element];\n            if (FT_IFB) {\n                if (FT_IFB) {\n                    let sib = element.nextElementSibling;\n                    while (sib) {\n                        const isElse = sib.hasAttribute('x-else');\n                        const isElseIf = sib.hasAttribute('x-else-if');\n                        if (!isElse && !isElseIf)\n                            break;\n                        if (sib.hasAttribute('x-else-if')) {\n                            const attr = sib.getAttribute('x-else-if') || '';\n                            const branch = makeActualElement(sib);\n                            const evalFn = self._createElementEvaluator((attr || '').trim(), sib);\n                            branches.push({ el: branch.el, test: evalFn, isTemplate: branch.isTemplate });\n                            if (!branch.isTemplate)\n                                branch.el.__x_tool_bound = true;\n                        }\n                        else {\n                            const branch = makeActualElement(sib);\n                            branches.push({ el: branch.el, test: null, isTemplate: branch.isTemplate });\n                            if (!branch.isTemplate)\n                                branch.el.__x_tool_bound = true;\n                        }\n                        sib.removeAttribute('x-else');\n                        sib.removeAttribute('x-else-if');\n                        originalNodes.push(sib);\n                        sib = sib.nextElementSibling;\n                    }\n                }\n            }\n            let active = -1;\n            for (const orig of originalNodes) {\n                if (orig.parentNode)\n                    orig.parentNode.removeChild(orig);\n            }\n            const mountBranch = (idx) => {\n                if (idx < 0)\n                    return;\n                const b = branches[idx];\n                if (!b.el.__x_tool_bound) {\n                    self._parseDirectives(b.el);\n                    b.el.__x_tool_bound = true;\n                }\n                element.__x_if_current?.parentNode?.removeChild(element.__x_if_current);\n                if (!b.el.parentNode) {\n                    placeholder.parentNode?.insertBefore(b.el, placeholder.nextSibling);\n                    this._transitionIn(b.el);\n                }\n                element.__x_if_current = b.el;\n                active = idx;\n            };\n            const unmountBranch = (idx, cb) => {\n                if (idx < 0) {\n                    if (cb)\n                        cb();\n                    return;\n                }\n                const b = branches[idx];\n                if (b.el.parentNode) {\n                    this._transitionOut(b.el, () => { if (b.el.parentNode)\n                        b.el.parentNode.removeChild(b.el); if (cb)\n                        cb(); });\n                }\n                else if (cb)\n                    cb();\n                active = -1;\n            };\n            const update = () => {\n                let next = -1;\n                for (let i = 0; i < branches[STR_LENGTH]; i++) {\n                    const b = branches[i];\n                    const pass = b.test ? !!b.test() : true;\n                    if (pass) {\n                        next = i;\n                        break;\n                    }\n                }\n                if (next === active)\n                    return;\n                if (active !== -1) {\n                    unmountBranch(active, () => mountBranch(next));\n                }\n                else {\n                    mountBranch(next);\n                }\n            };\n            const effect = self._createEffect(update);\n            self._addDirective(element, { type: 'if', expression, update: effect });\n        }\n        _bindEventDirective(element, eventName, expression, modifiers) {\n            const self = this;\n            const trimmed = (expression || '').trim();\n            const arrow = self._extractArrowFunction(trimmed);\n            const opts = modifiers ? {\n                once: !!modifiers.once,\n                passive: !!modifiers.passive,\n                capture: !!modifiers.capture,\n            } : undefined;\n            const onlySelf = !!modifiers?.self;\n            const shouldPrevent = !!modifiers?.prevent;\n            const shouldStop = !!modifiers?.stop;\n            const keyAliasMap = {\n                enter: ['enter'],\n                esc: ['escape', 'esc'],\n                escape: ['escape', 'esc'],\n                space: [' ', 'space', 'spacebar'],\n                tab: ['tab'],\n                backspace: ['backspace'],\n                delete: ['delete', 'del'],\n                del: ['delete', 'del'],\n                arrowup: ['arrowup', 'up'],\n                arrowdown: ['arrowdown', 'down'],\n                arrowleft: ['arrowleft', 'left'],\n                arrowright: ['arrowright', 'right'],\n                home: ['home'],\n                end: ['end'],\n                pageup: ['pageup'],\n                pagedown: ['pagedown']\n            };\n            const comboRequirements = {\n                ctrl: !!modifiers?.ctrl,\n                alt: !!modifiers?.alt,\n                shift: !!modifiers?.shift,\n                meta: !!modifiers?.meta,\n            };\n            const buttonMap = { left: 0, middle: 1, right: 2 };\n            const touchSingle = !!modifiers?.single;\n            const touchMulti = !!modifiers?.multi;\n            const modifierKeys = modifiers ? _Okeys(modifiers) : [];\n            const allowedKeys = [];\n            for (const m of modifierKeys) {\n                const aliases = keyAliasMap[m.toLowerCase()];\n                if (aliases)\n                    allowedKeys.push(...aliases);\n            }\n            const allowedButtons = [];\n            for (const m of modifierKeys) {\n                const btn = buttonMap[m.toLowerCase()];\n                if (btn !== undefined)\n                    allowedButtons.push(btn);\n            }\n            const needKeyCheck = allowedKeys.length > 0 || comboRequirements.ctrl || comboRequirements.alt || comboRequirements.shift || comboRequirements.meta;\n            const needButtonCheck = allowedButtons.length > 0;\n            const needTouchCheck = touchSingle || touchMulti;\n            const passesFilters = (event) => {\n                if (onlySelf && event.target !== element)\n                    return false;\n                if (needTouchCheck) {\n                    if (event instanceof TouchEvent) {\n                        const tCount = event.touches.length;\n                        if (touchSingle && tCount !== 1)\n                            return false;\n                        if (touchMulti && tCount < 2)\n                            return false;\n                    }\n                    else\n                        return false;\n                }\n                if (needButtonCheck) {\n                    if (event instanceof MouseEvent) {\n                        if (!allowedButtons.includes(event.button))\n                            return false;\n                    }\n                    else\n                        return false;\n                }\n                if (needKeyCheck) {\n                    if (!(event instanceof KeyboardEvent))\n                        return false;\n                    const k = (event.key || '').toLowerCase();\n                    if (allowedKeys.length > 0 && !allowedKeys.includes(k))\n                        return false;\n                    if (comboRequirements.ctrl && !event.ctrlKey)\n                        return false;\n                    if (comboRequirements.alt && !event.altKey)\n                        return false;\n                    if (comboRequirements.shift && !event.shiftKey)\n                        return false;\n                    if (comboRequirements.meta && !event.metaKey)\n                        return false;\n                }\n                return true;\n            };\n            const hasExpr = !!trimmed;\n            let runExpr = null;\n            const thisCtx = self._createMethodContext();\n            if (arrow) {\n                const compiledArrow = self._compileArrowForEvent(arrow.paramsList, arrow.body, arrow.isBlock);\n                const mapArgs = arrow.paramsList.length\n                    ? (event) => arrow.paramsList.map((_, idx) => (idx === 0 ? event : idx === 1 ? element : undefined))\n                    : () => [];\n                runExpr = (event) => {\n                    const ctx = self._createContextProxy(event, element);\n                    compiledArrow.call(thisCtx, ctx, ...mapArgs(event));\n                };\n            }\n            else if (hasExpr) {\n                const isStatement = trimmed.includes(';');\n                const executor = self._createEvaluator(trimmed, isStatement);\n                runExpr = (event) => {\n                    const ctx = self._createContextProxy(event, element);\n                    const result = executor.call(thisCtx, ctx);\n                    if (typeof result === 'function')\n                        result.call(thisCtx, event);\n                };\n            }\n            const createEventHandler = (event) => {\n                self._safeExecute(() => {\n                    if (!passesFilters(event))\n                        return;\n                    if (shouldPrevent && typeof event.preventDefault === 'function')\n                        event.preventDefault();\n                    if (shouldStop && typeof event.stopPropagation === 'function')\n                        event.stopPropagation();\n                    if (!runExpr)\n                        return;\n                    runExpr(event);\n                });\n            };\n            const cfg = this.framework._getConfig();\n            const canDelegate = !!cfg.delegate && ['click', 'input', 'change', 'keydown', 'keyup'].includes(eventName);\n            if (canDelegate) {\n                const remover = this.framework._registerDelegated(element, eventName, { filter: (e) => passesFilters(e), run: (e) => createEventHandler(e), once: !!modifiers?.once, comp: this });\n                this._addCleanupFunction(remover);\n            }\n            else {\n                self._addEventListenerWithCleanup(element, eventName, createEventHandler, opts);\n            }\n        }\n        _createEvaluator(expression, isStatement = false) {\n            const key = `${isStatement ? 's' : 'r'}:${expression}`;\n            let fn = this._expressionCache.get(key);\n            if (!fn) {\n                fn = new Function('ctx', `with(ctx){${isStatement ? expression : `return (${expression})`}}`);\n                this._expressionCache.set(key, fn);\n            }\n            return fn;\n        }\n        _createElementEvaluator(expression, element) {\n            const self = this;\n            const compiled = self._createEvaluator(expression);\n            return () => this._safeExecute(() => compiled.call(self._createMethodContext(), self._createContextProxy(undefined, element)), `Error evaluating expression: ${expression}`);\n        }\n        _extractArrowFunction(expression) {\n            let m = expression.match(/^\\s*\\(\\s*([^)]*?)\\s*\\)\\s*=>\\s*([\\s\\S]+)$/);\n            if (!m)\n                m = expression.match(/^\\s*([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*=>\\s*([\\s\\S]+)$/);\n            if (!m)\n                return null;\n            const params = (m[1] || '')\n                .split(',')\n                .map(p => p.trim())\n                .filter(Boolean);\n            const body = (m[2] || '').trim();\n            const isBlock = body.startsWith('{') && body.endsWith('}');\n            const finalBody = isBlock ? body.slice(1, -1) : body;\n            return { paramsList: params, body: finalBody, isBlock };\n        }\n        _compileArrowForEvent(params, body, isBlock) {\n            const content = isBlock ? body : 'return ( ' + body + ' );';\n            return new Function('ctx', ...params, 'with(ctx){ ' + content + ' }');\n        }\n        _wrapData(data, parentKey) {\n            if (!(Object.getPrototypeOf(data) === Object.prototype || ARRAY_ISARRAY(data)))\n                return data;\n            const self = this;\n            if (!this._deepReactiveCache)\n                this._deepReactiveCache = new WeakMap();\n            if (this._deepReactiveCache.has(data))\n                return this._deepReactiveCache.get(data);\n            const proxy = new Proxy(data, {\n                get: (target, p, receiver) => {\n                    if (ARRAY_ISARRAY(target)) {\n                        if (p === Symbol.iterator) {\n                            self._trackDependency(parentKey);\n                            return Reflect.get(target, p, receiver);\n                        }\n                        if (p === 'length' || (typeof p === 'string' && /^\\d+$/.test(p))) {\n                            self._trackDependency(parentKey);\n                        }\n                    }\n                    else {\n                        self._trackDependency(parentKey);\n                    }\n                    const value = Reflect.get(target, p, receiver);\n                    if (ARRAY_ISARRAY(target) && typeof value === 'function' && ['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse', 'copyWithin', 'fill'].includes(p)) {\n                        return function (...args) {\n                            const arr = target;\n                            const beforeLen = arr.length;\n                            const beforeFirst = arr[0];\n                            const beforeLast = arr[beforeLen - 1];\n                            const result = value.apply(target, args);\n                            if (arr.length !== beforeLen || arr[0] !== beforeFirst || arr[arr.length - 1] !== beforeLast) {\n                                self._onDataChange(parentKey);\n                            }\n                            return result;\n                        };\n                    }\n                    const type = typeof value;\n                    if (value && type === 'object') {\n                        return self._wrapData(value, parentKey);\n                    }\n                    return value;\n                },\n                ownKeys: (target) => { self._trackDependency(parentKey); return Reflect.ownKeys(target); },\n                has: (target, key) => { self._trackDependency(parentKey); return Reflect.has(target, key); },\n                set: (target, p, value) => {\n                    if (self._isDestroyed)\n                        return true;\n                    if (typeof p === 'symbol')\n                        return true;\n                    const had = Reflect.has(target, p);\n                    const oldValue = had ? Reflect.get(target, p) : undefined;\n                    if (value && typeof value === 'object') {\n                        self._wrapData(value, parentKey);\n                    }\n                    if (!had) {\n                        try {\n                            Reflect.defineProperty(target, p, {\n                                configurable: true,\n                                enumerable: true,\n                                writable: true,\n                                value\n                            });\n                        }\n                        catch {\n                            Reflect.set(target, p, value);\n                        }\n                        self._onDataChange(parentKey);\n                        return true;\n                    }\n                    if (oldValue === value)\n                        return true;\n                    Reflect.set(target, p, value);\n                    self._onDataChange(parentKey);\n                    return true;\n                },\n                deleteProperty: (target, p) => Reflect.deleteProperty(target, p)\n            });\n            this._deepReactiveCache.set(data, proxy);\n            return proxy;\n        }\n        _createReactiveData(data) {\n            const self = this;\n            return new Proxy(data, {\n                get: (target, property, receiver) => {\n                    const value = Reflect.get(target, property, receiver);\n                    if (property === Symbol.iterator)\n                        return value;\n                    if (typeof property !== 'symbol') {\n                        self._trackDependency(property);\n                    }\n                    if (value && typeof value == 'object') {\n                        return self._wrapData(value, property);\n                    }\n                    return value;\n                },\n                ownKeys: (target) => Reflect.ownKeys(target),\n                has: (target, key) => Reflect.has(target, key),\n                set: (target, property, value, receiver) => {\n                    if (self._isDestroyed)\n                        return true;\n                    if (property === Symbol.iterator && ARRAY_ISARRAY(target))\n                        return value;\n                    const oldValue = Reflect.get(target, property);\n                    if (oldValue === value)\n                        return true;\n                    const had = Reflect.has(target, property);\n                    if (!had) {\n                        try {\n                            Reflect.defineProperty(target, property, {\n                                configurable: true,\n                                enumerable: true,\n                                writable: true,\n                                value\n                            });\n                        }\n                        catch {\n                            Reflect.set(target, property, value, receiver);\n                        }\n                    }\n                    else {\n                        Reflect.set(target, property, value, receiver);\n                    }\n                    this._onDataChange(property);\n                    if (this._propUpdateActive && property !== '$props') {\n                        const pc = target.$props;\n                        if (pc)\n                            pc[property] = value;\n                        const eff = this._propEffects[property];\n                        if (eff && !this._runningPropEffect) {\n                            this._runningPropEffect = true;\n                            this._safeExecute(() => eff.call(this._createMethodContext(), value, oldValue));\n                            this._runningPropEffect = false;\n                        }\n                    }\n                    return true;\n                }\n            });\n        }\n        _createMethodContext(_includeComputed = true) {\n            const specials = {\n                '$log': (..._args) => { },\n                '$destroy': () => this.destroy(),\n                '$forceUpdate': () => this._scheduleRender(),\n                '$addCleanupFunction': (fn) => this._addCleanupFunction(fn),\n                '$nextTick': (cb) => {\n                    if (cb) {\n                        this._nextTickQueue.push(cb);\n                        if (!this._renderScheduled)\n                            queueMicrotask(() => {\n                                if (!this._renderScheduled && this._nextTickQueue.length) {\n                                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                                    for (const fn of q) {\n                                        try {\n                                            fn();\n                                        }\n                                        catch { }\n                                    }\n                                }\n                            });\n                        return;\n                    }\n                    return new Promise(resolve => {\n                        this._nextTickQueue.push(() => resolve());\n                        if (!this._renderScheduled)\n                            queueMicrotask(() => {\n                                if (!this._renderScheduled && this._nextTickQueue.length) {\n                                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                                    for (const fn of q) {\n                                        try {\n                                            fn();\n                                        }\n                                        catch { }\n                                    }\n                                }\n                            });\n                    });\n                },\n                '$el': this._element,\n                '$id': this._id,\n                '$isMounted': this._isMounted,\n                '$isDestroyed': this._isDestroyed,\n                '$parent': this._parent,\n                '$children': this._children,\n                '$mutate': (fn) => {\n                    const prevMethod = this._isInMethodExecution;\n                    const prevComputed = this._isInComputedEvaluation;\n                    this._isInMethodExecution = false;\n                    this._isInComputedEvaluation = false;\n                    try {\n                        return typeof fn === 'function' ? fn() : undefined;\n                    }\n                    finally {\n                        this._isInMethodExecution = prevMethod;\n                        this._isInComputedEvaluation = prevComputed;\n                        this._scheduleRender();\n                    }\n                }\n            };\n            return new Proxy(this._data, {\n                get: (target, propStr) => {\n                    if (propStr in target) {\n                        this._trackDependency(propStr);\n                        const v = target[propStr];\n                        return v;\n                    }\n                    if (FT_C && (propStr in this._computed))\n                        return this._getComputedValue(propStr);\n                    if (propStr in specials)\n                        return specials[propStr];\n                    return this._methods[propStr];\n                },\n                set: (_target, propStr, value) => {\n                    if (this._isInComputedEvaluation) {\n                        if (typeof console !== 'undefined' && console.warn)\n                            console.warn(`Ignored mutation of '${String(propStr)}' inside ${this._isInComputedEvaluation ? 'computed' : 'method'}; wrap in $mutate(()=>{ ... }) to apply.`);\n                        return true;\n                    }\n                    this._data[propStr] = value;\n                    return true;\n                }\n            });\n        }\n        _createContextProxy(event, targetElement) {\n            const component = this;\n            const mergedScope = targetElement ? this._collectLoopScope(targetElement) : null;\n            const scopeKeys = mergedScope ? new Set(_Okeys(mergedScope)) : new Set();\n            const gWindow = (typeof window !== 'undefined' ? window : undefined);\n            const gDocument = (typeof document !== 'undefined' ? document : undefined);\n            const cfg = this.framework._getConfig();\n            const sandbox = !!cfg.sandboxExpressions;\n            const allow = new Set((cfg.allowGlobals || []).map(s => String(s)));\n            const wrapTarget = (t) => {\n                if (!t)\n                    return t;\n                const hasAdd = typeof t.addEventListener === 'function';\n                if (!hasAdd)\n                    return t;\n                const handlerMap = new WeakMap();\n                const makeKey = (event, options) => {\n                    try {\n                        return event + '|' + (options === undefined ? '' : (typeof options === 'object' ? JSON.stringify(options) : String(options)));\n                    }\n                    catch {\n                        return event + '|';\n                    }\n                };\n                return new Proxy(t, {\n                    get(target, prop, receiver) {\n                        if (prop === 'addEventListener') {\n                            return function (event, handler, options) {\n                                target.addEventListener(event, handler, options);\n                                const remover = component._addCleanupFunction(() => { try {\n                                    target.removeEventListener(event, handler, options);\n                                }\n                                catch { } });\n                                try {\n                                    if (typeof handler === 'function' && remover) {\n                                        let m = handlerMap.get(handler);\n                                        if (!m) {\n                                            m = new Map();\n                                            handlerMap.set(handler, m);\n                                        }\n                                        m.set(makeKey(event, options), remover);\n                                    }\n                                }\n                                catch { }\n                            };\n                        }\n                        if (prop === 'removeEventListener') {\n                            return function (event, handler, options) {\n                                try {\n                                    target.removeEventListener(event, handler, options);\n                                }\n                                catch { }\n                                try {\n                                    if (typeof handler === 'function') {\n                                        const m = handlerMap.get(handler);\n                                        if (m) {\n                                            const key = makeKey(event, options);\n                                            const rem = m.get(key);\n                                            if (rem) {\n                                                try {\n                                                    rem();\n                                                }\n                                                catch { }\n                                                ;\n                                                m.delete(key);\n                                            }\n                                            if (m.size === 0)\n                                                handlerMap.delete(handler);\n                                        }\n                                    }\n                                }\n                                catch { }\n                            };\n                        }\n                        if (prop === 'querySelector') {\n                            return function (sel) { const res = target.querySelector(sel); return wrapTarget(res); };\n                        }\n                        if (prop === 'querySelectorAll') {\n                            return function (sel) { const list = target.querySelectorAll(sel); return Array.from(list).map(wrapTarget); };\n                        }\n                        if (prop === 'getElementById') {\n                            return function (id) { const res = target.getElementById(id); return wrapTarget(res); };\n                        }\n                        if (prop === 'document') {\n                            const doc = target.document;\n                            return wrapTarget(doc) || doc;\n                        }\n                        if (prop === 'body' && target === gDocument) {\n                            const b = target.body;\n                            return wrapTarget(b) || b;\n                        }\n                        if (prop === 'defaultView' && target === gDocument) {\n                            const w = target.defaultView;\n                            return wrapTarget(w) || w;\n                        }\n                        return Reflect.get(target, prop, receiver);\n                    }\n                });\n            };\n            const _timeoutRemovers = new Map();\n            const _intervalRemovers = new Map();\n            const _rafRemovers = new Map();\n            const ctxSetTimeout = (fn, ms, ...args) => {\n                const id = gWindow?.setTimeout?.(fn, ms, ...args);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.clearTimeout?.(id);\n                    }\n                    catch { } });\n                    _timeoutRemovers.set(id, remover);\n                }\n                return id;\n            };\n            const ctxSetInterval = (fn, ms, ...args) => {\n                const id = gWindow?.setInterval?.(fn, ms, ...args);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.clearInterval?.(id);\n                    }\n                    catch { } });\n                    _intervalRemovers.set(id, remover);\n                }\n                return id;\n            };\n            const ctxRequestAnimationFrame = (cb) => {\n                const id = gWindow?.requestAnimationFrame?.(cb);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.cancelAnimationFrame?.(id);\n                    }\n                    catch { } });\n                    _rafRemovers.set(id, remover);\n                }\n                return id;\n            };\n            const wrapObserverCtor = (Orig) => {\n                if (!Orig)\n                    return undefined;\n                const Wrapped = function (...args) {\n                    const inst = new Orig(...args);\n                    component._addCleanupFunction(() => { try {\n                        inst.disconnect();\n                    }\n                    catch { } });\n                    return inst;\n                };\n                Wrapped.prototype = Orig.prototype;\n                return Wrapped;\n            };\n            const specials = {\n                '$target': targetElement || null,\n                '$event': event || null,\n                ...(sandbox && !allow.has('setTimeout') ? {} : { 'setTimeout': ctxSetTimeout }),\n                ...(sandbox && !allow.has('clearTimeout') ? {} : { 'clearTimeout': (id) => { try {\n                        gWindow?.clearTimeout?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _timeoutRemovers.get(id);\n                            if (r) {\n                                r();\n                                _timeoutRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('setInterval') ? {} : { 'setInterval': ctxSetInterval }),\n                ...(sandbox && !allow.has('clearInterval') ? {} : { 'clearInterval': (id) => { try {\n                        gWindow?.clearInterval?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _intervalRemovers.get(id);\n                            if (r) {\n                                r();\n                                _intervalRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('requestAnimationFrame') ? {} : { 'requestAnimationFrame': ctxRequestAnimationFrame }),\n                ...(sandbox && !allow.has('cancelAnimationFrame') ? {} : { 'cancelAnimationFrame': (id) => { try {\n                        gWindow?.cancelAnimationFrame?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _rafRemovers.get(id);\n                            if (r) {\n                                r();\n                                _rafRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('MutationObserver') ? {} : { 'MutationObserver': wrapObserverCtor(gWindow?.MutationObserver) }),\n                ...(sandbox && !allow.has('ResizeObserver') ? {} : { 'ResizeObserver': wrapObserverCtor(gWindow?.ResizeObserver) }),\n                ...(sandbox && !allow.has('IntersectionObserver') ? {} : { 'IntersectionObserver': wrapObserverCtor(gWindow?.IntersectionObserver) }),\n                ...(sandbox && !allow.has('window') ? {} : { 'window': wrapTarget(gWindow) }),\n                ...(sandbox && !allow.has('document') ? {} : { 'document': wrapTarget(gDocument) })\n            };\n            return new Proxy({}, {\n                get: (_t, propStr) => {\n                    if (mergedScope && propStr in mergedScope)\n                        return mergedScope[propStr];\n                    if (propStr in component._data)\n                        return component._data[propStr];\n                    if (propStr in component._computed)\n                        return component._getComputedValue(propStr);\n                    if (propStr in component._methods)\n                        return component._methods[propStr];\n                    if (propStr in specials)\n                        return specials[propStr];\n                    return undefined;\n                },\n                set: (_t, propStr, value) => {\n                    if (mergedScope && scopeKeys.has(propStr)) {\n                        mergedScope[propStr] = value;\n                    }\n                    else {\n                        component._data[propStr] = value;\n                    }\n                    return true;\n                },\n                has: (_t, propStr) => !!(mergedScope && propStr in mergedScope) ||\n                    propStr in component._data ||\n                    propStr in component._computed ||\n                    propStr in component._methods ||\n                    propStr in specials\n            });\n        }\n        _bindCustomDirective(element, _name, expression, directive, modifiers) {\n            const self = this;\n            const evaluator = self._createElementEvaluator(expression, element);\n            const directiveInfo = { type: 'custom', expression, customDirective: directive };\n            if (directive.bind) {\n                self._safeExecute(() => directive.bind(element, evaluator(), expression, self, modifiers, evaluator));\n            }\n            const update = () => {\n                if (directive.update)\n                    self._safeExecute(() => directive.update(element, evaluator(), expression, self, modifiers, evaluator));\n            };\n            const effect = self._createEffect(update);\n            directiveInfo.update = effect;\n            self._addDirective(element, directiveInfo);\n        }\n        _bindAttributeDirective(element, attributeName, expression) {\n            const self = this;\n            const evaluator = self._createElementEvaluator(expression, element);\n            if (attributeName === 'class') {\n                const el = element;\n                if (!self._initialClassSets.get(el)) {\n                    const baseSet = new Set();\n                    const oc = el.className || '';\n                    if (oc)\n                        for (const cls of oc.split(/\\s+/)) {\n                            if (cls)\n                                baseSet.add(cls);\n                        }\n                    self._initialClassSets.set(el, baseSet);\n                }\n            }\n            const elAny = element;\n            let propName = null;\n            if (attributeName in elAny)\n                propName = attributeName;\n            else {\n                const camel = attributeName.replace(/-([a-z])/g, (_, c) => c.toUpperCase());\n                if (camel in elAny)\n                    propName = camel;\n                else if (attributeName.toLowerCase() === 'readonly' && 'readOnly' in elAny)\n                    propName = 'readOnly';\n            }\n            const isBooleanProp = !!(propName && typeof elAny[propName] === 'boolean');\n            const hasNonFunctionProp = !!(propName && (propName in elAny) && typeof elAny[propName] !== 'function');\n            const isKnownBooleanAttr = !!ReactiveComponent._BA[attributeName.toLowerCase()];\n            const update = () => {\n                const value = evaluator();\n                if (attributeName === 'class') {\n                    const el = element;\n                    const base = self._initialClassSets.get(el);\n                    if (typeof value === 'string') {\n                        el.className = base && base.size ? [...base].join(' ') + (value ? ' ' + value : '') : value || '';\n                    }\n                    else if (ARRAY_ISARRAY(value)) {\n                        if (base && base.size)\n                            el.className = [...base, ...value.filter(Boolean)].join(' ');\n                        else\n                            el.className = value.filter(Boolean).join(' ');\n                    }\n                    else if (value && typeof value === 'object') {\n                        if (base && base.size)\n                            el.className = [...base].join(' ');\n                        for (const raw in value) {\n                            const on = !!value[raw];\n                            if (!raw)\n                                continue;\n                            const tokens = raw.split(/\\s+/);\n                            for (let i = 0; i < tokens.length; i++) {\n                                const tk = tokens[i];\n                                if (!tk)\n                                    continue;\n                                el.classList.toggle(tk, on);\n                            }\n                        }\n                    }\n                    else if (value == null && base && base.size) {\n                        el.className = [...base].join(' ');\n                    }\n                    else if (value == null) {\n                        el.removeAttribute('class');\n                    }\n                    return;\n                }\n                if (attributeName === STR_STYLE) {\n                    const el = element;\n                    if (typeof value === 'string') {\n                        el.style.cssText = value;\n                        return;\n                    }\n                    if (value && typeof value === 'object') {\n                        Object.assign(el.style, value);\n                        return;\n                    }\n                    if (value == null)\n                        el.removeAttribute('style');\n                    return;\n                }\n                if ((isBooleanProp && propName) || isKnownBooleanAttr) {\n                    const boolVal = !!value;\n                    if (propName && isBooleanProp)\n                        elAny[propName] = boolVal;\n                    if (boolVal)\n                        element.setAttribute(attributeName, '');\n                    else\n                        element.removeAttribute(attributeName);\n                    return;\n                }\n                let normalized = null;\n                if (value && typeof value === 'object') {\n                    const parts = [];\n                    for (const k in value) {\n                        if (value[k])\n                            parts.push(k);\n                    }\n                    normalized = parts.length ? parts.join(' ') : null;\n                }\n                else if (value !== null && value !== undefined) {\n                    normalized = String(value);\n                }\n                if (hasNonFunctionProp && propName) {\n                    if (normalized !== null) {\n                        try {\n                            elAny[propName] = normalized;\n                        }\n                        catch (e) {\n                            try {\n                                element.setAttribute(attributeName, normalized);\n                            }\n                            catch { }\n                        }\n                    }\n                    else {\n                        element.removeAttribute(attributeName);\n                    }\n                    return;\n                }\n                if (normalized !== null) {\n                    const cur = element.getAttribute(attributeName);\n                    if (cur !== normalized)\n                        element.setAttribute(attributeName, normalized);\n                }\n                else {\n                    if (element.hasAttribute(attributeName))\n                        element.removeAttribute(attributeName);\n                }\n            };\n            const effect = self._createEffect(update);\n            self._addDirective(element, { type: 'bind', expression, update: effect });\n        }\n        _collectLoopScope(el) {\n            if (!el)\n                return null;\n            if (!el.parentElement) {\n                const cur = el.__x_if_current;\n                if (cur && cur.parentElement) {\n                    el = cur;\n                }\n                else {\n                    const anchorParent = el.__x_if_anchorParent;\n                    if (anchorParent)\n                        el = anchorParent;\n                }\n            }\n            const merged = {};\n            let node = el;\n            while (node) {\n                const scope = this._loopScopes.get(node);\n                if (scope)\n                    Object.assign(merged, scope);\n                if (node === this.element)\n                    break;\n                node = node.parentElement;\n            }\n            return _Okeys(merged).length ? merged : null;\n        }\n        _updateElementDirectives(root) {\n            for (const [element, directives] of this._directives) {\n                for (const directive of directives) {\n                    if ((root === element || (element instanceof Element && root.contains(element))) && directive.update) {\n                        directive.update();\n                    }\n                }\n            }\n        }\n        _bindForDirective(element, expression) {\n            const self = this;\n            const match = expression.trim().match(/^(?:\\(\\s*([^,\\s]+)\\s*(?:,\\s*([^\\)]+))?\\s*\\)|([^,\\s]+))\\s+(in|of)\\s+(.+)$/);\n            if (!match) {\n                return;\n            }\n            const itemVar = match[1] || match[3];\n            const indexVar = match[2];\n            const listCode = match[5];\n            const placeholder = d.createComment('x-for');\n            element.parentNode?.insertBefore(placeholder, element);\n            let templateToClone;\n            if (element[STR_TAGNAME] === STR_TEMPLATE) {\n                templateToClone = d.createElement('div');\n                templateToClone.style[STR_DISPLAY] = 'contents';\n                templateToClone.appendChild(element.content.cloneNode(true));\n                element.parentNode?.removeChild(element);\n            }\n            else {\n                templateToClone = element;\n                element.parentNode?.removeChild(element);\n            }\n            const contextAnchor = placeholder.parentElement || self.element;\n            const listEval = self._createElementEvaluator(listCode.trim(), contextAnchor);\n            const instances = [];\n            const createScope = (item, idxOrKey) => {\n                const scope = { [itemVar]: item };\n                if (indexVar)\n                    scope[indexVar] = idxOrKey;\n                return scope;\n            };\n            const update = () => {\n                const norm = self._safeExecute(() => {\n                    const result = listEval();\n                    if (_AisArr(result))\n                        return { list: result, keys: null };\n                    if (typeof Map !== 'undefined' && result instanceof Map) {\n                        return { list: _Afrom(result.values()), keys: _Afrom(result.keys()) };\n                    }\n                    if (typeof Set !== 'undefined' && result instanceof Set) {\n                        return { list: _Afrom(result.values()), keys: null };\n                    }\n                    if (result && typeof result[Symbol.iterator] === 'function') {\n                        return { list: _Afrom(result), keys: null };\n                    }\n                    if (result && typeof result === 'object') {\n                        const keys = Object.keys(result);\n                        const list = keys.map(k => result[k]);\n                        return { list, keys };\n                    }\n                    return { list: [], keys: null };\n                }, 'x-for eval error', { list: [], keys: null });\n                const list = norm.list;\n                const keysArr = norm.keys;\n                if (instances.length > list.length) {\n                    while (instances.length > list.length) {\n                        const inst = instances.pop();\n                        if (inst.parentNode)\n                            inst.parentNode.removeChild(inst);\n                    }\n                }\n                const minLen = Math.min(instances.length, list.length);\n                for (let i = 0; i < minLen; i++) {\n                    const inst = instances[i];\n                    const keyVal = keysArr ? keysArr[i] : i;\n                    self._loopScopes.set(inst, createScope(list[i], keyVal));\n                    self._updateElementDirectives(inst);\n                }\n                if (list.length > instances.length) {\n                    const frag = d.createDocumentFragment();\n                    const start = instances.length;\n                    for (let i = start; i < list.length; i++) {\n                        const clone = templateToClone.cloneNode(true);\n                        clone.removeAttribute('x-for');\n                        const keyVal = keysArr ? keysArr[i] : i;\n                        self._loopScopes.set(clone, createScope(list[i], keyVal));\n                        try {\n                            self._parseDirectives(clone);\n                        }\n                        catch { }\n                        frag.appendChild(clone);\n                        instances.push(clone);\n                    }\n                    const ref = instances[start - 1] || placeholder;\n                    if (ref.parentNode)\n                        ref.parentNode.insertBefore(frag, ref.nextSibling);\n                }\n            };\n            const dir = { type: 'for', expression };\n            const effect = self._createEffect(update, dir);\n            dir.update = effect;\n            self._addDirective(placeholder, dir);\n        }\n        _render() {\n            const self = this;\n            for (const directives of self._directives.values()) {\n                for (const dr of directives) {\n                    if (XTOOL_ENABLE_STATIC_DIRECTIVES && dr._static)\n                        continue;\n                    if (dr.update) {\n                        try {\n                            dr.update();\n                        }\n                        catch (error) {\n                            if (!(error instanceof ReferenceError)) { }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    ReactiveComponent._BA = {\n        itemscope: 1, formnovalidate: 1, novalidate: 1, default: 1\n    };\n    const xTool = new XToolFramework();\n    return xTool;\n}();\nif (typeof window !== 'undefined') {\n    const w = window;\n    w.XTool = XToolFramework;\n    w.FyneJS = XToolFramework;\n}\n//# sourceMappingURL=x-tool.js.map"],"mappings":"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","ignoreList":[]}