{"version":3,"file":"x-tool.min.js","names":["ARRAY_ISARRAY","Array","isArray","XToolFramework","_Afrom","from","_AisArr","_Okeys","Object","keys","_logErr","STR_STYLE","STR_DISPLAY","STR_NONE","STR_TAGNAME","STR_TEMPLATE","STR_LENGTH","XTOOL_ENABLE_STATIC_DIRECTIVES","d","document","STR_CONTENTS","EV_DELEGATED","head","getElementById","style","createElement","id","textContent","appendChild","PFX","attrName","name","ReactiveComponent","attachToParent","parent","this","_parent","_addChild","_id","framework","_framework","element","_element","el","isBound","_isBound","v","isMounted","_isMounted","isDestroyed","_isDestroyed","_getDefaultTransitionClasses","cfg","_getConfig","p","prefix","String","mk","s","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","_ensureDefaultTransitionStyles","injectTransitionCSS","styleId","cls","_addDirective","directive","existing","_directives","get","push","set","constructor","def","_propUpdateActive","_runningPropEffect","_beforeMountCalled","_children","_computed","_propEffects","_computedCache","Map","_computedDeps","_inverseComputedDeps","_isInComputedEvaluation","_isInMethodExecution","_allEffects","Set","_hasComputed","_cleanupFunctions","_eventListeners","_loopScopes","WeakMap","_expressionCache","_propertyDependencies","_activeEffect","_renderScheduled","_nextTickQueue","_transitionConfigs","_transitionEvaluators","_initialClassSets","_propParent","_callLifecycleHook","hookName","hook","_lifecycle","_safeExecute","_runWithGlobalInterception","_addCleanupFunction","fn","wrapper","delete","add","_addEventListenerWithCleanup","event","handler","options","addEventListener","_originalMethods","methods","computed","propEffects","length","mounted","unmounted","destroyed","updated","beforeMount","beforeUnmount","beforeDestroy","_data","_createReactiveData","data","_methods","_bindMethods","callBeforeMount","_onDataChange","_property","clear","effectsToRun","directDeps","i","effect","_scheduleRender","boundMethods","methodName","originalMethod","args","prev","_getComputedValue","key","_trackDependency","has","computeFn","dep","value","call","_createMethodContext","propKey","deps","includes","requestAnimationFrame","_render","q","splice","fallback","bindToElement","completeBinding","getContext","includeComputed","_applyAsyncTemplateResolved","_parseDirectives","_getComponentByElement","_registerElement","_setupDOMRemovalDetection","child","_removeChild","index","indexOf","src","test","body","trim","Function","undefined","_createContextProxy","apply","destroy","self","directives","type","customDirective","unbind","removeEventListener","cleanup","_propEffect","values","idx","_unregisterElement","_deepReactiveCache","queueMicrotask","_unregisterComponent","_initReactiveProps","expr","evalFn","update","obj","ctx","$props","k","processElement","isRoot","hasAttribute","isComponentTag","hasTextOrHtml","forAttr","a","attributes","n","startsWith","_bindDirective","attr","_bindTextInterpolationsIn","_walkElements","nodes","childNodes","node","nodeType","Node","TEXT_NODE","textNode","raw","nodeValue","__x_tool_ti","parentTag","parentElement","tagName","toLowerCase","inCode","segs","open","literal","slice","bs","charCodeAt","prefixEnd","repeat","close","hasExpr","some","hasEscaped","evaluators","filter","map","_createElementEvaluator","exprIndex","out","val","dirInfo","expression","_createEffect","processor","firstElementChild","next","nextElementSibling","directiveName","isShortBind","removeAttribute","_bindAttributeDirective","_bindTransitionDirective","_bindSimpleDirective","_bindModelDirective","_bindIfDirective","_bindForDirective","rest","split","suffix","mods","modifiers","reduce","acc","m","_getCustomDirective","_bindCustomDirective","_bindEventDirective","defaults","_runTransition","mode","done","userConf","staticConf","conf","assign","f","t","end","_classes","_onTransitionEnd","_transitionIn","_transitionOut","cb","called","setTimeout","_tokenizeClasses","input","flatMap","Boolean","classes","tokens","cl","classList","remove","updateFn","directiveRef","_static","found","evaluator","originalDisplay","_prevShown","innerHTML","property","isCheckbox","isNumeric","isMultiSelect","multiple","Reflect","defineProperty","configurable","enumerable","writable","getValueEvaluator","setValueEvaluator","_createEvaluator","checkboxValue","loopScope","_collectLoopScope","inferCheckboxValue","member","checked","sel","arr","opt","selected","setInputValue","parseFloat","getInputValue","currentVal","forEach","$value","placeholder","createComment","parentNode","insertBefore","__x_if_anchorParent","branches","makeActualElement","content","cloneNode","isTemplate","first","firstEval","__x_tool_bound","originalNodes","sib","isElse","isElseIf","getAttribute","branch","active","orig","removeChild","mountBranch","b","__x_if_current","nextSibling","unmountBranch","eventName","trimmed","arrow","_extractArrowFunction","opts","once","passive","capture","onlySelf","shouldPrevent","prevent","shouldStop","stop","isOutside","outside","deferExec","defer","keyAliasMap","esc","escape","space","tab","backspace","del","arrowup","arrowdown","arrowleft","arrowright","home","pageup","pagedown","comboRequirements","ctrl","alt","shift","meta","buttonMap","left","middle","right","touchSingle","single","touchMulti","multi","modifierKeys","allowedKeys","aliases","allowedButtons","btn","needKeyCheck","needButtonCheck","needTouchCheck","passesFilters","path","composedPath","tgt","target","contains","TouchEvent","tCount","touches","MouseEvent","button","KeyboardEvent","ctrlKey","altKey","shiftKey","metaKey","runExpr","thisCtx","compiledArrow","_compileArrowForEvent","paramsList","isBlock","mapArgs","_","isStatement","executor","result","createEventHandler","preventDefault","stopPropagation","ev","canDelegate","delegate","remover","_registerDelegated","e","run","comp","ownerDocument","compiled","match","params","endsWith","_wrapData","parentKey","getPrototypeOf","prototype","proxy","Proxy","receiver","Symbol","iterator","beforeLen","beforeFirst","beforeLast","ownKeys","had","oldValue","deleteProperty","pc","eff","_includeComputed","specials","$log","$destroy","$forceUpdate","$addCleanupFunction","$nextTick","Promise","resolve","$el","$id","$isMounted","$isDestroyed","$parent","$children","$mutate","prevMethod","prevComputed","propStr","_target","targetElement","component","mergedScope","scopeKeys","gWindow","window","gDocument","sandbox","sandboxExpressions","allow","allowGlobals","wrapTarget","handlerMap","makeKey","JSON","stringify","prop","rem","size","res","querySelector","list","querySelectorAll","doc","w","defaultView","_timeoutRemovers","_intervalRemovers","_rafRemovers","wrapObserverCtor","Orig","Wrapped","inst","disconnect","$target","$event","ms","clearTimeout","r","setInterval","clearInterval","cancelAnimationFrame","MutationObserver","ResizeObserver","IntersectionObserver","_t","_name","directiveInfo","bind","attributeName","baseSet","oc","className","elAny","propName","camel","replace","c","toUpperCase","isBooleanProp","hasNonFunctionProp","isKnownBooleanAttr","_BA","base","join","on","tk","toggle","cssText","boolVal","setAttribute","normalized","parts","cur","anchorParent","merged","scope","_updateElementDirectives","root","Element","itemVar","indexVar","listCode","templateToClone","contextAnchor","listEval","instances","createScope","item","idxOrKey","dir","norm","keysArr","pop","minLen","Math","min","frag","createDocumentFragment","start","clone","ref","dr","error","itemscope","formnovalidate","novalidate","default","_components","_byEl","_pending","_config","_customDirectives","_namedComponentDefs","_delegated","_delegatedRootBound","Error","registerComponent","definition","_getRegisteredComponentDef","init","config","container","debug","staticDirectives","_hpf","readyState","_applyPrefixInitialCSS","_autoDiscoverComponents","_ensureRootObserver","_ensureDelegation","createComponent","_generateComponentId","componentElements","_bindElementAsComponent","reusable","_instantiateNamedComponent","_processPending","components","lastComponent","maybe","parentForEval","dataExpression","parentCtx","_parseDataExpression","initExpr","existingMounted","isConnected","Date","now","random","toString","substring","componentId","_log","_rootObserver","records","addedNodes","removedNodes","stack","_onComponentSourceChanged","observe","childList","subtree","attributeFilter","source","parentComp","par","props","dynamicPropObj","rawPropExpression","propExpr","initDef","baseData","makeData","compDef","originalChildren","firstChild","template","applyTemplate","tpl","slots","slotEl","matched","replaceChild","tplVal","then","html","nested","cancelBubble","h","captureEvents","bubbleEvents","entry","l","XTool","FyneJS"],"sourceRoot":"./dist","sources":["dist/x-tool.js"],"sourcesContent":["\"use strict\";\nconst ARRAY_ISARRAY = Array.isArray;\nconst FT_C = true;\nconst FT_TI = typeof __FEAT_TEXT_INTERP__ === 'boolean' ? __FEAT_TEXT_INTERP__ : true;\nconst _FT_DR = typeof __FEAT_DEEP_REACTIVE__ === 'boolean' ? __FEAT_DEEP_REACTIVE__ : true;\nconst FT_IFB = typeof __FEAT_IF_BRANCHES__ === 'boolean' ? __FEAT_IF_BRANCHES__ : true;\nconst FT_TR = typeof __FEAT_TRANSITION__ === 'boolean' ? __FEAT_TRANSITION__ : true;\nconst XToolFramework = function () {\n    const _Afrom = Array.from;\n    const _AisArr = ARRAY_ISARRAY;\n    const _Okeys = Object.keys;\n    const _logErr = (..._args) => { };\n    const STR_STYLE = 'style';\n    const STR_DISPLAY = 'display';\n    const STR_NONE = 'none';\n    const STR_TAGNAME = 'tagName';\n    const STR_TEMPLATE = 'TEMPLATE';\n    const STR_LENGTH = 'length';\n    let XTOOL_ENABLE_STATIC_DIRECTIVES = true;\n    const d = (typeof document !== 'undefined' ? document : null);\n    const STR_TR_END = 'transitionend';\n    const STR_ANIM_END = 'animationend';\n    const STR_CONTENTS = 'contents';\n    const EV_CLICK = 'click', EV_INPUT = 'input', EV_CHANGE = 'change', EV_KEYDOWN = 'keydown', EV_KEYUP = 'keyup';\n    const EV_DELEGATED = [EV_CLICK, EV_INPUT, EV_CHANGE, EV_KEYDOWN, EV_KEYUP];\n    try {\n        if (d && d.head && !d.getElementById('x-tool-initial-css')) {\n            const style = d.createElement(STR_STYLE);\n            style.id = 'x-tool-initial-css';\n            style.textContent = '[x-show],[x-if],[x-else],[x-else-if],[x\\\\:show],[x\\\\:if],[x\\\\:else],[x\\\\:else-if]{display:none;}';\n            d.head.appendChild(style);\n        }\n    }\n    catch { }\n    let PFX = 'x';\n    const attrName = (name) => `${PFX}-${name}`;\n    class XToolFramework {\n        constructor() {\n            this._components = new Map();\n            this._byEl = new WeakMap();\n            this._pending = [];\n            this._config = {};\n            this._customDirectives = new Map();\n            this._namedComponentDefs = new Map();\n            this._delegated = new WeakMap();\n            this._delegatedRootBound = false;\n            this.directive = (name, directive) => {\n                if (name.startsWith(PFX + '-')) {\n                    throw new Error(`Custom directive names should not start with \"${PFX}-\". Use: XTool.directive(\"my-directive\", ...)`);\n                }\n                this._customDirectives.set(name, directive);\n                return this;\n            };\n            this.registerComponent = (definition) => {\n                if (!definition || !definition.name)\n                    throw new Error('registerComponent requires a name');\n                const name = definition.name.toLowerCase();\n                if (this._namedComponentDefs.has(name))\n                    throw new Error(`Component name \"${name}\" already registered`);\n                this._namedComponentDefs.set(name, definition);\n                return this;\n            };\n            this._getRegisteredComponentDef = (name) => this._namedComponentDefs.get(name.toLowerCase());\n            this._getCustomDirective = (name) => this._customDirectives.get(name);\n            this._getConfig = () => this._config;\n            this.init = (config = {}) => {\n                this._config = { container: 'body', debug: false, staticDirectives: true, ...config };\n                if (typeof this._config.staticDirectives === 'boolean') {\n                    XTOOL_ENABLE_STATIC_DIRECTIVES = this._config.staticDirectives;\n                }\n                const _hpf = this._config.prefix;\n                if (_hpf && typeof _hpf === 'string' && _hpf[STR_LENGTH] > 0) {\n                    PFX = _hpf;\n                }\n                else {\n                    PFX = 'x';\n                }\n                if (d && d.readyState === 'loading') {\n                    d.addEventListener('DOMContentLoaded', () => { this._applyPrefixInitialCSS(); this._autoDiscoverComponents(); const c = d?.querySelector(this._config.container); if (c) {\n                        this._ensureRootObserver(c);\n                        if (this._config.delegate)\n                            this._ensureDelegation(c);\n                    } });\n                }\n                else if (!d || d.readyState === 'complete' || d.readyState === 'interactive') {\n                    this._applyPrefixInitialCSS();\n                    this._autoDiscoverComponents();\n                    const c = d?.querySelector(this._config.container);\n                    if (c) {\n                        this._ensureRootObserver(c);\n                        if (this._config.delegate)\n                            this._ensureDelegation(c);\n                    }\n                }\n                return this;\n            };\n            this.createComponent = (definition) => {\n                const component = new ReactiveComponent(this._generateComponentId(), definition, this);\n                this._components.set(component.id, component);\n                component.callBeforeMount();\n                return component;\n            };\n            this._autoDiscoverComponents = () => {\n                const container = d?.querySelector(this._config.container);\n                if (!container)\n                    return;\n                const componentElements = container.querySelectorAll(`[${attrName('data')}]`);\n                for (const element of componentElements) {\n                    if (!this._getComponentByElement(element))\n                        this._bindElementAsComponent(element);\n                }\n                const reusable = container.querySelectorAll('component[source]');\n                for (const el of reusable) {\n                    if (!this._getComponentByElement(el))\n                        this._instantiateNamedComponent(el);\n                }\n                this._processPending();\n                if (componentElements[STR_LENGTH] === 0 && !this._getComponentByElement(container)) {\n                    const components = _Afrom(this._components.values());\n                    const lastComponent = components[components[STR_LENGTH] - 1];\n                    if (lastComponent && !lastComponent.isBound) {\n                        lastComponent.bindToElement(container);\n                    }\n                }\n            };\n            this._processPending = () => {\n                if (!this._pending[STR_LENGTH])\n                    return;\n                for (const p of this._pending) {\n                    let cur = p.el.parentElement;\n                    let parent;\n                    while (cur && !parent) {\n                        const maybe = this._getComponentByElement(cur);\n                        if (maybe)\n                            parent = maybe;\n                        else\n                            cur = cur.parentElement;\n                    }\n                    if (parent) {\n                        p.comp.attachToParent(parent);\n                    }\n                }\n                for (const p of this._pending)\n                    p.comp.completeBinding();\n                this._pending = [];\n            };\n            this._bindElementAsComponent = (element, parentForEval) => {\n                const dataExpression = element.getAttribute(attrName('data'));\n                let data = {};\n                if (dataExpression) {\n                    element.removeAttribute(attrName('data'));\n                    try {\n                        if (parentForEval) {\n                            let parentCtx = {};\n                            try {\n                                parentCtx = parentForEval._createMethodContext?.() || {};\n                            }\n                            catch {\n                                parentCtx = {};\n                            }\n                            const evalFn = new Function('parent', `with(parent){ return (${dataExpression}) }`);\n                            data = evalFn(parentCtx);\n                        }\n                        else {\n                            data = this._parseDataExpression(dataExpression);\n                        }\n                        if (data.methods) {\n                            data = { methods: data.methods, data: { ...data } };\n                        }\n                        else {\n                            data = { data: { ...data } };\n                        }\n                        if (parentForEval) {\n                            data.data.$parent = parentForEval;\n                        }\n                    }\n                    catch (e) {\n                    }\n                }\n                const comp = this.createComponent(data);\n                comp.element = element;\n                comp.callBeforeMount();\n                this._registerElement(comp.element, comp);\n                this._pending.push({ el: element, comp });\n                const initExpr = element.getAttribute(attrName('init'));\n                if (initExpr) {\n                    element.removeAttribute(attrName('init'));\n                    const existingMounted = comp._lifecycle?.mounted;\n                    comp._lifecycle.mounted = function () {\n                        if (existingMounted) {\n                            try {\n                                existingMounted.call(this);\n                            }\n                            catch { }\n                        }\n                        const evaluator = new Function('ctx', 'with(ctx){' + initExpr + '} ');\n                        queueMicrotask(() => {\n                            if (comp.isDestroyed || !comp.element || !comp.element.isConnected)\n                                return;\n                            try {\n                                const ctx = comp._createMethodContext?.() || comp.getContext?.() || {};\n                                const result = evaluator(ctx);\n                                if (typeof result === 'function') {\n                                    try {\n                                        result();\n                                    }\n                                    catch { }\n                                }\n                            }\n                            catch { }\n                        });\n                    };\n                }\n            };\n            this._generateComponentId = () => 'component_' + Date.now() + '_' + Math.random().toString(36).substring(2, 9);\n            this._parseDataExpression = (expression) => {\n                try {\n                    return new Function('return ' + expression.trim())();\n                }\n                catch {\n                    return {};\n                }\n            };\n            this._unregisterComponent = (componentId) => { this._components.delete(componentId); };\n            this._log = (..._args) => { };\n            this._registerElement = (element, component) => {\n                this._byEl.set(element, component);\n            };\n            this._unregisterElement = (element) => { try {\n                this._byEl.delete(element);\n            }\n            catch { } };\n        }\n        _applyPrefixInitialCSS() {\n            if (!d)\n                return;\n            if (PFX === 'x')\n                return;\n            const id = `x-tool-initial-css-${PFX}`;\n            if (d.head && !d.getElementById(id)) {\n                const style = d.createElement(STR_STYLE);\n                style.id = id;\n                style.textContent = `[${PFX}-show],[${PFX}-if],[${PFX}-else],[${PFX}-else-if],[${PFX}\\\\:show],[${PFX}\\\\:if],[${PFX}\\\\:else],[${PFX}\\\\:else-if]{display:none;}`;\n                d.head.appendChild(style);\n            }\n        }\n        _ensureRootObserver(container) {\n            if (this._rootObserver || typeof MutationObserver === 'undefined')\n                return;\n            this._rootObserver = new MutationObserver(records => {\n                for (const r of records) {\n                    if (r.type === 'childList') {\n                        for (let i = 0; i < r.addedNodes.length; i++) {\n                            const n = r.addedNodes[i];\n                            if (n.nodeType !== 1)\n                                continue;\n                            const el = n;\n                            if (el[STR_TAGNAME] === 'COMPONENT') {\n                                const src = el.getAttribute('source');\n                                if (src && !this._getComponentByElement(el))\n                                    this._instantiateNamedComponent(el);\n                            }\n                        }\n                        for (let i = 0; i < r.removedNodes.length; i++) {\n                            const n = r.removedNodes[i];\n                            if (n.nodeType !== 1)\n                                continue;\n                            const el = n;\n                            queueMicrotask(() => {\n                                if (el.isConnected)\n                                    return;\n                                const stack = [el];\n                                while (stack.length) {\n                                    const cur = stack.pop();\n                                    const comp = this._getComponentByElement(cur);\n                                    if (comp && !comp.isDestroyed) {\n                                        try {\n                                            comp.destroy();\n                                        }\n                                        catch { }\n                                    }\n                                    let child = cur.firstElementChild;\n                                    while (child) {\n                                        stack.push(child);\n                                        child = child.nextElementSibling;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else if (r.type === 'attributes') {\n                        const target = r.target;\n                        if (target && target[STR_TAGNAME] === 'COMPONENT' && r.attributeName === 'source') {\n                            this._onComponentSourceChanged(target);\n                        }\n                    }\n                }\n                this._processPending();\n            });\n            this._rootObserver.observe(container, { childList: true, subtree: true, attributes: true, attributeFilter: ['source'] });\n        }\n        _onComponentSourceChanged(el) {\n            const src = (el.getAttribute('source') || '').trim();\n            const existing = this._getComponentByElement(el);\n            if (!src) {\n                if (existing && !existing.isDestroyed) {\n                    try {\n                        existing.destroy();\n                    }\n                    catch { }\n                }\n                el.innerHTML = '';\n                return;\n            }\n            if (existing && !existing.isDestroyed) {\n                try {\n                    existing.destroy();\n                }\n                catch { }\n            }\n            el.innerHTML = '';\n            this._instantiateNamedComponent(el);\n        }\n        _instantiateNamedComponent(el) {\n            const source = el.getAttribute('source');\n            if (!source)\n                return;\n            const def = this._getRegisteredComponentDef(source);\n            if (!def) {\n                return;\n            }\n            let parentComp;\n            let par = el.parentElement;\n            while (par && !parentComp) {\n                const maybe = this._getComponentByElement(par);\n                if (maybe)\n                    parentComp = maybe;\n                else\n                    par = par.parentElement;\n            }\n            let props = null;\n            let dynamicPropObj = null;\n            let rawPropExpression = null;\n            if (!props)\n                props = {};\n            const propExpr = el.getAttribute(attrName('prop'));\n            if (propExpr) {\n                rawPropExpression = propExpr;\n                if (parentComp) {\n                    try {\n                        const fn = new Function('ctx', 'with(ctx){return (' + propExpr + ')}');\n                        const ctx = parentComp.getContext(true);\n                        dynamicPropObj = fn(ctx);\n                    }\n                    catch {\n                        dynamicPropObj = null;\n                    }\n                }\n                else {\n                    try {\n                        dynamicPropObj = new Function('return (' + propExpr + ')')();\n                    }\n                    catch {\n                        dynamicPropObj = null;\n                    }\n                }\n                if (dynamicPropObj && typeof dynamicPropObj === 'object')\n                    for (const k in dynamicPropObj)\n                        if (!(k in props))\n                            props[k] = String(dynamicPropObj[k]);\n                el.removeAttribute(attrName('prop'));\n            }\n            let baseData = {};\n            if (def.makeData) {\n                try {\n                    baseData = def.makeData(props) || {};\n                }\n                catch {\n                    baseData = {};\n                }\n            }\n            if (def.data) {\n                for (const k in def.data) {\n                    baseData[k] = def.data[k];\n                }\n            }\n            for (const k in props) {\n                if (!(k in baseData))\n                    baseData[k] = props[k];\n            }\n            baseData.$props = props;\n            let initDef;\n            if (typeof def.init === 'function') {\n                try {\n                    const maybe = def.init(props);\n                    initDef = (maybe && typeof maybe === 'object') ? maybe : undefined;\n                }\n                catch {\n                    initDef = undefined;\n                }\n            }\n            const compDef = {\n                data: baseData,\n                methods: { ...(def.methods || {}), ...(initDef?.methods || {}) },\n                computed: { ...(def.computed || {}), ...(initDef?.computed || {}) },\n                propEffects: { ...(def.propEffects || {}), ...(initDef?.propEffects || {}) },\n                mounted: initDef?.mounted || def.mounted,\n                unmounted: initDef?.unmounted || def.unmounted,\n                beforeMount: initDef?.beforeMount || def.beforeMount,\n                beforeUnmount: initDef?.beforeUnmount || def.beforeUnmount,\n                updated: initDef?.updated || def.updated,\n                destroyed: initDef?.destroyed || def.destroyed,\n                beforeDestroy: initDef?.beforeDestroy || def.beforeDestroy\n            };\n            const comp = this.createComponent(compDef);\n            comp.element = el;\n            const originalChildren = [];\n            while (el.firstChild) {\n                const n = el.firstChild;\n                originalChildren.push(n);\n                el.removeChild(n);\n            }\n            if (def.template) {\n                const applyTemplate = (tpl) => {\n                    el.innerHTML = tpl;\n                    const slots = el.querySelectorAll('slot');\n                    if (slots.length) {\n                        for (const slotEl of slots) {\n                            const name = slotEl.getAttribute('name');\n                            let matched = [];\n                            if (name) {\n                                matched = originalChildren.filter(n => n.nodeType === 1 && n.getAttribute('slot') === name);\n                            }\n                            else {\n                                matched = originalChildren.filter(n => n.nodeType !== 1 || !n.hasAttribute('slot'));\n                            }\n                            if (matched.length) {\n                                const frag = d.createDocumentFragment();\n                                for (const n of matched)\n                                    frag.appendChild(n);\n                                slotEl.parentNode?.replaceChild(frag, slotEl);\n                            }\n                        }\n                    }\n                };\n                const tplVal = def.template;\n                if (typeof tplVal === 'string') {\n                    applyTemplate(tplVal);\n                }\n                else if (typeof tplVal === 'function') {\n                    try {\n                        const res = tplVal();\n                        if (res && typeof res.then === 'function') {\n                            el.innerHTML = '';\n                            res.then(html => { applyTemplate(html || ''); try {\n                                comp._applyAsyncTemplateResolved();\n                            }\n                            catch { } });\n                        }\n                        else {\n                            applyTemplate(String(res || ''));\n                        }\n                    }\n                    catch {\n                        el.innerHTML = '';\n                    }\n                }\n                else if (tplVal && typeof tplVal.then === 'function') {\n                    el.innerHTML = '';\n                    tplVal.then(html => { applyTemplate(html || ''); try {\n                        comp._applyAsyncTemplateResolved();\n                    }\n                    catch { } });\n                }\n            }\n            else {\n                for (const n of originalChildren)\n                    el.appendChild(n);\n            }\n            this._registerElement(el, comp);\n            try {\n                const nested = el.querySelectorAll(`[${attrName('data')}]`);\n                for (const node of nested) {\n                    if (!this._getComponentByElement(node))\n                        this._bindElementAsComponent(node, comp);\n                }\n            }\n            catch { }\n            this._pending.push({ el, comp });\n            if (rawPropExpression && parentComp) {\n                try {\n                    comp._initReactiveProps(rawPropExpression, parentComp);\n                }\n                catch { }\n            }\n            this._processPending();\n        }\n        _getComponentByElement(element) { return this._byEl.get(element); }\n        observe(_element) { }\n        _ensureDelegation(container) {\n            if (this._delegatedRootBound)\n                return;\n            const root = container;\n            const handler = (e) => {\n                let cur = e.target;\n                while (cur && cur !== root.parentElement) {\n                    if (e.cancelBubble)\n                        break;\n                    const map = this._delegated.get(cur);\n                    if (map) {\n                        const list = map.get(e.type);\n                        if (list && list.length) {\n                            for (const h of [...list]) {\n                                try {\n                                    if (h.comp && h.comp.isDestroyed) {\n                                        const i = list.indexOf(h);\n                                        if (i > -1)\n                                            list.splice(i, 1);\n                                        continue;\n                                    }\n                                    if (!h.filter || h.filter(e)) {\n                                        h.run(e);\n                                        if (h.once) {\n                                            const idx = list.indexOf(h);\n                                            if (idx > -1)\n                                                list.splice(idx, 1);\n                                        }\n                                    }\n                                }\n                                catch { }\n                            }\n                        }\n                    }\n                    cur = cur.parentElement;\n                }\n            };\n            const captureEvents = ['keydown', 'keyup'];\n            const bubbleEvents = ['click', 'input', 'change'];\n            for (const ev of captureEvents)\n                root.addEventListener(ev, handler, true);\n            for (const ev of bubbleEvents)\n                root.addEventListener(ev, handler, false);\n            this._delegatedRootBound = true;\n        }\n        _registerDelegated(element, event, entry) {\n            let map = this._delegated.get(element);\n            if (!map) {\n                map = new Map();\n                this._delegated.set(element, map);\n            }\n            let list = map.get(event);\n            if (!list) {\n                list = [];\n                map.set(event, list);\n            }\n            list.push(entry);\n            return () => {\n                try {\n                    const m = this._delegated.get(element);\n                    const l = m?.get(event);\n                    if (!l)\n                        return;\n                    const idx = l.indexOf(entry);\n                    if (idx > -1)\n                        l.splice(idx, 1);\n                }\n                catch { }\n            };\n        }\n    }\n    class ReactiveComponent {\n        attachToParent(parent) {\n            this._parent = parent;\n            parent._addChild(this);\n        }\n        get id() { return this._id; }\n        get framework() { return this._framework; }\n        get element() { return this._element; }\n        set element(el) { this._element = el; }\n        get isBound() { return this._isBound; }\n        set isBound(v) { this._isBound = v; }\n        get isMounted() { return this._isMounted; }\n        set isMounted(v) { this._isMounted = v; }\n        get isDestroyed() { return this._isDestroyed; }\n        set isDestroyed(v) { this._isDestroyed = v; }\n        _getDefaultTransitionClasses() {\n            const cfg = this.framework._getConfig();\n            const p = (cfg && cfg.prefix) ? String(cfg.prefix) : 'x';\n            const mk = (s) => `${p}t-${s}`;\n            return { enter: mk('enter'), enterFrom: mk('enter-from'), enterTo: mk('enter-to'), leave: mk('leave'), leaveFrom: mk('leave-from'), leaveTo: mk('leave-to') };\n        }\n        _ensureDefaultTransitionStyles() {\n            try {\n                const cfg = this.framework._getConfig();\n                if (cfg && cfg.injectTransitionCSS === false)\n                    return;\n                if (!d || !d.head)\n                    return;\n                const p = (cfg && cfg.prefix) ? String(cfg.prefix) : 'x';\n                const styleId = `x-tool-transition-css-${p}`;\n                if (d.getElementById(styleId))\n                    return;\n                const cls = (name) => `.${p}t-${name}`;\n                const style = d.createElement('style');\n                style.id = styleId;\n                style.textContent = (`${cls('enter')},${cls('leave')}{transition:opacity 150ms ease,transform 150ms ease}` +\n                    `${cls('enter-from')},${cls('leave-to')}{opacity:0;transform:translateY(-0.5rem)}` +\n                    `${cls('enter-to')},${cls('leave-from')}{opacity:1;transform:translateY(0)}`);\n                d.head.appendChild(style);\n            }\n            catch { }\n        }\n        _addDirective(element, directive) {\n            const existing = this._directives.get(element) || [];\n            existing.push(directive);\n            this._directives.set(element, existing);\n        }\n        constructor(id, def, framework) {\n            this._propUpdateActive = false;\n            this._runningPropEffect = false;\n            this._element = null;\n            this._isBound = false;\n            this._isMounted = false;\n            this._isDestroyed = false;\n            this._beforeMountCalled = false;\n            this._children = [];\n            this._parent = null;\n            this._computed = {};\n            this._propEffects = {};\n            this._computedCache = new Map();\n            this._computedDeps = new Map();\n            this._inverseComputedDeps = new Map();\n            this._isInComputedEvaluation = false;\n            this._isInMethodExecution = false;\n            this._allEffects = new Set();\n            this._hasComputed = false;\n            this._directives = new Map();\n            this._cleanupFunctions = new Set();\n            this._eventListeners = [];\n            this._loopScopes = new WeakMap();\n            this._expressionCache = new Map();\n            this._propertyDependencies = new Map();\n            this._activeEffect = null;\n            this._renderScheduled = false;\n            this._nextTickQueue = [];\n            this._transitionConfigs = new WeakMap();\n            this._transitionEvaluators = new WeakMap();\n            this._initialClassSets = new WeakMap();\n            this._propParent = null;\n            this._callLifecycleHook = (hookName) => {\n                const hook = this._lifecycle[hookName];\n                if (typeof hook === 'function') {\n                    this._safeExecute(() => this._runWithGlobalInterception(hook, []));\n                }\n            };\n            this._addCleanupFunction = (fn) => {\n                if (typeof fn !== 'function')\n                    return undefined;\n                const wrapper = () => {\n                    try {\n                        fn();\n                    }\n                    catch {\n                        _logErr();\n                    }\n                    try {\n                        this._cleanupFunctions.delete(wrapper);\n                    }\n                    catch { }\n                };\n                this._cleanupFunctions.add(wrapper);\n                return () => { try {\n                    this._cleanupFunctions.delete(wrapper);\n                }\n                catch { } };\n            };\n            this._addEventListenerWithCleanup = (element, event, handler, options) => {\n                element.addEventListener(event, handler, options);\n                this._eventListeners.push({ element, event, handler, options });\n            };\n            this._id = id;\n            this._framework = framework;\n            this._originalMethods = def.methods || {};\n            this._computed = def.computed || {};\n            this._propEffects = def.propEffects || {};\n            this._hasComputed = !!(def.computed && Object.keys(def.computed).length);\n            this._lifecycle = {\n                mounted: def.mounted,\n                unmounted: def.unmounted || def.destroyed,\n                updated: def.updated,\n                beforeMount: def.beforeMount,\n                beforeUnmount: def.beforeUnmount || def.beforeDestroy\n            };\n            this._data = this._createReactiveData(def.data || {});\n            this._methods = this._bindMethods();\n        }\n        callBeforeMount() {\n            if (!this._beforeMountCalled) {\n                this._callLifecycleHook('beforeMount');\n                this._beforeMountCalled = true;\n            }\n        }\n        _onDataChange(_property) {\n            if (this.isBound) {\n                if (FT_C)\n                    this._computedCache.clear();\n                const effectsToRun = new Set();\n                const directDeps = this._propertyDependencies.get(_property);\n                if (directDeps)\n                    for (let i = 0; i < directDeps.length; i++)\n                        effectsToRun.add(directDeps[i]);\n                for (const effect of effectsToRun)\n                    this._safeExecute(effect);\n                if (this._hasComputed || !XTOOL_ENABLE_STATIC_DIRECTIVES) {\n                    this._scheduleRender();\n                }\n                this._callLifecycleHook('updated');\n            }\n        }\n        _bindMethods() {\n            const boundMethods = {};\n            for (const methodName in this._originalMethods) {\n                const originalMethod = this._originalMethods[methodName];\n                boundMethods[methodName] = (...args) => {\n                    const prev = this._isInMethodExecution;\n                    this._isInMethodExecution = true;\n                    try {\n                        return this._safeExecute(() => this._runWithGlobalInterception(originalMethod, args));\n                    }\n                    finally {\n                        this._isInMethodExecution = prev;\n                    }\n                };\n            }\n            return boundMethods;\n        }\n        _getComputedValue(key) {\n            if (!FT_C)\n                return undefined;\n            this._trackDependency(key);\n            if (this._computedCache.has(key))\n                return this._computedCache.get(key);\n            try {\n                const computeFn = this._computed[key];\n                this._isInComputedEvaluation = true;\n                const prev = this._computedDeps.get(key);\n                if (prev) {\n                    for (const dep of prev) {\n                        const set = this._inverseComputedDeps.get(dep);\n                        if (set)\n                            set.delete(key);\n                    }\n                }\n                this._computedDeps.set(key, new Set());\n                const value = computeFn.call(this._createMethodContext());\n                this._isInComputedEvaluation = false;\n                this._computedCache.set(key, value);\n                return value;\n            }\n            catch {\n                this._isInComputedEvaluation = false;\n                return undefined;\n            }\n        }\n        _trackDependency(propKey) {\n            if (!this._activeEffect)\n                return;\n            let deps = this._propertyDependencies.get(propKey);\n            if (!deps) {\n                deps = [];\n                this._propertyDependencies.set(propKey, deps);\n            }\n            if (!deps.includes(this._activeEffect))\n                deps.push(this._activeEffect);\n        }\n        _scheduleRender() {\n            if (this._renderScheduled)\n                return;\n            this._renderScheduled = true;\n            requestAnimationFrame(() => {\n                this._renderScheduled = false;\n                this._render();\n                if (this._nextTickQueue && this._nextTickQueue.length) {\n                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                    for (const fn of q) {\n                        try {\n                            fn();\n                        }\n                        catch { }\n                    }\n                }\n            });\n        }\n        _safeExecute(fn, fallback) {\n            try {\n                return fn();\n            }\n            catch {\n                return fallback;\n            }\n        }\n        bindToElement(element) {\n            if (this._isBound)\n                return;\n            this._element = element;\n            if (!this._beforeMountCalled) {\n                this.callBeforeMount();\n            }\n            this.completeBinding();\n        }\n        getContext(includeComputed = true) {\n            return this._createMethodContext(includeComputed);\n        }\n        _applyAsyncTemplateResolved() {\n            if (!this._element)\n                return;\n            try {\n                this._parseDirectives(this._element);\n            }\n            catch { }\n            this._scheduleRender();\n        }\n        completeBinding() {\n            if (this._isBound || !this._element)\n                return;\n            if (!this._framework._getComponentByElement(this._element))\n                this._framework._registerElement(this._element, this);\n            this._isBound = true;\n            this._isMounted = true;\n            this._parseDirectives(this._element);\n            this._setupDOMRemovalDetection();\n            this._render();\n            this._callLifecycleHook('mounted');\n        }\n        _addChild(child) {\n            if (!this._children.includes(child)) {\n                this._children.push(child);\n            }\n        }\n        _removeChild(child) {\n            const index = this._children.indexOf(child);\n            if (index > -1) {\n                this._children.splice(index, 1);\n            }\n        }\n        _setupDOMRemovalDetection() { }\n        _runWithGlobalInterception(fn, args) {\n            try {\n                const src = String(fn);\n                if (!/\\[native code\\]/.test(src)) {\n                    let body = src.trim();\n                    if (!/^function[\\s\\(]/.test(body) && !/^[\\w\\$_][\\w\\d\\$_]*\\s*=>/.test(body) && !/^\\(.*?\\)\\s*=>/.test(body)) {\n                        body = 'function ' + body;\n                    }\n                    const trySrc = 'with(ctx){ const f = (' + body + '); return f.apply(thisArg, argsArray); }';\n                    const wrapper = new Function('thisArg', 'argsArray', 'ctx', trySrc);\n                    return wrapper.call(undefined, this._createMethodContext(), args, this._createContextProxy(undefined, undefined));\n                }\n            }\n            catch {\n            }\n            return fn.apply(this._createMethodContext(), args);\n        }\n        destroy() {\n            const self = this;\n            if (self._isDestroyed)\n                return;\n            self._callLifecycleHook('beforeUnmount');\n            for (const child of self._children) {\n                if (!child.isDestroyed)\n                    child.destroy();\n            }\n            if (self._parent) {\n                self._parent._removeChild(self);\n            }\n            for (const [element, directives] of self._directives) {\n                for (const directive of directives) {\n                    if (directive.type === 'custom' && directive.customDirective?.unbind) {\n                        try {\n                            directive.customDirective.unbind(element, self);\n                        }\n                        catch {\n                            _logErr();\n                        }\n                    }\n                }\n            }\n            self._directives.clear();\n            for (const { element, event, handler, options } of self._eventListeners) {\n                element.removeEventListener(event, handler, options);\n            }\n            self._eventListeners = [];\n            for (const cleanup of Array.from(self._cleanupFunctions)) {\n                try {\n                    cleanup();\n                }\n                catch {\n                    _logErr();\n                }\n            }\n            self._cleanupFunctions.clear();\n            self._computedCache.clear();\n            self._expressionCache.clear();\n            self._propertyDependencies.clear();\n            if (self._propParent && self._propEffect) {\n                for (const deps of self._propParent._propertyDependencies.values()) {\n                    const idx = deps.indexOf(self._propEffect);\n                    if (idx > -1)\n                        deps.splice(idx, 1);\n                }\n            }\n            if (self._element)\n                self._framework._unregisterElement(self._element);\n            self._callLifecycleHook('unmounted');\n            self._isDestroyed = true;\n            self._isMounted = false;\n            self._isBound = false;\n            self._children = [];\n            self._parent = null;\n            this._deepReactiveCache = new WeakMap;\n            self._element = null;\n            queueMicrotask(() => self._framework._unregisterComponent(self._id));\n        }\n        _initReactiveProps(expr, parent) {\n            if (!expr || !parent)\n                return;\n            this._propParent = parent;\n            let evalFn;\n            try {\n                evalFn = new Function('ctx', 'with(ctx){return (' + expr + ')}');\n            }\n            catch {\n                return;\n            }\n            const update = () => {\n                parent._activeEffect = update;\n                let obj;\n                try {\n                    const ctx = parent.getContext(true);\n                    obj = evalFn(ctx);\n                }\n                catch {\n                    obj = null;\n                }\n                parent._activeEffect = null;\n                if (obj && typeof obj === 'object') {\n                    this._data.$props = this._data.$props || {};\n                    this._propUpdateActive = true;\n                    for (const k in obj) {\n                        const v = obj[k];\n                        if (this._data[k] !== v)\n                            this._data[k] = v;\n                    }\n                    this._propUpdateActive = false;\n                }\n            };\n            this._propEffect = update;\n            update();\n        }\n        _parseDirectives(element) {\n            const self = this;\n            let processedElements = 0;\n            const processElement = (el, isRoot = false) => {\n                if (!isRoot && (el.hasAttribute(attrName('data')) || this._framework._getComponentByElement(el))) {\n                    return false;\n                }\n                const isComponentTag = el[STR_TAGNAME] === 'COMPONENT';\n                const directives = [];\n                let hasTextOrHtml = false;\n                let forAttr = null;\n                for (const a of el.attributes) {\n                    const n = a.name;\n                    if (n.startsWith(PFX + '-') || n.startsWith(PFX + ':')) {\n                        directives.push(a);\n                        if (!hasTextOrHtml && (n === attrName('text') || n === attrName('html')))\n                            hasTextOrHtml = true;\n                        if (!forAttr && n === attrName('for'))\n                            forAttr = a;\n                    }\n                }\n                if (directives.length > 0) {\n                    processedElements++;\n                    if (forAttr) {\n                        self._bindDirective(el, forAttr.name, forAttr.value);\n                        return false;\n                    }\n                    for (const attr of directives)\n                        self._bindDirective(el, attr.name, attr.value);\n                }\n                if (FT_TI && !hasTextOrHtml)\n                    self._bindTextInterpolationsIn(el);\n                return isRoot || !isComponentTag;\n            };\n            processElement(element, true);\n            self._walkElements(element, processElement);\n        }\n        _bindTextInterpolationsIn(el) {\n            const nodes = Array.from(el.childNodes);\n            for (const node of nodes) {\n                if (node.nodeType !== Node.TEXT_NODE)\n                    continue;\n                const textNode = node;\n                const raw = textNode.nodeValue || '';\n                if (textNode.__x_tool_ti || raw.indexOf('{{') === -1)\n                    continue;\n                const parentTag = (textNode.parentElement?.tagName || '').toLowerCase();\n                const inCode = parentTag === 'code' || parentTag === 'pre';\n                const segs = [];\n                let i = 0;\n                while (i < raw.length) {\n                    const open = raw.indexOf('{{', i);\n                    if (open === -1) {\n                        segs.push({ literal: raw.slice(i) });\n                        break;\n                    }\n                    let bs = 0;\n                    for (let p = open - 1; p >= 0 && raw.charCodeAt(p) === 92; p--)\n                        bs++;\n                    if (bs > 0) {\n                        const prefixStart = i;\n                        const prefixEnd = open - bs;\n                        if (prefixEnd > prefixStart)\n                            segs.push({ literal: raw.slice(prefixStart, prefixEnd) });\n                        if (bs > 1)\n                            segs.push({ literal: '\\\\'.repeat(bs - 1) });\n                        const close = raw.indexOf('}}', open + 2);\n                        if (close === -1) {\n                            segs.push({ literal: raw.slice(open, raw.length) });\n                            i = raw.length;\n                            break;\n                        }\n                        segs.push({ literal: raw.slice(open, close + 2) });\n                        i = close + 2;\n                        continue;\n                    }\n                    else {\n                        if (open > i)\n                            segs.push({ literal: raw.slice(i, open) });\n                        const close = raw.indexOf('}}', open + 2);\n                        if (close === -1) {\n                            segs.push({ literal: raw.slice(open) });\n                            i = raw.length;\n                            break;\n                        }\n                        const expr = raw.slice(open + 2, close).trim();\n                        if (expr)\n                            segs.push({ expr });\n                        else\n                            segs.push({ literal: '' });\n                        i = close + 2;\n                        continue;\n                    }\n                }\n                const hasExpr = segs.some(s => s.expr);\n                const hasEscaped = segs.some(s => s.literal && s.literal.includes('{{'));\n                if (!hasExpr && !hasEscaped)\n                    continue;\n                textNode.__x_tool_ti = true;\n                const evaluators = hasExpr && !inCode ? segs.filter(s => s.expr).map(s => this._createElementEvaluator(s.expr, el)) : [];\n                let exprIndex = 0;\n                const update = () => {\n                    exprIndex = 0;\n                    let out = '';\n                    for (const s of segs) {\n                        if (s.literal != null) {\n                            out += s.literal;\n                        }\n                        else if (s.expr) {\n                            if (inCode) {\n                                out += '{{ ' + s.expr + ' }}';\n                            }\n                            else {\n                                const val = evaluators[exprIndex++]();\n                                out += (val == null ? '' : String(val));\n                            }\n                        }\n                    }\n                    if (textNode.textContent !== out)\n                        textNode.textContent = out;\n                };\n                const dirInfo = { type: 'text-interpolation', expression: raw, update: undefined };\n                this._addDirective(el, dirInfo);\n                const effect = this._createEffect(update, dirInfo);\n                dirInfo.update = effect;\n            }\n        }\n        _walkElements(parent, processor) {\n            let child = parent.firstElementChild;\n            while (child) {\n                const next = child.nextElementSibling;\n                if (processor(child))\n                    this._walkElements(child, processor);\n                child = next;\n            }\n        }\n        _bindDirective(element, directiveName, expression) {\n            const self = this;\n            const isShortBind = directiveName.startsWith(PFX + ':');\n            const type = directiveName.slice(PFX.length + 1);\n            if (isShortBind || type === 'class' || type === STR_STYLE) {\n                element.removeAttribute(directiveName);\n                return self._bindAttributeDirective(element, type, expression);\n            }\n            if (type === 'transition') {\n                element.removeAttribute(directiveName);\n                return self._bindTransitionDirective(element, expression);\n            }\n            if (type === 'text' || type === 'html' || type === 'show') {\n                element.removeAttribute(directiveName);\n                return self._bindSimpleDirective(element, expression, type);\n            }\n            const handled = type === 'model' ? (element.removeAttribute(directiveName), self._bindModelDirective(element, expression), true)\n                : type === 'if' ? (element.removeAttribute(directiveName), self._bindIfDirective(element, expression), true)\n                    : type === 'for' ? (element.removeAttribute(directiveName), self._bindForDirective(element, expression), true)\n                        : false;\n            if (handled)\n                return;\n            if (type.indexOf(':') > -1) {\n                const [prefix, rest] = type.split(':', 2);\n                const [suffix, ...mods] = rest.split('.');\n                const modifiers = mods.reduce((acc, m) => { if (m)\n                    acc[m] = true; return acc; }, {});\n                if (prefix === 'on') {\n                    element.removeAttribute(directiveName);\n                    const customDirective = self.framework._getCustomDirective(suffix);\n                    return customDirective\n                        ? self._bindCustomDirective(element, suffix, expression, customDirective, modifiers)\n                        : self._bindEventDirective(element, suffix, expression, modifiers);\n                }\n                element.removeAttribute(directiveName);\n                return self._bindAttributeDirective(element, suffix, expression);\n            }\n        }\n        _bindTransitionDirective(element, expression) {\n            if (!FT_TR)\n                return;\n            this._ensureDefaultTransitionStyles();\n            const defaults = this._getDefaultTransitionClasses();\n            const expr = (expression || '').trim();\n            if (expr) {\n                try {\n                    const evalFn = this._createElementEvaluator(expr, element);\n                    this._transitionEvaluators.set(element, evalFn);\n                }\n                catch { }\n            }\n            else {\n                this._transitionConfigs.set(element, defaults);\n            }\n            this._addDirective(element, { type: 'transition', expression });\n        }\n        _runTransition(el, mode, done) {\n            if (!FT_TR) {\n                if (done)\n                    done();\n                return;\n            }\n            const defaults = this._getDefaultTransitionClasses();\n            let userConf = null;\n            const evalFn = this._transitionEvaluators.get(el);\n            if (evalFn) {\n                try {\n                    userConf = evalFn();\n                }\n                catch {\n                    userConf = null;\n                }\n            }\n            const staticConf = this._transitionConfigs.get(el) || null;\n            const conf = Object.assign({}, defaults, (userConf && typeof userConf === 'object') ? userConf : (staticConf || {}));\n            const a = mode === 'in' ? conf.enter : conf.leave;\n            const f = mode === 'in' ? conf.enterFrom : conf.leaveFrom;\n            const t = mode === 'in' ? conf.enterTo : conf.leaveTo;\n            const end = () => { try {\n                if (a)\n                    this._classes(el, a, false);\n                if (t)\n                    this._classes(el, t, false);\n            }\n            catch { } ; if (done)\n                done(); };\n            if (a || f || t) {\n                if (a)\n                    this._classes(el, a, true);\n                if (f)\n                    this._classes(el, f, true);\n                void el.offsetWidth;\n                if (f)\n                    this._classes(el, f, false);\n                if (t)\n                    this._classes(el, t, true);\n                this._onTransitionEnd(el, end);\n            }\n            else {\n                end();\n            }\n        }\n        _transitionIn(el, done) { this._runTransition(el, 'in', done); }\n        _transitionOut(el, done) { this._runTransition(el, 'out', done); }\n        _onTransitionEnd(el, cb) {\n            let called = false;\n            const done = () => { if (called)\n                return; called = true; try {\n                el.removeEventListener('transitionend', done);\n                el.removeEventListener('animationend', done);\n            }\n            catch { } ; cb(); };\n            try {\n                el.addEventListener(STR_TR_END, done);\n                el.addEventListener(STR_ANIM_END, done);\n                setTimeout(done, 500);\n            }\n            catch {\n                cb();\n            }\n        }\n        _tokenizeClasses(input) {\n            if (!input)\n                return [];\n            if (Array.isArray(input))\n                return input.map(String).flatMap(s => String(s).split(/\\s+/)).filter(Boolean);\n            if (typeof input === 'string')\n                return input.split(/\\s+/).filter(Boolean);\n            return [];\n        }\n        _classes(el, classes, add) {\n            const tokens = this._tokenizeClasses(classes);\n            if (!tokens.length)\n                return;\n            const cl = el.classList;\n            try {\n                (add ? cl.add : cl.remove).apply(cl, tokens);\n            }\n            catch {\n                for (const t of tokens) {\n                    try {\n                        add ? cl.add(t) : cl.remove(t);\n                    }\n                    catch { }\n                }\n            }\n        }\n        _createEffect(updateFn, directiveRef) {\n            const effect = () => {\n                this._activeEffect = effect;\n                try {\n                    updateFn();\n                }\n                finally {\n                    this._activeEffect = null;\n                }\n            };\n            effect();\n            this._allEffects.add(effect);\n            if (XTOOL_ENABLE_STATIC_DIRECTIVES && directiveRef && directiveRef._static === undefined) {\n                let found = false;\n                for (const deps of this._propertyDependencies.values()) {\n                    if (deps.includes(effect)) {\n                        found = true;\n                        break;\n                    }\n                }\n                directiveRef._static = !found;\n            }\n            return effect;\n        }\n        _bindSimpleDirective(element, expression, type) {\n            if (type === 'class' || type === STR_STYLE) {\n                return this._bindAttributeDirective(element, type, expression);\n            }\n            const evaluator = this._createElementEvaluator(expression, element);\n            let originalDisplay;\n            if (type === 'show') {\n                const el = element;\n                originalDisplay = el.style[STR_DISPLAY] !== STR_NONE ? el.style[STR_DISPLAY] : undefined;\n            }\n            let _prevShown = undefined;\n            const update = () => {\n                const value = evaluator();\n                const el = element;\n                switch (type) {\n                    case 'text':\n                        el.textContent = String(value);\n                        break;\n                    case 'html':\n                        el.innerHTML = String(value || '');\n                        break;\n                    case 'show':\n                        const next = !!value;\n                        if (_prevShown === next)\n                            return;\n                        _prevShown = next;\n                        if (next) {\n                            el.style[STR_DISPLAY] = originalDisplay || '';\n                            this._transitionIn(el);\n                        }\n                        else {\n                            this._transitionOut(el, () => { el.style[STR_DISPLAY] = STR_NONE; });\n                        }\n                        break;\n                }\n            };\n            const dirInfo = { type, expression, update: undefined, originalDisplay };\n            this._addDirective(element, dirInfo);\n            const effect = this._createEffect(update, dirInfo);\n            dirInfo.update = effect;\n        }\n        _bindModelDirective(element, property) {\n            const isCheckbox = element.type === 'checkbox';\n            const isNumeric = element.type === 'number' || element.type === 'range';\n            const isMultiSelect = element.tagName === 'SELECT' && element.multiple === true;\n            if (!Reflect.has(this._data, property)) {\n                Reflect.defineProperty(this._data, property, {\n                    'configurable': true,\n                    'enumerable': true,\n                    'writable': true\n                });\n            }\n            const getValueEvaluator = this._createElementEvaluator(property, element);\n            const setValueEvaluator = this._createEvaluator(`${property} = $value`, true);\n            const inferCheckboxValue = () => {\n                if (element.hasAttribute('value'))\n                    return element.value;\n                const loopScope = this._collectLoopScope(element);\n                if (loopScope) {\n                    const keys = Object.keys(loopScope);\n                    if (keys.length === 1)\n                        return loopScope[keys[0]];\n                }\n                return element.value;\n            };\n            const checkboxValue = isCheckbox ? inferCheckboxValue() : undefined;\n            const getInputValue = () => {\n                if (isCheckbox) {\n                    if (Array.isArray(getValueEvaluator()) && checkboxValue !== undefined) {\n                        return element.checked ? checkboxValue : undefined;\n                    }\n                    if (element.hasAttribute('value'))\n                        return element.checked ? element.value : undefined;\n                    return element.checked;\n                }\n                if (isMultiSelect) {\n                    const sel = element;\n                    const values = [];\n                    for (let i = 0; i < sel.options.length; i++) {\n                        const opt = sel.options[i];\n                        if (opt.selected)\n                            values.push(opt.value);\n                    }\n                    return values;\n                }\n                return isNumeric ? parseFloat(element.value) || 0 : element.value;\n            };\n            const setInputValue = (value) => {\n                if (isCheckbox) {\n                    if (Array.isArray(value)) {\n                        const member = element.hasAttribute('value') ? element.value : checkboxValue;\n                        element.checked = member != null ? value.includes(member) : false;\n                    }\n                    else {\n                        element.checked = !!value;\n                    }\n                    return;\n                }\n                if (isMultiSelect) {\n                    const sel = element;\n                    const arr = Array.isArray(value) ? value : [];\n                    for (let i = 0; i < sel.options.length; i++) {\n                        const opt = sel.options[i];\n                        opt.selected = arr.includes(opt.value);\n                    }\n                    return;\n                }\n                element.value = String(value ?? (isNumeric ? 0 : ''));\n            };\n            this._createEffect(() => setInputValue(getValueEvaluator()));\n            const ctx = this._createContextProxy(undefined, element);\n            const updateData = () => {\n                const raw = getInputValue();\n                const currentVal = this._safeExecute(() => getValueEvaluator());\n                if (isCheckbox && Array.isArray(currentVal)) {\n                    const arr = currentVal;\n                    const member = element.hasAttribute('value') ? element.value : checkboxValue;\n                    if (member !== undefined) {\n                        const idx = arr.indexOf(member);\n                        if (element.checked) {\n                            if (idx === -1)\n                                arr.push(member);\n                        }\n                        else if (idx > -1) {\n                            arr.splice(idx, 1);\n                        }\n                    }\n                }\n                else if (isMultiSelect && Array.isArray(currentVal)) {\n                    const arr = currentVal;\n                    arr.splice(0, arr.length);\n                    raw.forEach(v => arr.push(v));\n                }\n                else {\n                    ctx.$value = raw;\n                    this._safeExecute(() => { setValueEvaluator.call(this._createMethodContext(), ctx); });\n                }\n            };\n            const t = element.type;\n            const eventType = (element[STR_TAGNAME] === 'SELECT' || t === 'checkbox' || t === 'radio' || t === 'file') ? 'change' : 'input';\n            this._addEventListenerWithCleanup(element, eventType, updateData);\n            this._addDirective(element, { type: 'model', property });\n        }\n        _bindIfDirective(element, expression) {\n            const self = this;\n            const placeholder = d.createComment('x-if');\n            element.parentNode?.insertBefore(placeholder, element);\n            element.__x_if_anchorParent = placeholder.parentElement || null;\n            const branches = [];\n            const makeActualElement = (el) => {\n                if (el[STR_TAGNAME] === STR_TEMPLATE) {\n                    const wrapper = d.createElement('div');\n                    wrapper.style[STR_DISPLAY] = STR_CONTENTS;\n                    wrapper.appendChild(el.content.cloneNode(true));\n                    return { el: wrapper, isTemplate: true };\n                }\n                return { el: el, isTemplate: false };\n            };\n            const first = makeActualElement(element);\n            const firstEval = self._createElementEvaluator(expression, element);\n            branches.push({ el: first.el, test: firstEval, isTemplate: first.isTemplate });\n            if (!first.isTemplate)\n                first.el.__x_tool_bound = true;\n            const originalNodes = [element];\n            if (FT_IFB) {\n                if (FT_IFB) {\n                    let sib = element.nextElementSibling;\n                    while (sib) {\n                        const isElse = sib.hasAttribute('x-else');\n                        const isElseIf = sib.hasAttribute('x-else-if');\n                        if (!isElse && !isElseIf)\n                            break;\n                        if (sib.hasAttribute('x-else-if')) {\n                            const attr = sib.getAttribute('x-else-if') || '';\n                            const branch = makeActualElement(sib);\n                            const evalFn = self._createElementEvaluator((attr || '').trim(), sib);\n                            branches.push({ el: branch.el, test: evalFn, isTemplate: branch.isTemplate });\n                            if (!branch.isTemplate)\n                                branch.el.__x_tool_bound = true;\n                        }\n                        else {\n                            const branch = makeActualElement(sib);\n                            branches.push({ el: branch.el, test: null, isTemplate: branch.isTemplate });\n                            if (!branch.isTemplate)\n                                branch.el.__x_tool_bound = true;\n                        }\n                        sib.removeAttribute('x-else');\n                        sib.removeAttribute('x-else-if');\n                        originalNodes.push(sib);\n                        sib = sib.nextElementSibling;\n                    }\n                }\n            }\n            let active = -1;\n            for (const orig of originalNodes) {\n                if (orig.parentNode)\n                    orig.parentNode.removeChild(orig);\n            }\n            const mountBranch = (idx) => {\n                if (idx < 0)\n                    return;\n                const b = branches[idx];\n                if (!b.el.__x_tool_bound) {\n                    self._parseDirectives(b.el);\n                    b.el.__x_tool_bound = true;\n                }\n                element.__x_if_current?.parentNode?.removeChild(element.__x_if_current);\n                if (!b.el.parentNode) {\n                    placeholder.parentNode?.insertBefore(b.el, placeholder.nextSibling);\n                    this._transitionIn(b.el);\n                }\n                element.__x_if_current = b.el;\n                active = idx;\n            };\n            const unmountBranch = (idx, cb) => {\n                if (idx < 0) {\n                    if (cb)\n                        cb();\n                    return;\n                }\n                const b = branches[idx];\n                if (b.el.parentNode) {\n                    this._transitionOut(b.el, () => { if (b.el.parentNode)\n                        b.el.parentNode.removeChild(b.el); if (cb)\n                        cb(); });\n                }\n                else if (cb)\n                    cb();\n                active = -1;\n            };\n            const update = () => {\n                let next = -1;\n                for (let i = 0; i < branches[STR_LENGTH]; i++) {\n                    const b = branches[i];\n                    const pass = b.test ? !!b.test() : true;\n                    if (pass) {\n                        next = i;\n                        break;\n                    }\n                }\n                if (next === active)\n                    return;\n                if (active !== -1) {\n                    unmountBranch(active, () => mountBranch(next));\n                }\n                else {\n                    mountBranch(next);\n                }\n            };\n            const effect = self._createEffect(update);\n            self._addDirective(element, { type: 'if', expression, update: effect });\n        }\n        _bindEventDirective(element, eventName, expression, modifiers) {\n            const self = this;\n            const trimmed = (expression || '').trim();\n            const arrow = self._extractArrowFunction(trimmed);\n            const opts = modifiers ? {\n                once: !!modifiers.once,\n                passive: !!modifiers.passive,\n                capture: !!modifiers.capture,\n            } : undefined;\n            const onlySelf = !!modifiers?.self;\n            const shouldPrevent = !!modifiers?.prevent;\n            const shouldStop = !!modifiers?.stop;\n            const isOutside = !!modifiers?.outside;\n            const deferExec = !!modifiers?.defer;\n            const keyAliasMap = {\n                enter: ['enter'],\n                esc: ['escape', 'esc'],\n                escape: ['escape', 'esc'],\n                space: [' ', 'space', 'spacebar'],\n                tab: ['tab'],\n                backspace: ['backspace'],\n                delete: ['delete', 'del'],\n                del: ['delete', 'del'],\n                arrowup: ['arrowup', 'up'],\n                arrowdown: ['arrowdown', 'down'],\n                arrowleft: ['arrowleft', 'left'],\n                arrowright: ['arrowright', 'right'],\n                home: ['home'],\n                end: ['end'],\n                pageup: ['pageup'],\n                pagedown: ['pagedown']\n            };\n            const comboRequirements = {\n                ctrl: !!modifiers?.ctrl,\n                alt: !!modifiers?.alt,\n                shift: !!modifiers?.shift,\n                meta: !!modifiers?.meta,\n            };\n            const buttonMap = { left: 0, middle: 1, right: 2 };\n            const touchSingle = !!modifiers?.single;\n            const touchMulti = !!modifiers?.multi;\n            const modifierKeys = modifiers ? _Okeys(modifiers) : [];\n            const allowedKeys = [];\n            for (const m of modifierKeys) {\n                const aliases = keyAliasMap[m.toLowerCase()];\n                if (aliases)\n                    allowedKeys.push(...aliases);\n            }\n            const allowedButtons = [];\n            for (const m of modifierKeys) {\n                const btn = buttonMap[m.toLowerCase()];\n                if (btn !== undefined)\n                    allowedButtons.push(btn);\n            }\n            const needKeyCheck = allowedKeys.length > 0 || comboRequirements.ctrl || comboRequirements.alt || comboRequirements.shift || comboRequirements.meta;\n            const needButtonCheck = allowedButtons.length > 0;\n            const needTouchCheck = touchSingle || touchMulti;\n            const passesFilters = (event) => {\n                const path = event.composedPath ? event.composedPath() : null;\n                const tgt = (path && path.length ? path[0] : event.target);\n                if (isOutside) {\n                    if (!tgt)\n                        return false;\n                    if (element instanceof Node && (element === tgt || element.contains(tgt)))\n                        return false;\n                }\n                if (onlySelf && event.target !== element)\n                    return false;\n                if (needTouchCheck) {\n                    if (event instanceof TouchEvent) {\n                        const tCount = event.touches.length;\n                        if (touchSingle && tCount !== 1)\n                            return false;\n                        if (touchMulti && tCount < 2)\n                            return false;\n                    }\n                    else\n                        return false;\n                }\n                if (needButtonCheck) {\n                    if (event instanceof MouseEvent) {\n                        if (!allowedButtons.includes(event.button))\n                            return false;\n                    }\n                    else\n                        return false;\n                }\n                if (needKeyCheck) {\n                    if (!(event instanceof KeyboardEvent))\n                        return false;\n                    const k = (event.key || '').toLowerCase();\n                    if (allowedKeys.length > 0 && !allowedKeys.includes(k))\n                        return false;\n                    if (comboRequirements.ctrl && !event.ctrlKey)\n                        return false;\n                    if (comboRequirements.alt && !event.altKey)\n                        return false;\n                    if (comboRequirements.shift && !event.shiftKey)\n                        return false;\n                    if (comboRequirements.meta && !event.metaKey)\n                        return false;\n                }\n                return true;\n            };\n            const hasExpr = !!trimmed;\n            let runExpr = null;\n            const thisCtx = self._createMethodContext();\n            if (arrow) {\n                const compiledArrow = self._compileArrowForEvent(arrow.paramsList, arrow.body, arrow.isBlock);\n                const mapArgs = arrow.paramsList.length\n                    ? (event) => arrow.paramsList.map((_, idx) => (idx === 0 ? event : idx === 1 ? element : undefined))\n                    : () => [];\n                runExpr = (event) => {\n                    const ctx = self._createContextProxy(event, element);\n                    compiledArrow.call(thisCtx, ctx, ...mapArgs(event));\n                };\n            }\n            else if (hasExpr) {\n                const isStatement = trimmed.includes(';');\n                const executor = self._createEvaluator(trimmed, isStatement);\n                runExpr = (event) => {\n                    const ctx = self._createContextProxy(event, element);\n                    const result = executor.call(thisCtx, ctx);\n                    if (typeof result === 'function')\n                        result.call(thisCtx, event);\n                };\n            }\n            const createEventHandler = (event) => {\n                if (!passesFilters(event))\n                    return;\n                if (shouldPrevent && typeof event.preventDefault === 'function')\n                    event.preventDefault();\n                if (shouldStop && typeof event.stopPropagation === 'function')\n                    event.stopPropagation();\n                if (!runExpr)\n                    return;\n                if (deferExec && typeof queueMicrotask === 'function') {\n                    const ev = event;\n                    queueMicrotask(() => self._safeExecute(() => runExpr(ev)));\n                    return;\n                }\n                self._safeExecute(() => runExpr(event));\n            };\n            const cfg = this.framework._getConfig();\n            const canDelegate = !!cfg.delegate && EV_DELEGATED.includes(eventName);\n            if (!isOutside && canDelegate) {\n                const remover = this.framework._registerDelegated(element, eventName, { filter: (e) => passesFilters(e), run: (e) => createEventHandler(e), once: !!modifiers?.once, comp: this });\n                this._addCleanupFunction(remover);\n            }\n            else {\n                const target = isOutside ? (element?.ownerDocument || d || document) : element;\n                self._addEventListenerWithCleanup(target, eventName, createEventHandler, opts);\n            }\n        }\n        _createEvaluator(expression, isStatement = false) {\n            const key = `${isStatement ? 's' : 'r'}:${expression}`;\n            let fn = this._expressionCache.get(key);\n            if (!fn) {\n                fn = new Function('ctx', `with(ctx){${isStatement ? expression : `return (${expression})`}}`);\n                this._expressionCache.set(key, fn);\n            }\n            return fn;\n        }\n        _createElementEvaluator(expression, element) {\n            const self = this;\n            const compiled = self._createEvaluator(expression);\n            return () => this._safeExecute(() => compiled.call(self._createMethodContext(), self._createContextProxy(undefined, element)));\n        }\n        _extractArrowFunction(expression) {\n            let m = expression.match(/^\\s*\\(\\s*([^)]*?)\\s*\\)\\s*=>\\s*([\\s\\S]+)$/);\n            if (!m)\n                m = expression.match(/^\\s*([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*=>\\s*([\\s\\S]+)$/);\n            if (!m)\n                return null;\n            const params = (m[1] || '')\n                .split(',')\n                .map(p => p.trim())\n                .filter(Boolean);\n            const body = (m[2] || '').trim();\n            const isBlock = body.startsWith('{') && body.endsWith('}');\n            const finalBody = isBlock ? body.slice(1, -1) : body;\n            return { paramsList: params, body: finalBody, isBlock };\n        }\n        _compileArrowForEvent(params, body, isBlock) {\n            const content = isBlock ? body : 'return ( ' + body + ' );';\n            return new Function('ctx', ...params, 'with(ctx){ ' + content + ' }');\n        }\n        _wrapData(data, parentKey) {\n            if (!(Object.getPrototypeOf(data) === Object.prototype || ARRAY_ISARRAY(data)))\n                return data;\n            const self = this;\n            if (!this._deepReactiveCache)\n                this._deepReactiveCache = new WeakMap();\n            if (this._deepReactiveCache.has(data))\n                return this._deepReactiveCache.get(data);\n            const proxy = new Proxy(data, {\n                get: (target, p, receiver) => {\n                    if (ARRAY_ISARRAY(target)) {\n                        if (p === Symbol.iterator) {\n                            self._trackDependency(parentKey);\n                            return Reflect.get(target, p, receiver);\n                        }\n                        if (p === 'length' || (typeof p === 'string' && /^\\d+$/.test(p))) {\n                            self._trackDependency(parentKey);\n                        }\n                    }\n                    else {\n                        self._trackDependency(parentKey);\n                    }\n                    const value = Reflect.get(target, p, receiver);\n                    if (ARRAY_ISARRAY(target) && typeof value === 'function' && ['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse', 'copyWithin', 'fill'].includes(p)) {\n                        return function (...args) {\n                            const arr = target;\n                            const beforeLen = arr.length;\n                            const beforeFirst = arr[0];\n                            const beforeLast = arr[beforeLen - 1];\n                            const result = value.apply(target, args);\n                            if (arr.length !== beforeLen || arr[0] !== beforeFirst || arr[arr.length - 1] !== beforeLast) {\n                                self._onDataChange(parentKey);\n                            }\n                            return result;\n                        };\n                    }\n                    const type = typeof value;\n                    if (value && type === 'object') {\n                        return self._wrapData(value, parentKey);\n                    }\n                    return value;\n                },\n                ownKeys: (target) => { return Reflect.ownKeys(target); },\n                has: (target, key) => { return Reflect.has(target, key); },\n                set: (target, p, value) => {\n                    if (self._isDestroyed)\n                        return true;\n                    if (typeof p === 'symbol')\n                        return true;\n                    const had = Reflect.has(target, p);\n                    const oldValue = had ? Reflect.get(target, p) : undefined;\n                    if (value && typeof value === 'object') {\n                        self._wrapData(value, parentKey);\n                    }\n                    if (!had) {\n                        try {\n                            Reflect.defineProperty(target, p, {\n                                configurable: true,\n                                enumerable: true,\n                                writable: true,\n                                value\n                            });\n                        }\n                        catch {\n                            Reflect.set(target, p, value);\n                        }\n                        self._onDataChange(parentKey);\n                        return true;\n                    }\n                    if (oldValue === value)\n                        return true;\n                    Reflect.set(target, p, value);\n                    self._onDataChange(parentKey);\n                    return true;\n                },\n                deleteProperty: (target, p) => Reflect.deleteProperty(target, p)\n            });\n            this._deepReactiveCache.set(data, proxy);\n            return proxy;\n        }\n        _createReactiveData(data) {\n            const self = this;\n            return new Proxy(data, {\n                get: (target, property, receiver) => {\n                    const value = Reflect.get(target, property, receiver);\n                    if (property === Symbol.iterator)\n                        return value;\n                    if (typeof property !== 'symbol') {\n                        self._trackDependency(property);\n                    }\n                    if (value && typeof value == 'object') {\n                        return self._wrapData(value, property);\n                    }\n                    return value;\n                },\n                ownKeys: (target) => Reflect.ownKeys(target),\n                has: (target, key) => Reflect.has(target, key),\n                set: (target, property, value, receiver) => {\n                    if (self._isDestroyed)\n                        return true;\n                    if (property === Symbol.iterator && ARRAY_ISARRAY(target))\n                        return value;\n                    const oldValue = Reflect.get(target, property);\n                    if (oldValue === value)\n                        return true;\n                    const had = Reflect.has(target, property);\n                    if (!had) {\n                        try {\n                            Reflect.defineProperty(target, property, {\n                                configurable: true,\n                                enumerable: true,\n                                writable: true,\n                                value\n                            });\n                        }\n                        catch {\n                            Reflect.set(target, property, value, receiver);\n                        }\n                    }\n                    else {\n                        Reflect.set(target, property, value, receiver);\n                    }\n                    this._onDataChange(property);\n                    if (this._propUpdateActive && property !== '$props') {\n                        const pc = target.$props;\n                        if (pc)\n                            pc[property] = value;\n                        const eff = this._propEffects[property];\n                        if (eff && !this._runningPropEffect) {\n                            this._runningPropEffect = true;\n                            this._safeExecute(() => eff.call(this._createMethodContext(), value, oldValue));\n                            this._runningPropEffect = false;\n                        }\n                    }\n                    return true;\n                }\n            });\n        }\n        _createMethodContext(_includeComputed = true) {\n            const specials = {\n                '$log': (..._args) => { },\n                '$destroy': () => this.destroy(),\n                '$forceUpdate': () => this._scheduleRender(),\n                '$addCleanupFunction': (fn) => this._addCleanupFunction(fn),\n                '$nextTick': (cb) => {\n                    if (cb) {\n                        this._nextTickQueue.push(cb);\n                        if (!this._renderScheduled)\n                            queueMicrotask(() => {\n                                if (!this._renderScheduled && this._nextTickQueue.length) {\n                                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                                    for (const fn of q) {\n                                        try {\n                                            fn();\n                                        }\n                                        catch { }\n                                    }\n                                }\n                            });\n                        return;\n                    }\n                    return new Promise(resolve => {\n                        this._nextTickQueue.push(() => resolve());\n                        if (!this._renderScheduled)\n                            queueMicrotask(() => {\n                                if (!this._renderScheduled && this._nextTickQueue.length) {\n                                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                                    for (const fn of q) {\n                                        try {\n                                            fn();\n                                        }\n                                        catch { }\n                                    }\n                                }\n                            });\n                    });\n                },\n                '$el': this._element,\n                '$id': this._id,\n                '$isMounted': this._isMounted,\n                '$isDestroyed': this._isDestroyed,\n                '$parent': this._parent,\n                '$children': this._children,\n                '$mutate': (fn) => {\n                    const prevMethod = this._isInMethodExecution;\n                    const prevComputed = this._isInComputedEvaluation;\n                    this._isInMethodExecution = false;\n                    this._isInComputedEvaluation = false;\n                    try {\n                        return typeof fn === 'function' ? fn() : undefined;\n                    }\n                    finally {\n                        this._isInMethodExecution = prevMethod;\n                        this._isInComputedEvaluation = prevComputed;\n                        this._scheduleRender();\n                    }\n                }\n            };\n            return new Proxy(this._data, {\n                get: (target, propStr) => {\n                    if (propStr in target) {\n                        this._trackDependency(propStr);\n                        const v = target[propStr];\n                        return v;\n                    }\n                    if (FT_C && (propStr in this._computed))\n                        return this._getComputedValue(propStr);\n                    if (propStr in specials)\n                        return specials[propStr];\n                    return this._methods[propStr];\n                },\n                set: (_target, propStr, value) => {\n                    if (this._isInComputedEvaluation) {\n                        if (typeof console !== 'undefined' && console.warn)\n                            console.warn(`Ignored mutation of '${String(propStr)}' inside ${this._isInComputedEvaluation ? 'computed' : 'method'}; wrap in $mutate(()=>{ ... }) to apply.`);\n                        return true;\n                    }\n                    this._data[propStr] = value;\n                    return true;\n                }\n            });\n        }\n        _createContextProxy(event, targetElement) {\n            const component = this;\n            const mergedScope = targetElement ? this._collectLoopScope(targetElement) : null;\n            const scopeKeys = mergedScope ? new Set(_Okeys(mergedScope)) : new Set();\n            const gWindow = (typeof window !== 'undefined' ? window : undefined);\n            const gDocument = (typeof document !== 'undefined' ? document : undefined);\n            const cfg = this.framework._getConfig();\n            const sandbox = !!cfg.sandboxExpressions;\n            const allow = new Set((cfg.allowGlobals || []).map(s => String(s)));\n            const wrapTarget = (t) => {\n                if (!t)\n                    return t;\n                const hasAdd = typeof t.addEventListener === 'function';\n                if (!hasAdd)\n                    return t;\n                const handlerMap = new WeakMap();\n                const makeKey = (event, options) => {\n                    try {\n                        return event + '|' + (options === undefined ? '' : (typeof options === 'object' ? JSON.stringify(options) : String(options)));\n                    }\n                    catch {\n                        return event + '|';\n                    }\n                };\n                return new Proxy(t, {\n                    get(target, prop, receiver) {\n                        if (prop === 'addEventListener') {\n                            return function (event, handler, options) {\n                                target.addEventListener(event, handler, options);\n                                const remover = component._addCleanupFunction(() => { try {\n                                    target.removeEventListener(event, handler, options);\n                                }\n                                catch { } });\n                                try {\n                                    if (typeof handler === 'function' && remover) {\n                                        let m = handlerMap.get(handler);\n                                        if (!m) {\n                                            m = new Map();\n                                            handlerMap.set(handler, m);\n                                        }\n                                        m.set(makeKey(event, options), remover);\n                                    }\n                                }\n                                catch { }\n                            };\n                        }\n                        if (prop === 'removeEventListener') {\n                            return function (event, handler, options) {\n                                try {\n                                    target.removeEventListener(event, handler, options);\n                                }\n                                catch { }\n                                try {\n                                    if (typeof handler === 'function') {\n                                        const m = handlerMap.get(handler);\n                                        if (m) {\n                                            const key = makeKey(event, options);\n                                            const rem = m.get(key);\n                                            if (rem) {\n                                                try {\n                                                    rem();\n                                                }\n                                                catch { }\n                                                ;\n                                                m.delete(key);\n                                            }\n                                            if (m.size === 0)\n                                                handlerMap.delete(handler);\n                                        }\n                                    }\n                                }\n                                catch { }\n                            };\n                        }\n                        if (prop === 'querySelector') {\n                            return function (sel) { const res = target.querySelector(sel); return wrapTarget(res); };\n                        }\n                        if (prop === 'querySelectorAll') {\n                            return function (sel) { const list = target.querySelectorAll(sel); return Array.from(list).map(wrapTarget); };\n                        }\n                        if (prop === 'getElementById') {\n                            return function (id) { const res = target.getElementById(id); return wrapTarget(res); };\n                        }\n                        if (prop === 'document') {\n                            const doc = target.document;\n                            return wrapTarget(doc) || doc;\n                        }\n                        if (prop === 'body' && target === gDocument) {\n                            const b = target.body;\n                            return wrapTarget(b) || b;\n                        }\n                        if (prop === 'defaultView' && target === gDocument) {\n                            const w = target.defaultView;\n                            return wrapTarget(w) || w;\n                        }\n                        return Reflect.get(target, prop, receiver);\n                    }\n                });\n            };\n            const _timeoutRemovers = new Map();\n            const _intervalRemovers = new Map();\n            const _rafRemovers = new Map();\n            const ctxSetTimeout = (fn, ms, ...args) => {\n                const id = gWindow?.setTimeout?.(fn, ms, ...args);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.clearTimeout?.(id);\n                    }\n                    catch { } });\n                    _timeoutRemovers.set(id, remover);\n                }\n                return id;\n            };\n            const ctxSetInterval = (fn, ms, ...args) => {\n                const id = gWindow?.setInterval?.(fn, ms, ...args);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.clearInterval?.(id);\n                    }\n                    catch { } });\n                    _intervalRemovers.set(id, remover);\n                }\n                return id;\n            };\n            const ctxRequestAnimationFrame = (cb) => {\n                const id = gWindow?.requestAnimationFrame?.(cb);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.cancelAnimationFrame?.(id);\n                    }\n                    catch { } });\n                    _rafRemovers.set(id, remover);\n                }\n                return id;\n            };\n            const wrapObserverCtor = (Orig) => {\n                if (!Orig)\n                    return undefined;\n                const Wrapped = function (...args) {\n                    const inst = new Orig(...args);\n                    component._addCleanupFunction(() => { try {\n                        inst.disconnect();\n                    }\n                    catch { } });\n                    return inst;\n                };\n                Wrapped.prototype = Orig.prototype;\n                return Wrapped;\n            };\n            const specials = {\n                '$target': targetElement || null,\n                '$event': event || null,\n                ...(sandbox && !allow.has('setTimeout') ? {} : { 'setTimeout': ctxSetTimeout }),\n                ...(sandbox && !allow.has('clearTimeout') ? {} : { 'clearTimeout': (id) => { try {\n                        gWindow?.clearTimeout?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _timeoutRemovers.get(id);\n                            if (r) {\n                                r();\n                                _timeoutRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('setInterval') ? {} : { 'setInterval': ctxSetInterval }),\n                ...(sandbox && !allow.has('clearInterval') ? {} : { 'clearInterval': (id) => { try {\n                        gWindow?.clearInterval?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _intervalRemovers.get(id);\n                            if (r) {\n                                r();\n                                _intervalRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('requestAnimationFrame') ? {} : { 'requestAnimationFrame': ctxRequestAnimationFrame }),\n                ...(sandbox && !allow.has('cancelAnimationFrame') ? {} : { 'cancelAnimationFrame': (id) => { try {\n                        gWindow?.cancelAnimationFrame?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _rafRemovers.get(id);\n                            if (r) {\n                                r();\n                                _rafRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('MutationObserver') ? {} : { 'MutationObserver': wrapObserverCtor(gWindow?.MutationObserver) }),\n                ...(sandbox && !allow.has('ResizeObserver') ? {} : { 'ResizeObserver': wrapObserverCtor(gWindow?.ResizeObserver) }),\n                ...(sandbox && !allow.has('IntersectionObserver') ? {} : { 'IntersectionObserver': wrapObserverCtor(gWindow?.IntersectionObserver) }),\n                ...(sandbox && !allow.has('window') ? {} : { 'window': wrapTarget(gWindow) }),\n                ...(sandbox && !allow.has('document') ? {} : { 'document': wrapTarget(gDocument) })\n            };\n            return new Proxy({}, {\n                get: (_t, propStr) => {\n                    if (mergedScope && propStr in mergedScope)\n                        return mergedScope[propStr];\n                    if (propStr in component._data)\n                        return component._data[propStr];\n                    if (propStr in component._computed)\n                        return component._getComputedValue(propStr);\n                    if (propStr in component._methods)\n                        return component._methods[propStr];\n                    if (propStr in specials)\n                        return specials[propStr];\n                    return undefined;\n                },\n                set: (_t, propStr, value) => {\n                    if (mergedScope && scopeKeys.has(propStr)) {\n                        mergedScope[propStr] = value;\n                    }\n                    else {\n                        component._data[propStr] = value;\n                    }\n                    return true;\n                },\n                has: (_t, propStr) => !!(mergedScope && propStr in mergedScope) ||\n                    propStr in component._data ||\n                    propStr in component._computed ||\n                    propStr in component._methods ||\n                    propStr in specials\n            });\n        }\n        _bindCustomDirective(element, _name, expression, directive, modifiers) {\n            const self = this;\n            const evaluator = self._createElementEvaluator(expression, element);\n            const directiveInfo = { type: 'custom', expression, customDirective: directive };\n            if (directive.bind) {\n                self._safeExecute(() => directive.bind(element, evaluator(), expression, self, modifiers, evaluator));\n            }\n            const update = () => {\n                if (directive.update)\n                    self._safeExecute(() => directive.update(element, evaluator(), expression, self, modifiers, evaluator));\n            };\n            const effect = self._createEffect(update);\n            directiveInfo.update = effect;\n            self._addDirective(element, directiveInfo);\n        }\n        _bindAttributeDirective(element, attributeName, expression) {\n            const self = this;\n            const evaluator = self._createElementEvaluator(expression, element);\n            if (attributeName === 'class') {\n                const el = element;\n                if (!self._initialClassSets.get(el)) {\n                    const baseSet = new Set();\n                    const oc = el.className || '';\n                    if (oc)\n                        for (const cls of oc.split(/\\s+/)) {\n                            if (cls)\n                                baseSet.add(cls);\n                        }\n                    self._initialClassSets.set(el, baseSet);\n                }\n            }\n            const elAny = element;\n            let propName = null;\n            if (attributeName in elAny)\n                propName = attributeName;\n            else {\n                const camel = attributeName.replace(/-([a-z])/g, (_, c) => c.toUpperCase());\n                if (camel in elAny)\n                    propName = camel;\n                else if (attributeName.toLowerCase() === 'readonly' && 'readOnly' in elAny)\n                    propName = 'readOnly';\n            }\n            const isBooleanProp = !!(propName && typeof elAny[propName] === 'boolean');\n            const hasNonFunctionProp = !!(propName && (propName in elAny) && typeof elAny[propName] !== 'function');\n            const isKnownBooleanAttr = !!ReactiveComponent._BA[attributeName.toLowerCase()];\n            const update = () => {\n                const value = evaluator();\n                if (attributeName === 'class') {\n                    const el = element;\n                    const base = self._initialClassSets.get(el);\n                    if (typeof value === 'string') {\n                        el.className = base && base.size ? [...base].join(' ') + (value ? ' ' + value : '') : value || '';\n                    }\n                    else if (ARRAY_ISARRAY(value)) {\n                        if (base && base.size)\n                            el.className = [...base, ...value.filter(Boolean)].join(' ');\n                        else\n                            el.className = value.filter(Boolean).join(' ');\n                    }\n                    else if (value && typeof value === 'object') {\n                        if (base && base.size)\n                            el.className = [...base].join(' ');\n                        for (const raw in value) {\n                            const on = !!value[raw];\n                            if (!raw)\n                                continue;\n                            const tokens = raw.split(/\\s+/);\n                            for (let i = 0; i < tokens.length; i++) {\n                                const tk = tokens[i];\n                                if (!tk)\n                                    continue;\n                                el.classList.toggle(tk, on);\n                            }\n                        }\n                    }\n                    else if (value == null && base && base.size) {\n                        el.className = [...base].join(' ');\n                    }\n                    else if (value == null) {\n                        el.removeAttribute('class');\n                    }\n                    return;\n                }\n                if (attributeName === STR_STYLE) {\n                    const el = element;\n                    if (typeof value === 'string') {\n                        el.style.cssText = value;\n                        return;\n                    }\n                    if (value && typeof value === 'object') {\n                        Object.assign(el.style, value);\n                        return;\n                    }\n                    if (value == null)\n                        el.removeAttribute('style');\n                    return;\n                }\n                if ((isBooleanProp && propName) || isKnownBooleanAttr) {\n                    const boolVal = !!value;\n                    if (propName && isBooleanProp)\n                        elAny[propName] = boolVal;\n                    if (boolVal)\n                        element.setAttribute(attributeName, '');\n                    else\n                        element.removeAttribute(attributeName);\n                    return;\n                }\n                let normalized = null;\n                if (value && typeof value === 'object') {\n                    const parts = [];\n                    for (const k in value) {\n                        if (value[k])\n                            parts.push(k);\n                    }\n                    normalized = parts.length ? parts.join(' ') : null;\n                }\n                else if (value !== null && value !== undefined) {\n                    normalized = String(value);\n                }\n                if (hasNonFunctionProp && propName) {\n                    if (normalized !== null) {\n                        try {\n                            elAny[propName] = normalized;\n                        }\n                        catch (e) {\n                            try {\n                                element.setAttribute(attributeName, normalized);\n                            }\n                            catch { }\n                        }\n                    }\n                    else {\n                        element.removeAttribute(attributeName);\n                    }\n                    return;\n                }\n                if (normalized !== null) {\n                    const cur = element.getAttribute(attributeName);\n                    if (cur !== normalized)\n                        element.setAttribute(attributeName, normalized);\n                }\n                else {\n                    if (element.hasAttribute(attributeName))\n                        element.removeAttribute(attributeName);\n                }\n            };\n            const effect = self._createEffect(update);\n            self._addDirective(element, { type: 'bind', expression, update: effect });\n        }\n        _collectLoopScope(el) {\n            if (!el)\n                return null;\n            if (!el.parentElement) {\n                const cur = el.__x_if_current;\n                if (cur && cur.parentElement) {\n                    el = cur;\n                }\n                else {\n                    const anchorParent = el.__x_if_anchorParent;\n                    if (anchorParent)\n                        el = anchorParent;\n                }\n            }\n            const merged = {};\n            let node = el;\n            while (node) {\n                const scope = this._loopScopes.get(node);\n                if (scope)\n                    Object.assign(merged, scope);\n                if (node === this.element)\n                    break;\n                node = node.parentElement;\n            }\n            return _Okeys(merged).length ? merged : null;\n        }\n        _updateElementDirectives(root) {\n            for (const [element, directives] of this._directives) {\n                for (const directive of directives) {\n                    if ((root === element || (element instanceof Element && root.contains(element))) && directive.update) {\n                        directive.update();\n                    }\n                }\n            }\n        }\n        _bindForDirective(element, expression) {\n            const self = this;\n            const match = expression.trim().match(/^(?:\\(\\s*([^,\\s]+)\\s*(?:,\\s*([^\\)]+))?\\s*\\)|([^,\\s]+))\\s+(in|of)\\s+(.+)$/);\n            if (!match) {\n                return;\n            }\n            const itemVar = match[1] || match[3];\n            const indexVar = match[2];\n            const listCode = match[5];\n            const placeholder = d.createComment('x-for');\n            element.parentNode?.insertBefore(placeholder, element);\n            let templateToClone;\n            if (element[STR_TAGNAME] === STR_TEMPLATE) {\n                templateToClone = d.createElement('div');\n                templateToClone.style[STR_DISPLAY] = STR_CONTENTS;\n                templateToClone.appendChild(element.content.cloneNode(true));\n                element.parentNode?.removeChild(element);\n            }\n            else {\n                templateToClone = element;\n                element.parentNode?.removeChild(element);\n            }\n            const contextAnchor = placeholder.parentElement || self.element;\n            const listEval = self._createElementEvaluator(listCode.trim(), contextAnchor);\n            const instances = [];\n            const createScope = (item, idxOrKey) => {\n                const scope = { [itemVar]: item };\n                if (indexVar)\n                    scope[indexVar] = idxOrKey;\n                return scope;\n            };\n            const update = () => {\n                const norm = self._safeExecute(() => {\n                    const result = listEval();\n                    if (_AisArr(result))\n                        return { list: result, keys: null };\n                    if (typeof Map !== 'undefined' && result instanceof Map) {\n                        return { list: _Afrom(result.values()), keys: _Afrom(result.keys()) };\n                    }\n                    if (typeof Set !== 'undefined' && result instanceof Set) {\n                        return { list: _Afrom(result.values()), keys: null };\n                    }\n                    if (result && typeof result[Symbol.iterator] === 'function') {\n                        return { list: _Afrom(result), keys: null };\n                    }\n                    if (result && typeof result === 'object') {\n                        const keys = Object.keys(result);\n                        const list = keys.map(k => result[k]);\n                        return { list, keys };\n                    }\n                    return { list: [], keys: null };\n                }, { list: [], keys: null });\n                const list = norm.list;\n                const keysArr = norm.keys;\n                if (instances.length > list.length) {\n                    while (instances.length > list.length) {\n                        const inst = instances.pop();\n                        if (inst.parentNode)\n                            inst.parentNode.removeChild(inst);\n                    }\n                }\n                const minLen = Math.min(instances.length, list.length);\n                for (let i = 0; i < minLen; i++) {\n                    const inst = instances[i];\n                    const keyVal = keysArr ? keysArr[i] : i;\n                    self._loopScopes.set(inst, createScope(list[i], keyVal));\n                    self._updateElementDirectives(inst);\n                }\n                if (list.length > instances.length) {\n                    const frag = d.createDocumentFragment();\n                    const start = instances.length;\n                    for (let i = start; i < list.length; i++) {\n                        const clone = templateToClone.cloneNode(true);\n                        clone.removeAttribute('x-for');\n                        const keyVal = keysArr ? keysArr[i] : i;\n                        self._loopScopes.set(clone, createScope(list[i], keyVal));\n                        try {\n                            self._parseDirectives(clone);\n                        }\n                        catch { }\n                        frag.appendChild(clone);\n                        instances.push(clone);\n                    }\n                    const ref = instances[start - 1] || placeholder;\n                    if (ref.parentNode)\n                        ref.parentNode.insertBefore(frag, ref.nextSibling);\n                }\n            };\n            const dir = { type: 'for', expression };\n            const effect = self._createEffect(update, dir);\n            dir.update = effect;\n            self._addDirective(placeholder, dir);\n        }\n        _render() {\n            const self = this;\n            for (const directives of self._directives.values()) {\n                for (const dr of directives) {\n                    if (XTOOL_ENABLE_STATIC_DIRECTIVES && dr._static)\n                        continue;\n                    if (dr.update) {\n                        try {\n                            dr.update();\n                        }\n                        catch (error) {\n                            if (!(error instanceof ReferenceError)) { }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    ReactiveComponent._BA = {\n        itemscope: 1, formnovalidate: 1, novalidate: 1, default: 1\n    };\n    const xTool = new XToolFramework();\n    return xTool;\n}();\nif (typeof window !== 'undefined') {\n    const w = window;\n    w.XTool = XToolFramework;\n    w.FyneJS = XToolFramework;\n}\n//# sourceMappingURL=x-tool.js.map"],"mappings":"AAAA,aACA,MAAMA,EAAgBC,MAAMC,QAMtBC,EAAiB,WACnB,MAAMC,EAASH,MAAMI,KACfC,EAAUN,EACVO,EAASC,OAAOC,KAChBC,EAAU,OACVC,EAAY,QACZC,EAAc,UACdC,EAAW,OACXC,EAAc,UACdC,EAAe,WACfC,EAAa,SACnB,IAAIC,EAAiC,EACrC,MAAMC,EAAyB,oBAAbC,SAA2BA,SAAW,KAGlDC,EAAe,WAEfC,EAAe,CADJ,QAAoB,QAAqB,SAAuB,UAAsB,SAEvG,IACI,GAAIH,GAAKA,EAAEI,OAASJ,EAAEK,eAAe,sBAAuB,CACxD,MAAMC,EAAQN,EAAEO,cAAcd,GAC9Ba,EAAME,GAAK,qBACXF,EAAMG,YAAc,mGACpBT,EAAEI,KAAKM,YAAYJ,EACvB,CACJ,CACA,MAAQ,CACR,IAAIK,EAAM,IACV,MAAMC,EAAYC,GAAS,GAAGF,KAAOE,IAuhBrC,MAAMC,EACF,cAAAC,CAAeC,GACXC,KAAKC,EAAUF,EACfA,EAAOG,EAAUF,KACrB,CACA,MAAIT,GAAO,OAAOS,KAAKG,CAAK,CAC5B,aAAIC,GAAc,OAAOJ,KAAKK,CAAY,CAC1C,WAAIC,GAAY,OAAON,KAAKO,CAAU,CACtC,WAAID,CAAQE,GAAMR,KAAKO,EAAWC,CAAI,CACtC,WAAIC,GAAY,OAAOT,KAAKU,CAAU,CACtC,WAAID,CAAQE,GAAKX,KAAKU,EAAWC,CAAG,CACpC,aAAIC,GAAc,OAAOZ,KAAKa,CAAY,CAC1C,aAAID,CAAUD,GAAKX,KAAKa,EAAaF,CAAG,CACxC,eAAIG,GAAgB,OAAOd,KAAKe,CAAc,CAC9C,eAAID,CAAYH,GAAKX,KAAKe,EAAeJ,CAAG,CAC5C,CAAAK,GACI,MAAMC,EAAMjB,KAAKI,UAAUc,IACrBC,EAAKF,GAAOA,EAAIG,OAAiBH,EAAIG,OAAXC,GAAqB,IAC/CC,EAAMC,GAAM,GAAGJ,MAAMI,IAC3B,MAAO,CAAEC,MAAOF,EAAG,SAAUG,UAAWH,EAAG,cAAeI,QAASJ,EAAG,YAAaK,MAAOL,EAAG,SAAUM,UAAWN,EAAG,cAAeO,QAASP,EAAG,YACpJ,CACA,CAAAQ,GACI,IACI,MAAMb,EAAMjB,KAAKI,UAAUc,IAC3B,GAAID,GAAmC,GAA5BA,EAAIc,oBACX,OACJ,IAAKhD,IAAMA,EAAEI,KACT,OACJ,MAAMgC,EAAKF,GAAOA,EAAIG,OAAiBH,EAAIG,OAAXC,GAAqB,IAC/CW,EAAU,yBAAyBb,EACzC,GAAIpC,EAAEK,eAAe4C,GACjB,OACJ,MAAMC,EAAOrC,GAAS,IAAIuB,MAAMvB,IAC1BP,EAAQN,EAAEO,cAAc,SAC9BD,EAAME,GAAKyC,EACX3C,EAAMG,YAAe,GAAGyC,EAAI,YAAYA,EAAI,+DACrCA,EAAI,iBAAiBA,EAAI,uDACzBA,EAAI,eAAeA,EAAI,mDAC9BlD,EAAEI,KAAKM,YAAYJ,EACvB,CACA,MAAQ,CACZ,CACA,CAAA6C,CAAc5B,EAAS6B,GACnB,MAAMC,EAAWpC,KAAKqC,EAAYC,IAAIhC,IAAY,GAClD8B,EAASG,KAAKJ,GACdnC,KAAKqC,EAAYG,IAAIlC,EAAS8B,EAClC,CACA,WAAAK,CAAYlD,EAAImD,EAAKtC,GACjBJ,KAAK2C,EAAoB,EACzB3C,KAAK4C,EAAqB,EAC1B5C,KAAKO,EAAW,KAChBP,KAAKU,EAAW,EAChBV,KAAKa,EAAa,EAClBb,KAAKe,EAAe,EACpBf,KAAK6C,EAAqB,EAC1B7C,KAAK8C,EAAY,GACjB9C,KAAKC,EAAU,KACfD,KAAK+C,EAAY,CAAC,EAClB/C,KAAKgD,EAAe,CAAC,EACrBhD,KAAKiD,EAAiB,IAAIC,IAC1BlD,KAAKmD,EAAgB,IAAID,IACzBlD,KAAKoD,EAAuB,IAAIF,IAChClD,KAAKqD,EAA0B,EAC/BrD,KAAKsD,EAAuB,EAC5BtD,KAAKuD,EAAc,IAAIC,IACvBxD,KAAKyD,EAAe,EACpBzD,KAAKqC,EAAc,IAAIa,IACvBlD,KAAK0D,EAAoB,IAAIF,IAC7BxD,KAAK2D,EAAkB,GACvB3D,KAAK4D,EAAc,IAAIC,QACvB7D,KAAK8D,EAAmB,IAAIZ,IAC5BlD,KAAK+D,EAAwB,IAAIb,IACjClD,KAAKgE,EAAgB,KACrBhE,KAAKiE,EAAmB,EACxBjE,KAAKkE,EAAiB,GACtBlE,KAAKmE,EAAqB,IAAIN,QAC9B7D,KAAKoE,EAAwB,IAAIP,QACjC7D,KAAKqE,EAAoB,IAAIR,QAC7B7D,KAAKsE,EAAc,KACnBtE,KAAKuE,EAAsBC,IACvB,MAAMC,EAAOzE,KAAK0E,EAAWF,GACT,mBAATC,GACPzE,KAAK2E,EAAa,IAAM3E,KAAK4E,EAA2BH,EAAM,MAGtEzE,KAAK6E,EAAuBC,IACxB,GAAkB,mBAAPA,EACP,OACJ,MAAMC,EAAU,KACZ,IACID,GACJ,CACA,MAEA,CACA,IACI9E,KAAK0D,EAAkBsB,OAAOD,EAClC,CACA,MAAQ,GAGZ,OADA/E,KAAK0D,EAAkBuB,IAAIF,GACpB,KAAQ,IACX/E,KAAK0D,EAAkBsB,OAAOD,EAClC,CACA,MAAQ,IAEZ/E,KAAKkF,EAA+B,CAAC5E,EAAS6E,EAAOC,EAASC,KAC1D/E,EAAQgF,iBAAiBH,EAAOC,EAASC,GACzCrF,KAAK2D,EAAgBpB,KAAK,CAAEjC,UAAS6E,QAAOC,UAASC,aAEzDrF,KAAKG,EAAMZ,EACXS,KAAKK,EAAaD,EAClBJ,KAAKuF,EAAmB7C,EAAI8C,SAAW,CAAC,EACxCxF,KAAK+C,EAAYL,EAAI+C,UAAY,CAAC,EAClCzF,KAAKgD,EAAeN,EAAIgD,aAAe,CAAC,EACxC1F,KAAKyD,KAAkBf,EAAI+C,WAAYpH,OAAOC,KAAKoE,EAAI+C,UAAUE,QACjE3F,KAAK0E,EAAa,CACdkB,QAASlD,EAAIkD,QACbC,UAAWnD,EAAImD,WAAanD,EAAIoD,UAChCC,QAASrD,EAAIqD,QACbC,YAAatD,EAAIsD,YACjBC,cAAevD,EAAIuD,eAAiBvD,EAAIwD,eAE5ClG,KAAKmG,EAAQnG,KAAKoG,EAAoB1D,EAAI2D,MAAQ,CAAC,GACnDrG,KAAKsG,EAAWtG,KAAKuG,GACzB,CACA,eAAAC,GACSxG,KAAK6C,IACN7C,KAAKuE,EAAmB,eACxBvE,KAAK6C,EAAqB,EAElC,CACA,CAAA4D,CAAcC,GACV,GAAI1G,KAAKS,QAAS,CAEVT,KAAKiD,EAAe0D,QACxB,MAAMC,EAAe,IAAIpD,IACnBqD,EAAa7G,KAAK+D,EAAsBzB,IAAIoE,GAClD,GAAIG,EACA,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAWlB,OAAQmB,IACnCF,EAAa3B,IAAI4B,EAAWC,IACpC,IAAK,MAAMC,KAAUH,EACjB5G,KAAK2E,EAAaoC,IAClB/G,KAAKyD,GAAiB3E,GACtBkB,KAAKgH,IAEThH,KAAKuE,EAAmB,UAC5B,CACJ,CACA,CAAAgC,GACI,MAAMU,EAAe,CAAC,EACtB,IAAK,MAAMC,KAAclH,KAAKuF,EAAkB,CAC5C,MAAM4B,EAAiBnH,KAAKuF,EAAiB2B,GAC7CD,EAAaC,GAAc,IAAIE,KAC3B,MAAMC,EAAOrH,KAAKsD,EAClBtD,KAAKsD,EAAuB,EAC5B,IACI,OAAOtD,KAAK2E,EAAa,IAAM3E,KAAK4E,EAA2BuC,EAAgBC,GACnF,CACA,QACIpH,KAAKsD,EAAuB+D,CAChC,EAER,CACA,OAAOJ,CACX,CACA,CAAAK,CAAkBC,GAId,GADAvH,KAAKwH,EAAiBD,GAClBvH,KAAKiD,EAAewE,IAAIF,GACxB,OAAOvH,KAAKiD,EAAeX,IAAIiF,GACnC,IACI,MAAMG,EAAY1H,KAAK+C,EAAUwE,GACjCvH,KAAKqD,EAA0B,EAC/B,MAAMgE,EAAOrH,KAAKmD,EAAcb,IAAIiF,GACpC,GAAIF,EACA,IAAK,MAAMM,KAAON,EAAM,CACpB,MAAM7E,EAAMxC,KAAKoD,EAAqBd,IAAIqF,GACtCnF,GACAA,EAAIwC,OAAOuC,EACnB,CAEJvH,KAAKmD,EAAcX,IAAI+E,EAAK,IAAI/D,KAChC,MAAMoE,EAAQF,EAAUG,KAAK7H,KAAK8H,KAGlC,OAFA9H,KAAKqD,EAA0B,EAC/BrD,KAAKiD,EAAeT,IAAI+E,EAAKK,GACtBA,CACX,CACA,MAEI,YADA5H,KAAKqD,EAA0B,EAEnC,CACJ,CACA,CAAAmE,CAAiBO,GACb,IAAK/H,KAAKgE,EACN,OACJ,IAAIgE,EAAOhI,KAAK+D,EAAsBzB,IAAIyF,GACrCC,IACDA,EAAO,GACPhI,KAAK+D,EAAsBvB,IAAIuF,EAASC,IAEvCA,EAAKC,SAASjI,KAAKgE,IACpBgE,EAAKzF,KAAKvC,KAAKgE,EACvB,CACA,CAAAgD,GACQhH,KAAKiE,IAETjE,KAAKiE,EAAmB,EACxBiE,sBAAsB,KAGlB,GAFAlI,KAAKiE,EAAmB,EACxBjE,KAAKmI,KACDnI,KAAKkE,GAAkBlE,KAAKkE,EAAeyB,OAAQ,CACnD,MAAMyC,EAAIpI,KAAKkE,EAAemE,OAAO,EAAGrI,KAAKkE,EAAeyB,QAC5D,IAAK,MAAMb,KAAMsD,EACb,IACItD,GACJ,CACA,MAAQ,CAEhB,IAER,CACA,CAAAH,CAAaG,EAAIwD,GACb,IACI,OAAOxD,GACX,CACA,MACI,OAAOwD,CACX,CACJ,CACA,aAAAC,CAAcjI,GACNN,KAAKU,IAETV,KAAKO,EAAWD,EACXN,KAAK6C,GACN7C,KAAKwG,kBAETxG,KAAKwI,kBACT,CACA,UAAAC,CAAWC,EAAkB,GACzB,OAAO1I,KAAK8H,EAAqBY,EACrC,CACA,EAAAC,GACI,GAAK3I,KAAKO,EAAV,CAEA,IACIP,KAAK4I,GAAiB5I,KAAKO,EAC/B,CACA,MAAQ,CACRP,KAAKgH,GALK,CAMd,CACA,eAAAwB,IACQxI,KAAKU,GAAaV,KAAKO,IAEtBP,KAAKK,EAAWwI,GAAuB7I,KAAKO,IAC7CP,KAAKK,EAAWyI,GAAiB9I,KAAKO,EAAUP,MACpDA,KAAKU,EAAW,EAChBV,KAAKa,EAAa,EAClBb,KAAK4I,GAAiB5I,KAAKO,GAC3BP,KAAK+I,KACL/I,KAAKmI,KACLnI,KAAKuE,EAAmB,WAC5B,CACA,CAAArE,CAAU8I,GACDhJ,KAAK8C,EAAUmF,SAASe,IACzBhJ,KAAK8C,EAAUP,KAAKyG,EAE5B,CACA,EAAAC,CAAaD,GACT,MAAME,EAAQlJ,KAAK8C,EAAUqG,QAAQH,GACjCE,GAAS,GACTlJ,KAAK8C,EAAUuF,OAAOa,EAAO,EAErC,CACA,EAAAH,GAA8B,CAC9B,CAAAnE,CAA2BE,EAAIsC,GAC3B,IACI,MAAMgC,EAAatE,EAAPzD,GACZ,IAAK,kBAAkBgI,KAAKD,GAAM,CAC9B,IAAIE,EAAOF,EAAIG,OAMf,MALK,kBAAkBF,KAAKC,IAAU,0BAA0BD,KAAKC,IAAU,gBAAgBD,KAAKC,KAChGA,EAAO,YAAcA,GAGLE,SAAS,UAAW,YAAa,MADtC,yBAA2BF,EAAO,4CAElCzB,UAAK4B,EAAWzJ,KAAK8H,IAAwBV,EAAMpH,KAAK0J,QAAoBD,OAAWA,GAC1G,CACJ,CACA,MACA,CACA,OAAO3E,EAAG6E,MAAM3J,KAAK8H,IAAwBV,EACjD,CACA,OAAAwC,GACI,MAAMC,EAAO7J,KACb,IAAI6J,EAAK9I,EAAT,CAEA8I,EAAKtF,EAAmB,iBACxB,IAAK,MAAMyE,KAASa,EAAK/G,EAChBkG,EAAMlI,aACPkI,EAAMY,UAEVC,EAAK5J,GACL4J,EAAK5J,EAAQgJ,GAAaY,GAE9B,IAAK,MAAOvJ,EAASwJ,KAAeD,EAAKxH,EACrC,IAAK,MAAMF,KAAa2H,EACpB,GAAuB,WAAnB3H,EAAU4H,MAAqB5H,EAAU6H,iBAAiBC,OAC1D,IACI9H,EAAU6H,gBAAgBC,OAAO3J,EAASuJ,EAC9C,CACA,MACItL,GACJ,CAIZsL,EAAKxH,EAAYsE,QACjB,IAAK,MAAMrG,QAAEA,EAAO6E,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,KAAawE,EAAKlG,EACpDrD,EAAQ4J,oBAAoB/E,EAAOC,EAASC,GAEhDwE,EAAKlG,EAAkB,GACvB,IAAK,MAAMwG,KAAWrM,MAAMI,KAAK2L,EAAKnG,GAClC,IACIyG,GACJ,CACA,MACI5L,GACJ,CAMJ,GAJAsL,EAAKnG,EAAkBiD,QACvBkD,EAAK5G,EAAe0D,QACpBkD,EAAK/F,EAAiB6C,QACtBkD,EAAK9F,EAAsB4C,QACvBkD,EAAKvF,GAAeuF,EAAKO,GACzB,IAAK,MAAMpC,KAAQ6B,EAAKvF,EAAYP,EAAsBsG,SAAU,CAChE,MAAMC,EAAMtC,EAAKmB,QAAQU,EAAKO,IAC1BE,GAAO,GACPtC,EAAKK,OAAOiC,EAAK,EACzB,CAEAT,EAAKtJ,GACLsJ,EAAKxJ,EAAWkK,GAAmBV,EAAKtJ,GAC5CsJ,EAAKtF,EAAmB,aACxBsF,EAAK9I,EAAe,EACpB8I,EAAKhJ,EAAa,EAClBgJ,EAAKnJ,EAAW,EAChBmJ,EAAK/G,EAAY,GACjB+G,EAAK5J,EAAU,KACfD,KAAKwK,GAAqB,IAAI3G,QAC9BgG,EAAKtJ,EAAW,KAChBkK,eAAe,IAAMZ,EAAKxJ,EAAWqK,GAAqBb,EAAK1J,GAvDrD,CAwDd,CACA,EAAAwK,CAAmBC,EAAM7K,GACrB,IAAK6K,IAAS7K,EACV,OAEJ,IAAI8K,EADJ7K,KAAKsE,EAAcvE,EAEnB,IACI8K,EAAarB,SAAS,MAAO,qBAAuBoB,EAAO,KAC/D,CACA,MACI,MACJ,CACA,MAAME,EAAS,KAEX,IAAIC,EADJhL,EAAOiE,EAAgB8G,EAEvB,IACI,MAAME,EAAMjL,EAAO0I,WAAW,GAC9BsC,EAAMF,EAAOG,EACjB,CACA,MACID,EAAM,IACV,CAEA,GADAhL,EAAOiE,EAAgB,KACnB+G,GAAsB,iBAARA,EAAkB,CAChC/K,KAAKmG,EAAM8E,OAASjL,KAAKmG,EAAM8E,QAAU,CAAC,EAC1CjL,KAAK2C,EAAoB,EACzB,IAAK,MAAMuI,KAAKH,EAAK,CACjB,MAAMpK,EAAIoK,EAAIG,GACVlL,KAAKmG,EAAM+E,KAAOvK,IAClBX,KAAKmG,EAAM+E,GAAKvK,EACxB,CACAX,KAAK2C,EAAoB,CAC7B,GAEJ3C,KAAKoK,GAAcU,EACnBA,GACJ,CACA,EAAAlC,CAAiBtI,GACb,MAAMuJ,EAAO7J,KAEPmL,EAAiB,CAAC3K,EAAI4K,EAAS,KACjC,IAAKA,IAAW5K,EAAG6K,aAAa1L,EAAS,UAAYK,KAAKK,EAAWwI,GAAuBrI,IACxF,OAAO,EAEX,MAAM8K,EAAqC,cAApB9K,EAAG7B,GACpBmL,EAAa,GACnB,IAAIyB,EAAgB,EAChBC,EAAU,KACd,IAAK,MAAMC,KAAKjL,EAAGkL,WAAY,CAC3B,MAAMC,EAAIF,EAAE7L,MACR+L,EAAEC,WAAWlM,EAAM,MAAQiM,EAAEC,WAAWlM,EAAM,QAC9CoK,EAAWvH,KAAKkJ,GACXF,GAAkBI,IAAMhM,EAAS,SAAWgM,IAAMhM,EAAS,UAC5D4L,EAAgB,GACfC,GAAWG,IAAMhM,EAAS,SAC3B6L,EAAUC,GAEtB,CACA,GAAI3B,EAAWnE,OAAS,EAAG,CAEvB,GAAI6F,EAEA,OADA3B,EAAKgC,GAAerL,EAAIgL,EAAQ5L,KAAM4L,EAAQ5D,OACvC,EAEX,IAAK,MAAMkE,KAAQhC,EACfD,EAAKgC,GAAerL,EAAIsL,EAAKlM,KAAMkM,EAAKlE,MAChD,CAGA,OAFc2D,GACV1B,EAAKkC,GAA0BvL,GAC5B4K,IAAWE,GAEtBH,EAAe7K,EAAS,GACxBuJ,EAAKmC,GAAc1L,EAAS6K,EAChC,CACA,EAAAY,CAA0BvL,GACtB,MAAMyL,EAAQnO,MAAMI,KAAKsC,EAAG0L,YAC5B,IAAK,MAAMC,KAAQF,EAAO,CACtB,GAAIE,EAAKC,WAAaC,KAAKC,UACvB,SACJ,MAAMC,EAAWJ,EACXK,EAAMD,EAASE,WAAa,GAClC,GAAIF,EAASG,KAAsC,IAAvBF,EAAIrD,QAAQ,MACpC,SACJ,MAAMwD,GAAaJ,EAASK,eAAeC,SAAW,IAAIC,cACpDC,EAAuB,SAAdJ,GAAsC,QAAdA,EACjCK,EAAO,GACb,IAAIlG,EAAI,EACR,KAAOA,EAAI0F,EAAI7G,QAAQ,CACnB,MAAMsH,EAAOT,EAAIrD,QAAQ,KAAMrC,GAC/B,IAAc,IAAVmG,EAAa,CACbD,EAAKzK,KAAK,CAAE2K,QAASV,EAAIW,MAAMrG,KAC/B,KACJ,CACA,IAAIsG,EAAK,EACT,IAAK,IAAIjM,EAAI8L,EAAO,EAAG9L,GAAK,GAA2B,KAAtBqL,EAAIa,WAAWlM,GAAWA,IACvDiM,IACJ,GAAIA,EAAK,EAAG,CACR,MACME,EAAYL,EAAOG,EACrBE,EAFgBxG,GAGhBkG,EAAKzK,KAAK,CAAE2K,QAASV,EAAIW,MAHTrG,EAG4BwG,KAC5CF,EAAK,GACLJ,EAAKzK,KAAK,CAAE2K,QAAS,KAAKK,OAAOH,EAAK,KAC1C,MAAMI,EAAQhB,EAAIrD,QAAQ,KAAM8D,EAAO,GACvC,IAAe,IAAXO,EAAc,CACdR,EAAKzK,KAAK,CAAE2K,QAASV,EAAIW,MAAMF,EAAMT,EAAI7G,UACzCmB,EAAI0F,EAAI7G,OACR,KACJ,CACAqH,EAAKzK,KAAK,CAAE2K,QAASV,EAAIW,MAAMF,EAAMO,EAAQ,KAC7C1G,EAAI0G,EAAQ,EACZ,QACJ,CACK,CACGP,EAAOnG,GACPkG,EAAKzK,KAAK,CAAE2K,QAASV,EAAIW,MAAMrG,EAAGmG,KACtC,MAAMO,EAAQhB,EAAIrD,QAAQ,KAAM8D,EAAO,GACvC,IAAe,IAAXO,EAAc,CACdR,EAAKzK,KAAK,CAAE2K,QAASV,EAAIW,MAAMF,KAC/BnG,EAAI0F,EAAI7G,OACR,KACJ,CACA,MAAMiF,EAAO4B,EAAIW,MAAMF,EAAO,EAAGO,GAAOjE,OAEpCyD,EAAKzK,KADLqI,EACU,CAAEA,QAEF,CAAEsC,QAAS,KACzBpG,EAAI0G,EAAQ,EACZ,QACJ,CACJ,CACA,MAAMC,EAAUT,EAAKU,KAAKnM,GAAKA,EAAEqJ,MAC3B+C,EAAaX,EAAKU,KAAKnM,GAAKA,EAAE2L,SAAW3L,EAAE2L,QAAQjF,SAAS,OAClE,IAAKwF,IAAYE,EACb,SACJpB,EAASG,GAAc,EACvB,MAAMkB,EAAaH,IAAYV,EAASC,EAAKa,OAAOtM,GAAKA,EAAEqJ,MAAMkD,IAAIvM,GAAKvB,KAAK+N,GAAwBxM,EAAEqJ,KAAMpK,IAAO,GACtH,IAAIwN,EAAY,EAChB,MAAMlD,EAAS,KACXkD,EAAY,EACZ,IAAIC,EAAM,GACV,IAAK,MAAM1M,KAAKyL,EACZ,GAAiB,MAAbzL,EAAE2L,QACFe,GAAO1M,EAAE2L,aAER,GAAI3L,EAAEqJ,KACP,GAAImC,EACAkB,GAAO,MAAQ1M,EAAEqJ,KAAO,UAEvB,CACD,MAAMsD,EAAMN,EAAWI,OACvBC,GAAe,MAAPC,EAAc,GAAYA,EAAP7M,EAC/B,CAGJkL,EAAS/M,cAAgByO,IACzB1B,EAAS/M,YAAcyO,IAEzBE,EAAU,CAAEpE,KAAM,qBAAsBqE,WAAY5B,EAAK1B,YAAQrB,GACvEzJ,KAAKkC,EAAc1B,EAAI2N,GACvB,MAAMpH,EAAS/G,KAAKqO,GAAcvD,EAAQqD,GAC1CA,EAAQrD,OAAS/D,CACrB,CACJ,CACA,EAAAiF,CAAcjM,EAAQuO,GAClB,IAAItF,EAAQjJ,EAAOwO,kBACnB,KAAOvF,GAAO,CACV,MAAMwF,EAAOxF,EAAMyF,mBACfH,EAAUtF,IACVhJ,KAAKgM,GAAchD,EAAOsF,GAC9BtF,EAAQwF,CACZ,CACJ,CACA,EAAA3C,CAAevL,EAASoO,EAAeN,GACnC,MAAMvE,EAAO7J,KACP2O,EAAcD,EAAc9C,WAAWlM,EAAM,KAC7CqK,EAAO2E,EAAcvB,MAAMzN,EAAIiG,OAAS,GAC9C,GAAIgJ,GAAwB,UAAT5E,GAAoBA,IAASvL,EAE5C,OADA8B,EAAQsO,gBAAgBF,GACjB7E,EAAKgF,GAAwBvO,EAASyJ,EAAMqE,GAEvD,GAAa,eAATrE,EAEA,OADAzJ,EAAQsO,gBAAgBF,GACjB7E,EAAKiF,GAAyBxO,EAAS8N,GAElD,GAAa,SAATrE,GAA4B,SAATA,GAA4B,SAATA,EAEtC,OADAzJ,EAAQsO,gBAAgBF,GACjB7E,EAAKkF,GAAqBzO,EAAS8N,EAAYrE,GAM1D,KAJyB,UAATA,GAAoBzJ,EAAQsO,gBAAgBF,GAAgB7E,EAAKmF,GAAoB1O,EAAS8N,GAAa,GAC5G,OAATrE,GAAiBzJ,EAAQsO,gBAAgBF,GAAgB7E,EAAKoF,GAAiB3O,EAAS8N,GAAa,GACxF,QAATrE,IAAkBzJ,EAAQsO,gBAAgBF,GAAgB7E,EAAKqF,GAAkB5O,EAAS8N,GAAa,KAI7GrE,EAAKZ,QAAQ,MAAQ,EAAG,CACxB,MAAO/H,EAAQ+N,GAAQpF,EAAKqF,MAAM,IAAK,IAChCC,KAAWC,GAAQH,EAAKC,MAAM,KAC/BG,EAAYD,EAAKE,OAAO,CAACC,EAAKC,KAAYA,IAC5CD,EAAIC,GAAK,GAAaD,GAAQ,CAAC,GACnC,GAAe,OAAXrO,EAAiB,CACjBd,EAAQsO,gBAAgBF,GACxB,MAAM1E,EAAkBH,EAAKzJ,UAAUuP,GAAoBN,GAC3D,OAAOrF,EACDH,EAAK+F,GAAqBtP,EAAS+O,EAAQjB,EAAYpE,EAAiBuF,GACxE1F,EAAKgG,GAAoBvP,EAAS+O,EAAQjB,EAAYmB,EAChE,CAEA,OADAjP,EAAQsO,gBAAgBF,GACjB7E,EAAKgF,GAAwBvO,EAAS+O,EAAQjB,EACzD,CACJ,CACA,EAAAU,CAAyBxO,EAAS8N,GAG9BpO,KAAK8B,IACL,MAAMgO,EAAW9P,KAAKgB,IAChB4J,GAAQwD,GAAc,IAAI7E,OAChC,GAAIqB,EACA,IACI,MAAMC,EAAS7K,KAAK+N,GAAwBnD,EAAMtK,GAClDN,KAAKoE,EAAsB5B,IAAIlC,EAASuK,EAC5C,CACA,MAAQ,MAGR7K,KAAKmE,EAAmB3B,IAAIlC,EAASwP,GAEzC9P,KAAKkC,EAAc5B,EAAS,CAAEyJ,KAAM,aAAcqE,cACtD,CACA,EAAA2B,CAAevP,EAAIwP,EAAMC,GAMrB,MAAMH,EAAW9P,KAAKgB,IACtB,IAAIkP,EAAW,KACf,MAAMrF,EAAS7K,KAAKoE,EAAsB9B,IAAI9B,GAC9C,GAAIqK,EACA,IACIqF,EAAWrF,GACf,CACA,MACIqF,EAAW,IACf,CAEJ,MAAMC,EAAanQ,KAAKmE,EAAmB7B,IAAI9B,IAAO,KAChD4P,EAAO/R,OAAOgS,OAAO,CAAC,EAAGP,EAAWI,GAAgC,iBAAbA,EAAyBA,EAAYC,GAAc,CAAC,GAC3G1E,EAAa,OAATuE,EAAgBI,EAAK5O,MAAQ4O,EAAKzO,MACtC2O,EAAa,OAATN,EAAgBI,EAAK3O,UAAY2O,EAAKxO,UAC1C2O,EAAa,OAATP,EAAgBI,EAAK1O,QAAU0O,EAAKvO,QACxC2O,EAAM,KAAQ,IACZ/E,GACAzL,KAAKyQ,GAASjQ,EAAIiL,EAAG,GACrB8E,GACAvQ,KAAKyQ,GAASjQ,EAAI+P,EAAG,EAC7B,CACA,MAAQ,CAAQN,GACZA,KACAxE,GAAK6E,GAAKC,GACN9E,GACAzL,KAAKyQ,GAASjQ,EAAIiL,EAAG,GACrB6E,GACAtQ,KAAKyQ,GAASjQ,EAAI8P,EAAG,GAErBA,GACAtQ,KAAKyQ,GAASjQ,EAAI8P,EAAG,GACrBC,GACAvQ,KAAKyQ,GAASjQ,EAAI+P,EAAG,GACzBvQ,KAAK0Q,GAAiBlQ,EAAIgQ,IAG1BA,GAER,CACA,EAAAG,CAAcnQ,EAAIyP,GAAQjQ,KAAK+P,GAAevP,EAAI,KAAMyP,EAAO,CAC/D,EAAAW,CAAepQ,EAAIyP,GAAQjQ,KAAK+P,GAAevP,EAAI,MAAOyP,EAAO,CACjE,EAAAS,CAAiBlQ,EAAIqQ,GACjB,IAAIC,EAAS,EACb,MAAMb,EAAO,KAAQ,IAAIa,EAAJ,CACTA,EAAS,EAAM,IACvBtQ,EAAG0J,oBAAoB,gBAAiB+F,GACxCzP,EAAG0J,oBAAoB,eAAgB+F,EAC3C,CACA,MAAQ,CAAIY,GAJF,GAKV,IACIrQ,EAAG8E,iBApqCI,gBAoqCyB2K,GAChCzP,EAAG8E,iBApqCM,eAoqCyB2K,GAClCc,WAAWd,EAAM,IACrB,CACA,MACIY,GACJ,CACJ,CACA,EAAAG,CAAiBC,GACb,OAAKA,EAEDnT,MAAMC,QAAQkT,GACPA,EAAMnD,IAAIzM,QAAQ6P,QAAQ3P,IAAYA,EAAPF,IAAU+N,MAAM,QAAQvB,OAAOsD,SACpD,iBAAVF,EACAA,EAAM7B,MAAM,OAAOvB,OAAOsD,SAC9B,GALI,EAMf,CACA,EAAAV,CAASjQ,EAAI4Q,EAASnM,GAClB,MAAMoM,EAASrR,KAAKgR,GAAiBI,GACrC,IAAKC,EAAO1L,OACR,OACJ,MAAM2L,EAAK9Q,EAAG+Q,UACd,KACKtM,EAAMqM,EAAGrM,IAAMqM,EAAGE,QAAQ7H,MAAM2H,EAAID,EACzC,CACA,MACI,IAAK,MAAMd,KAAKc,EACZ,IACIpM,EAAMqM,EAAGrM,IAAIsL,GAAKe,EAAGE,OAAOjB,EAChC,CACA,MAAQ,CAEhB,CACJ,CACA,EAAAlC,CAAcoD,EAAUC,GACpB,MAAM3K,EAAS,KACX/G,KAAKgE,EAAgB+C,EACrB,IACI0K,GACJ,CACA,QACIzR,KAAKgE,EAAgB,IACzB,GAIJ,GAFA+C,IACA/G,KAAKuD,EAAY0B,IAAI8B,GACjBjI,GAAkC4S,QAAyCjI,IAAzBiI,EAAaC,GAAuB,CACtF,IAAIC,EAAQ,EACZ,IAAK,MAAM5J,KAAQhI,KAAK+D,EAAsBsG,SAC1C,GAAIrC,EAAKC,SAASlB,GAAS,CACvB6K,EAAQ,EACR,KACJ,CAEJF,EAAaC,IAAWC,CAC5B,CACA,OAAO7K,CACX,CACA,EAAAgI,CAAqBzO,EAAS8N,EAAYrE,GACtC,GAAa,UAATA,GAAoBA,IAASvL,EAC7B,OAAOwB,KAAK6O,GAAwBvO,EAASyJ,EAAMqE,GAEvD,MAAMyD,EAAY7R,KAAK+N,GAAwBK,EAAY9N,GAC3D,IAAIwR,EAKAC,EAJS,SAAThI,IAEA+H,EADWxR,EACUjB,MAAMZ,KAAiBC,EADjC4B,EAC+CjB,MAAMZ,QAAegL,GAGnF,MAyBM0E,EAAU,CAAEpE,OAAMqE,aAAYtD,YAAQrB,EAAWqI,mBACvD9R,KAAKkC,EAAc5B,EAAS6N,GAC5B,MAAMpH,EAAS/G,KAAKqO,GA3BL,KACX,MAAMzG,EAAQiK,IACRrR,EAAKF,EACX,OAAQyJ,GACJ,IAAK,OACDvJ,EAAGhB,YAAqBoI,EAAPvG,GACjB,MACJ,IAAK,OACDb,EAAGwR,WAAmBpK,GAAS,IAAhBvG,GACf,MACJ,IAAK,OACD,MAAMmN,IAAS5G,EACf,GAAImK,IAAevD,EACf,OACJuD,EAAavD,EACTA,GACAhO,EAAGnB,MAAMZ,GAAeqT,GAAmB,GAC3C9R,KAAK2Q,GAAcnQ,IAGnBR,KAAK4Q,GAAepQ,EAAI,KAAQA,EAAGnB,MAAMZ,GAAeC,MAO9ByP,GAC1CA,EAAQrD,OAAS/D,CACrB,CACA,EAAAiI,CAAoB1O,EAAS2R,GACzB,MAAMC,EAA8B,aAAjB5R,EAAQyJ,KACrBoI,EAA6B,WAAjB7R,EAAQyJ,MAAsC,UAAjBzJ,EAAQyJ,KACjDqI,EAAoC,WAApB9R,EAAQuM,SAA6C,GAArBvM,EAAQ+R,SACzDC,QAAQ7K,IAAIzH,KAAKmG,EAAO8L,IACzBK,QAAQC,eAAevS,KAAKmG,EAAO8L,EAAU,CACzCO,aAAgB,EAChBC,WAAc,EACdC,SAAY,IAGpB,MAAMC,EAAoB3S,KAAK+N,GAAwBkE,EAAU3R,GAC3DsS,EAAoB5S,KAAK6S,GAAoBZ,EAAH,YAAwB,GAYlEa,EAAgBZ,EAXK,MACvB,GAAI5R,EAAQ+K,aAAa,SACrB,OAAO/K,EAAQsH,MACnB,MAAMmL,EAAY/S,KAAKgT,GAAkB1S,GACzC,GAAIyS,EAAW,CACX,MAAMzU,EAAOD,OAAOC,KAAKyU,GACzB,GAAoB,IAAhBzU,EAAKqH,OACL,OAAOoN,EAAUzU,EAAK,GAC9B,CACA,OAAOgC,EAAQsH,OAEgBqL,QAAuBxJ,EA4C1DzJ,KAAKqO,GAAc,IAtBG,CAACzG,IACnB,GAAIsK,EACA,GAAIpU,MAAMC,QAAQ6J,GAAQ,CACtB,MAAMsL,EAAS5S,EAAQ+K,aAAa,SAAW/K,EAAQsH,MAAQkL,EAC/DxS,EAAQ6S,QAAoB,MAAVD,EAAiBtL,EAAMK,SAASiL,GAAU,CAChE,MAEI5S,EAAQ6S,UAAYvL,MAN5B,CAUA,GAAIwK,EAAe,CACf,MAAMgB,EAAM9S,EACN+S,EAAMvV,MAAMC,QAAQ6J,GAASA,EAAQ,GAC3C,IAAK,IAAId,EAAI,EAAGA,EAAIsM,EAAI/N,QAAQM,OAAQmB,IAAK,CACzC,MAAMwM,EAAMF,EAAI/N,QAAQyB,GACxBwM,EAAIC,SAAWF,EAAIpL,SAASqL,EAAI1L,MACpC,CACA,MACJ,CACAtH,EAAQsH,OAAeA,IAAUuK,EAAY,EAAI,KAAjC9Q,EAVhB,GAYqBmS,CAAcb,MACvC,MAAM3H,EAAMhL,KAAK0J,QAAoBD,EAAWnJ,GA4B1CiQ,EAAIjQ,EAAQyJ,KAElB/J,KAAKkF,EAA6B5E,EADU,WAAzBA,EAAQ3B,IAAmC,aAAN4R,GAA0B,UAANA,GAAuB,SAANA,EAAgB,SAAW,QA5BrG,KACf,MAAM/D,EA9CY,MAClB,GAAI0F,EACA,OAAIpU,MAAMC,QAAQ4U,WAA0ClJ,IAAlBqJ,EAC/BxS,EAAQ6S,QAAUL,OAAgBrJ,EAEzCnJ,EAAQ+K,aAAa,SACd/K,EAAQ6S,QAAU7S,EAAQsH,WAAQ6B,EACtCnJ,EAAQ6S,QAEnB,GAAIf,EAAe,CACf,MAAMgB,EAAM9S,EACN+J,EAAS,GACf,IAAK,IAAIvD,EAAI,EAAGA,EAAIsM,EAAI/N,QAAQM,OAAQmB,IAAK,CACzC,MAAMwM,EAAMF,EAAI/N,QAAQyB,GACpBwM,EAAIC,UACJlJ,EAAO9H,KAAK+Q,EAAI1L,MACxB,CACA,OAAOyC,CACX,CACA,OAAO8H,EAAYsB,WAAWnT,EAAQsH,QAAU,EAAItH,EAAQsH,OA2BhD8L,GACNC,EAAa3T,KAAK2E,EAAa,IAAMgO,KAC3C,GAAIT,GAAcpU,MAAMC,QAAQ4V,GAAa,CACzC,MAAMN,EAAMM,EACNT,EAAS5S,EAAQ+K,aAAa,SAAW/K,EAAQsH,MAAQkL,EAC/D,QAAerJ,IAAXyJ,EAAsB,CACtB,MAAM5I,EAAM+I,EAAIlK,QAAQ+J,GACpB5S,EAAQ6S,SACK,IAAT7I,GACA+I,EAAI9Q,KAAK2Q,GAER5I,GAAO,GACZ+I,EAAIhL,OAAOiC,EAAK,EAExB,CACJ,MACK,GAAI8H,GAAiBtU,MAAMC,QAAQ4V,GAAa,CACjD,MAAMN,EAAMM,EACZN,EAAIhL,OAAO,EAAGgL,EAAI1N,QAClB6G,EAAIoH,QAAQjT,GAAK0S,EAAI9Q,KAAK5B,GAC9B,MAEIqK,EAAI6I,OAASrH,EACbxM,KAAK2E,EAAa,KAAQiO,EAAkB/K,KAAK7H,KAAK8H,IAAwBkD,OAMtFhL,KAAKkC,EAAc5B,EAAS,CAAEyJ,KAAM,QAASkI,YACjD,CACA,EAAAhD,CAAiB3O,EAAS8N,GACtB,MAAMvE,EAAO7J,KACP8T,EAAc/U,EAAEgV,cAAc,QACpCzT,EAAQ0T,YAAYC,aAAaH,EAAaxT,GAC9CA,EAAQ4T,GAAsBJ,EAAYlH,eAAiB,KAC3D,MAAMuH,EAAW,GACXC,EAAqB5T,IACvB,GAAIA,EAAG7B,KAAiBC,EAAc,CAClC,MAAMmG,EAAUhG,EAAEO,cAAc,OAGhC,OAFAyF,EAAQ1F,MAAMZ,GAAeQ,EAC7B8F,EAAQtF,YAAYe,EAAG6T,QAAQC,UAAU,IAClC,CAAE9T,GAAIuE,EAASwP,WAAY,EACtC,CACA,MAAO,CAAE/T,GAAIA,EAAI+T,WAAY,IAE3BC,EAAQJ,EAAkB9T,GAC1BmU,EAAY5K,EAAKkE,GAAwBK,EAAY9N,GAC3D6T,EAAS5R,KAAK,CAAE/B,GAAIgU,EAAMhU,GAAI6I,KAAMoL,EAAWF,WAAYC,EAAMD,aAC5DC,EAAMD,aACPC,EAAMhU,GAAGkU,GAAiB,GAC9B,MAAMC,EAAgB,CAACrU,GAEP,CACR,IAAIsU,EAAMtU,EAAQmO,mBAClB,KAAOmG,GAAK,CACR,MAAMC,EAASD,EAAIvJ,aAAa,UAC1ByJ,EAAWF,EAAIvJ,aAAa,aAClC,IAAKwJ,IAAWC,EACZ,MACJ,GAAIF,EAAIvJ,aAAa,aAAc,CAC/B,MAAMS,EAAO8I,EAAIG,aAAa,cAAgB,GACxCC,EAASZ,EAAkBQ,GAC3B/J,EAAShB,EAAKkE,IAAyBjC,GAAQ,IAAIvC,OAAQqL,GACjET,EAAS5R,KAAK,CAAE/B,GAAIwU,EAAOxU,GAAI6I,KAAMwB,EAAQ0J,WAAYS,EAAOT,aAC3DS,EAAOT,aACRS,EAAOxU,GAAGkU,GAAiB,EACnC,KACK,CACD,MAAMM,EAASZ,EAAkBQ,GACjCT,EAAS5R,KAAK,CAAE/B,GAAIwU,EAAOxU,GAAI6I,KAAM,KAAMkL,WAAYS,EAAOT,aACzDS,EAAOT,aACRS,EAAOxU,GAAGkU,GAAiB,EACnC,CACAE,EAAIhG,gBAAgB,UACpBgG,EAAIhG,gBAAgB,aACpB+F,EAAcpS,KAAKqS,GACnBA,EAAMA,EAAInG,kBACd,CACJ,CAEJ,IAAIwG,GAAU,EACd,IAAK,MAAMC,KAAQP,EACXO,EAAKlB,YACLkB,EAAKlB,WAAWmB,YAAYD,GAEpC,MAAME,EAAe9K,IACjB,GAAIA,EAAM,EACN,OACJ,MAAM+K,EAAIlB,EAAS7J,GACd+K,EAAE7U,GAAGkU,KACN7K,EAAKjB,GAAiByM,EAAE7U,IACxB6U,EAAE7U,GAAGkU,GAAiB,GAE1BpU,EAAQgV,IAAgBtB,YAAYmB,YAAY7U,EAAQgV,IACnDD,EAAE7U,GAAGwT,aACNF,EAAYE,YAAYC,aAAaoB,EAAE7U,GAAIsT,EAAYyB,aACvDvV,KAAK2Q,GAAc0E,EAAE7U,KAEzBF,EAAQgV,GAAiBD,EAAE7U,GAC3ByU,EAAS3K,GAEPkL,EAAgB,CAAClL,EAAKuG,KACxB,GAAIvG,EAAM,EAGN,YAFIuG,GACAA,KAGR,MAAMwE,EAAIlB,EAAS7J,GACf+K,EAAE7U,GAAGwT,WACLhU,KAAK4Q,GAAeyE,EAAE7U,GAAI,KAAY6U,EAAE7U,GAAGwT,YACvCqB,EAAE7U,GAAGwT,WAAWmB,YAAYE,EAAE7U,IAASqQ,GACvCA,MAECA,GACLA,IACJoE,GAAU,GAqBRlO,EAAS8C,EAAKwE,GAnBL,KACX,IAAIG,GAAQ,EACZ,IAAK,IAAI1H,EAAI,EAAGA,EAAIqN,EAAStV,GAAaiI,IAAK,CAC3C,MAAMuO,EAAIlB,EAASrN,GAEnB,IADauO,EAAEhM,MAASgM,EAAEhM,OAChB,CACNmF,EAAO1H,EACP,KACJ,CACJ,CACI0H,IAASyG,KAEG,IAAZA,EACAO,EAAcP,EAAQ,IAAMG,EAAY5G,IAGxC4G,EAAY5G,MAIpB3E,EAAK3H,EAAc5B,EAAS,CAAEyJ,KAAM,KAAMqE,aAAYtD,OAAQ/D,GAClE,CACA,EAAA8I,CAAoBvP,EAASmV,EAAWrH,EAAYmB,GAChD,MAAM1F,EAAO7J,KACP0V,GAAWtH,GAAc,IAAI7E,OAC7BoM,EAAQ9L,EAAK+L,GAAsBF,GACnCG,EAAOtG,EAAY,CACrBuG,OAAQvG,EAAUuG,KAClBC,UAAWxG,EAAUwG,QACrBC,UAAWzG,EAAUyG,cACrBvM,EACEwM,IAAa1G,GAAW1F,KACxBqM,IAAkB3G,GAAW4G,QAC7BC,IAAe7G,GAAW8G,KAC1BC,IAAc/G,GAAWgH,QACzBC,IAAcjH,GAAWkH,MACzBC,EAAc,CAChBlV,MAAO,CAAC,SACRmV,IAAK,CAAC,SAAU,OAChBC,OAAQ,CAAC,SAAU,OACnBC,MAAO,CAAC,IAAK,QAAS,YACtBC,IAAK,CAAC,OACNC,UAAW,CAAC,aACZ/R,OAAQ,CAAC,SAAU,OACnBgS,IAAK,CAAC,SAAU,OAChBC,QAAS,CAAC,UAAW,MACrBC,UAAW,CAAC,YAAa,QACzBC,UAAW,CAAC,YAAa,QACzBC,WAAY,CAAC,aAAc,SAC3BC,KAAM,CAAC,QACP7G,IAAK,CAAC,OACN8G,OAAQ,CAAC,UACTC,SAAU,CAAC,aAETC,EAAoB,CACtBC,OAAQlI,GAAWkI,KACnBC,MAAOnI,GAAWmI,IAClBC,QAASpI,GAAWoI,MACpBC,OAAQrI,GAAWqI,MAEjBC,EAAY,CAAEC,KAAM,EAAGC,OAAQ,EAAGC,MAAO,GACzCC,IAAgB1I,GAAW2I,OAC3BC,IAAe5I,GAAW6I,MAC1BC,EAAe9I,EAAYnR,EAAOmR,GAAa,GAC/C+I,EAAc,GACpB,IAAK,MAAM5I,KAAK2I,EAAc,CAC1B,MAAME,EAAU7B,EAAYhH,EAAE5C,eAC1ByL,GACAD,EAAY/V,QAAQgW,EAC5B,CACA,MAAMC,EAAiB,GACvB,IAAK,MAAM9I,KAAK2I,EAAc,CAC1B,MAAMI,EAAMZ,EAAUnI,EAAE5C,oBACZrD,IAARgP,GACAD,EAAejW,KAAKkW,EAC5B,CACA,MAAMC,EAAeJ,EAAY3S,OAAS,GAAK6R,EAAkBC,MAAQD,EAAkBE,KAAOF,EAAkBG,OAASH,EAAkBI,KACzIe,EAAkBH,EAAe7S,OAAS,EAC1CiT,EAAiBX,GAAeE,EAChCU,EAAiB1T,IACnB,MAAM2T,EAAO3T,EAAM4T,aAAe5T,EAAM4T,eAAiB,KACnDC,EAAOF,GAAQA,EAAKnT,OAASmT,EAAK,GAAK3T,EAAM8T,OACnD,GAAI3C,EAAW,CACX,IAAK0C,EACD,OAAO,EACX,GAAI1Y,aAAmB+L,OAAS/L,IAAY0Y,GAAO1Y,EAAQ4Y,SAASF,IAChE,OAAO,CACf,CACA,GAAI/C,GAAY9Q,EAAM8T,SAAW3Y,EAC7B,OAAO,EACX,GAAIsY,EAAgB,CAChB,KAAIzT,aAAiBgU,YAQjB,OAAO,EARsB,CAC7B,MAAMC,EAASjU,EAAMkU,QAAQ1T,OAC7B,GAAIsS,GAA0B,IAAXmB,EACf,OAAO,EACX,GAAIjB,GAAciB,EAAS,EACvB,OAAO,CACf,CAGJ,CACA,GAAIT,EAAiB,CACjB,KAAIxT,aAAiBmU,YAKjB,OAAO,EAJP,IAAKd,EAAevQ,SAAS9C,EAAMoU,QAC/B,OAAO,CAInB,CACA,GAAIb,EAAc,CACd,KAAMvT,aAAiBqU,eACnB,OAAO,EACX,MAAMtO,GAAK/F,EAAMoC,KAAO,IAAIuF,cAC5B,GAAIwL,EAAY3S,OAAS,IAAM2S,EAAYrQ,SAASiD,GAChD,OAAO,EACX,GAAIsM,EAAkBC,OAAStS,EAAMsU,QACjC,OAAO,EACX,GAAIjC,EAAkBE,MAAQvS,EAAMuU,OAChC,OAAO,EACX,GAAIlC,EAAkBG,QAAUxS,EAAMwU,SAClC,OAAO,EACX,GAAInC,EAAkBI,OAASzS,EAAMyU,QACjC,OAAO,CACf,CACA,OAAO,GAELnM,IAAYiI,EAClB,IAAImE,EAAU,KACd,MAAMC,EAAUjQ,EAAK/B,IACrB,GAAI6N,EAAO,CACP,MAAMoE,EAAgBlQ,EAAKmQ,GAAsBrE,EAAMsE,WAAYtE,EAAMrM,KAAMqM,EAAMuE,SAC/EC,EAAUxE,EAAMsE,WAAWtU,OAC1BR,GAAUwQ,EAAMsE,WAAWnM,IAAI,CAACsM,EAAG9P,IAAiB,IAARA,EAAYnF,EAAgB,IAARmF,EAAYhK,OAAUmJ,GACvF,IAAM,GACZoQ,EAAW1U,IACP,MAAM6F,EAAMnB,EAAKH,GAAoBvE,EAAO7E,GAC5CyZ,EAAclS,KAAKiS,EAAS9O,KAAQmP,EAAQhV,IAEpD,MACK,GAAIsI,EAAS,CACd,MAAM4M,EAAc3E,EAAQzN,SAAS,KAC/BqS,EAAWzQ,EAAKgJ,GAAiB6C,EAAS2E,GAChDR,EAAW1U,IACP,MAAM6F,EAAMnB,EAAKH,GAAoBvE,EAAO7E,GACtCia,EAASD,EAASzS,KAAKiS,EAAS9O,GAChB,mBAAXuP,GACPA,EAAO1S,KAAKiS,EAAS3U,GAEjC,CACA,MAAMqV,EAAsBrV,IACxB,GAAK0T,EAAc1T,KAEf+Q,GAAiD,mBAAzB/Q,EAAMsV,gBAC9BtV,EAAMsV,iBACNrE,GAA+C,mBAA1BjR,EAAMuV,iBAC3BvV,EAAMuV,kBACLb,GAAL,CAEA,GAAIrD,GAAuC,mBAAnB/L,eAA+B,CACnD,MAAMkQ,EAAKxV,EAEX,YADAsF,eAAe,IAAMZ,EAAKlF,EAAa,IAAMkV,EAAQc,IAEzD,CACA9Q,EAAKlF,EAAa,IAAMkV,EAAQ1U,GANtB,GASRyV,IADM5a,KAAKI,UAAUc,IACD2Z,UAAY3b,EAAa+I,SAASwN,GAC5D,IAAKa,GAAasE,EAAa,CAC3B,MAAME,EAAU9a,KAAKI,UAAU2a,GAAmBza,EAASmV,EAAW,CAAE5H,OAASmN,GAAMnC,EAAcmC,GAAIC,IAAMD,GAAMR,EAAmBQ,GAAIlF,OAAQvG,GAAWuG,KAAMoF,KAAMlb,OAC3KA,KAAK6E,EAAoBiW,EAC7B,KACK,CACD,MAAM7B,EAAS3C,EAAahW,GAAS6a,eAAiBpc,GAAKC,SAAYsB,EACvEuJ,EAAK3E,EAA6B+T,EAAQxD,EAAW+E,EAAoB3E,EAC7E,CACJ,CACA,EAAAhD,CAAiBzE,EAAYiM,EAAc,GACvC,MAAM9S,EAAM,GAAG8S,EAAc,IAAM,OAAOjM,IAC1C,IAAItJ,EAAK9E,KAAK8D,EAAiBxB,IAAIiF,GAKnC,OAJKzC,IACDA,EAAS0E,SAAS,MAAO,aAAa6Q,EAAcjM,EAAa,WAAWA,SAC5EpO,KAAK8D,EAAiBtB,IAAI+E,EAAKzC,IAE5BA,CACX,CACA,EAAAiJ,CAAwBK,EAAY9N,GAChC,MAAMuJ,EAAO7J,KACPob,EAAWvR,EAAKgJ,GAAiBzE,GACvC,MAAO,IAAMpO,KAAK2E,EAAa,IAAMyW,EAASvT,KAAKgC,EAAK/B,IAAwB+B,EAAKH,QAAoBD,EAAWnJ,IACxH,CACA,EAAAsV,CAAsBxH,GAClB,IAAIsB,EAAItB,EAAWiN,MAAM,4CAGzB,GAFK3L,IACDA,EAAItB,EAAWiN,MAAM,sDACpB3L,EACD,OAAO,KACX,MAAM4L,GAAU5L,EAAE,IAAM,IACnBN,MAAM,KACNtB,IAAI3M,GAAKA,EAAEoI,QACXsE,OAAOsD,SACN7H,GAAQoG,EAAE,IAAM,IAAInG,OACpB2Q,EAAU5Q,EAAKsC,WAAW,MAAQtC,EAAKiS,SAAS,KAEtD,MAAO,CAAEtB,WAAYqB,EAAQhS,KADX4Q,EAAU5Q,EAAK6D,MAAM,GAAI,GAAK7D,EACF4Q,UAClD,CACA,EAAAF,CAAsBsB,EAAQhS,EAAM4Q,GAEhC,OAAW1Q,SAAS,SAAU8R,EAAQ,eADtBpB,EAAU5Q,EAAO,YAAcA,EAAO,OACU,KACpE,CACA,EAAAkS,CAAUnV,EAAMoV,GACZ,GAAMpd,OAAOqd,eAAerV,KAAUhI,OAAOsd,YAAa9d,EAAcwI,GACpE,OAAOA,EACX,MAAMwD,EAAO7J,KAGb,GAFKA,KAAKwK,KACNxK,KAAKwK,GAAqB,IAAI3G,SAC9B7D,KAAKwK,GAAmB/C,IAAIpB,GAC5B,OAAOrG,KAAKwK,GAAmBlI,IAAI+D,GACvC,MAAMuV,EAAQ,IAAIC,MAAMxV,EAAM,CAC1B/D,IAAK,CAAC2W,EAAQ9X,EAAG2a,KACb,GAAIje,EAAcob,GAAS,CACvB,GAAI9X,IAAM4a,OAAOC,SAEb,OADAnS,EAAKrC,EAAiBiU,GACfnJ,QAAQhQ,IAAI2W,EAAQ9X,EAAG2a,IAExB,WAAN3a,GAAgC,iBAANA,GAAkB,QAAQkI,KAAKlI,KACzD0I,EAAKrC,EAAiBiU,EAE9B,MAEI5R,EAAKrC,EAAiBiU,GAE1B,MAAM7T,EAAQ0K,QAAQhQ,IAAI2W,EAAQ9X,EAAG2a,GACrC,OAAIje,EAAcob,IAA4B,mBAAVrR,GAAwB,CAAC,OAAQ,MAAO,QAAS,UAAW,SAAU,OAAQ,UAAW,aAAc,QAAQK,SAAS9G,GACjJ,YAAaiG,GAChB,MAAMiM,EAAM4F,EACNgD,EAAY5I,EAAI1N,OAChBuW,EAAc7I,EAAI,GAClB8I,EAAa9I,EAAI4I,EAAY,GAC7B1B,EAAS3S,EAAM+B,MAAMsP,EAAQ7R,GAInC,OAHIiM,EAAI1N,SAAWsW,GAAa5I,EAAI,KAAO6I,GAAe7I,EAAIA,EAAI1N,OAAS,KAAOwW,GAC9EtS,EAAKpD,EAAcgV,GAEhBlB,CACX,EAGA3S,GAAkB,iBADFA,EAETiC,EAAK2R,GAAU5T,EAAO6T,GAE1B7T,GAEXwU,QAAUnD,GAAoB3G,QAAQ8J,QAAQnD,GAC9CxR,IAAK,CAACwR,EAAQ1R,IAAiB+K,QAAQ7K,IAAIwR,EAAQ1R,GACnD/E,IAAK,CAACyW,EAAQ9X,EAAGyG,KACb,GAAIiC,EAAK9I,EACL,OAAO,EACX,GAAiB,iBAANI,EACP,OAAO,EACX,MAAMkb,EAAM/J,QAAQ7K,IAAIwR,EAAQ9X,GAC1Bmb,EAAWD,EAAM/J,QAAQhQ,IAAI2W,EAAQ9X,QAAKsI,EAIhD,GAHI7B,GAA0B,iBAAVA,GAChBiC,EAAK2R,GAAU5T,EAAO6T,IAErBY,EAAK,CACN,IACI/J,QAAQC,eAAe0G,EAAQ9X,EAAG,CAC9BqR,aAAc,EACdC,WAAY,EACZC,SAAU,EACV9K,SAER,CACA,MACI0K,QAAQ9P,IAAIyW,EAAQ9X,EAAGyG,EAC3B,CAEA,OADAiC,EAAKpD,EAAcgV,GACZ,CACX,CACA,OAAIa,IAAa1U,IAEjB0K,QAAQ9P,IAAIyW,EAAQ9X,EAAGyG,GACvBiC,EAAKpD,EAAcgV,IAFR,GAKfc,eAAgB,CAACtD,EAAQ9X,IAAMmR,QAAQiK,eAAetD,EAAQ9X,KAGlE,OADAnB,KAAKwK,GAAmBhI,IAAI6D,EAAMuV,GAC3BA,CACX,CACA,CAAAxV,CAAoBC,GAChB,MAAMwD,EAAO7J,KACb,OAAO,IAAI6b,MAAMxV,EAAM,CACnB/D,IAAK,CAAC2W,EAAQhH,EAAU6J,KACpB,MAAMlU,EAAQ0K,QAAQhQ,IAAI2W,EAAQhH,EAAU6J,GAC5C,OAAI7J,IAAa8J,OAAOC,SACbpU,GACa,iBAAbqK,GACPpI,EAAKrC,EAAiByK,GAEtBrK,GAAyB,iBAATA,EACTiC,EAAK2R,GAAU5T,EAAOqK,GAE1BrK,IAEXwU,QAAUnD,GAAW3G,QAAQ8J,QAAQnD,GACrCxR,IAAK,CAACwR,EAAQ1R,IAAQ+K,QAAQ7K,IAAIwR,EAAQ1R,GAC1C/E,IAAK,CAACyW,EAAQhH,EAAUrK,EAAOkU,KAC3B,GAAIjS,EAAK9I,EACL,OAAO,EACX,GAAIkR,IAAa8J,OAAOC,UAAYne,EAAcob,GAC9C,OAAOrR,EACX,MAAM0U,EAAWhK,QAAQhQ,IAAI2W,EAAQhH,GACrC,GAAIqK,IAAa1U,EACb,OAAO,EAEX,GADY0K,QAAQ7K,IAAIwR,EAAQhH,GAe5BK,QAAQ9P,IAAIyW,EAAQhH,EAAUrK,EAAOkU,QAbrC,IACIxJ,QAAQC,eAAe0G,EAAQhH,EAAU,CACrCO,aAAc,EACdC,WAAY,EACZC,SAAU,EACV9K,SAER,CACA,MACI0K,QAAQ9P,IAAIyW,EAAQhH,EAAUrK,EAAOkU,EACzC,CAMJ,GADA9b,KAAKyG,EAAcwL,GACfjS,KAAK2C,GAAkC,WAAbsP,EAAuB,CACjD,MAAMuK,EAAKvD,EAAOhO,OACduR,IACAA,EAAGvK,GAAYrK,GACnB,MAAM6U,EAAMzc,KAAKgD,EAAaiP,GAC1BwK,IAAQzc,KAAK4C,IACb5C,KAAK4C,EAAqB,EAC1B5C,KAAK2E,EAAa,IAAM8X,EAAI5U,KAAK7H,KAAK8H,IAAwBF,EAAO0U,IACrEtc,KAAK4C,EAAqB,EAElC,CACA,OAAO,IAGnB,CACA,CAAAkF,CAAqB4U,EAAmB,GACpC,MAAMC,EAAW,CACbC,KAAQ,OACRC,SAAY,IAAM7c,KAAK4J,UACvBkT,aAAgB,IAAM9c,KAAKgH,IAC3B+V,oBAAwBjY,GAAO9E,KAAK6E,EAAoBC,GACxDkY,UAAcnM,GACNA,GACA7Q,KAAKkE,EAAe3B,KAAKsO,QACpB7Q,KAAKiE,GACNwG,eAAe,KACX,IAAKzK,KAAKiE,GAAoBjE,KAAKkE,EAAeyB,OAAQ,CACtD,MAAMyC,EAAIpI,KAAKkE,EAAemE,OAAO,EAAGrI,KAAKkE,EAAeyB,QAC5D,IAAK,MAAMb,KAAMsD,EACb,IACItD,GACJ,CACA,MAAQ,CAEhB,MAIL,IAAImY,QAAQC,IACfld,KAAKkE,EAAe3B,KAAK,IAAM2a,KAC1Bld,KAAKiE,GACNwG,eAAe,KACX,IAAKzK,KAAKiE,GAAoBjE,KAAKkE,EAAeyB,OAAQ,CACtD,MAAMyC,EAAIpI,KAAKkE,EAAemE,OAAO,EAAGrI,KAAKkE,EAAeyB,QAC5D,IAAK,MAAMb,KAAMsD,EACb,IACItD,GACJ,CACA,MAAQ,CAEhB,MAIhBqY,IAAOnd,KAAKO,EACZ6c,IAAOpd,KAAKG,EACZkd,WAAcrd,KAAKa,EACnByc,aAAgBtd,KAAKe,EACrBwc,QAAWvd,KAAKC,EAChBud,UAAaxd,KAAK8C,EAClB2a,QAAY3Y,IACR,MAAM4Y,EAAa1d,KAAKsD,EAClBqa,EAAe3d,KAAKqD,EAC1BrD,KAAKsD,EAAuB,EAC5BtD,KAAKqD,EAA0B,EAC/B,IACI,MAAqB,mBAAPyB,EAAoBA,SAAO2E,CAC7C,CACA,QACIzJ,KAAKsD,EAAuBoa,EAC5B1d,KAAKqD,EAA0Bsa,EAC/B3d,KAAKgH,GACT,IAGR,OAAO,IAAI6U,MAAM7b,KAAKmG,EAAO,CACzB7D,IAAK,CAAC2W,EAAQ2E,IACNA,KAAW3E,GACXjZ,KAAKwH,EAAiBoW,GACZ3E,EAAO2E,IAGRA,KAAW5d,KAAK+C,EAClB/C,KAAKsH,EAAkBsW,GAC9BA,KAAWjB,EACJA,EAASiB,GACb5d,KAAKsG,EAASsX,GAEzBpb,IAAK,CAACqb,EAASD,EAAShW,KAChB5H,KAAKqD,IAKTrD,KAAKmG,EAAMyX,GAAWhW,GAFX,IAMvB,CACA,EAAA8B,CAAoBvE,EAAO2Y,GACvB,MAAMC,EAAY/d,KACZge,EAAcF,EAAgB9d,KAAKgT,GAAkB8K,GAAiB,KACtEG,EAAYD,EAAc,IAAIxa,IAAIpF,EAAO4f,IAAgB,IAAIxa,IAC7D0a,EAA6B,oBAAXC,OAAyBA,YAAS1U,EACpD2U,EAAiC,oBAAbpf,SAA2BA,cAAWyK,EAC1DxI,EAAMjB,KAAKI,UAAUc,IACrBmd,IAAYpd,EAAIqd,mBAChBC,EAAQ,IAAI/a,KAAKvC,EAAIud,cAAgB,IAAI1Q,IAAIvM,GAAYA,EAAPF,KAClDod,EAAclO,IAChB,IAAKA,EACD,OAAOA,EAEX,GAD6C,mBAAvBA,EAAEjL,iBAEpB,OAAOiL,EACX,MAAMmO,EAAa,IAAI7a,QACjB8a,EAAU,CAACxZ,EAAOE,KACpB,IACI,OAAOF,EAAQ,UAAmBsE,IAAZpE,EAAwB,GAAyB,iBAAZA,EAAuBuZ,KAAKC,UAAUxZ,GAAkBA,EAAPhE,GAChH,CACA,MACI,OAAO8D,EAAQ,GACnB,GAEJ,OAAO,IAAI0W,MAAMtL,EAAG,CAChB,GAAAjO,CAAI2W,EAAQ6F,EAAMhD,GACd,GAAa,qBAATgD,EACA,OAAO,SAAU3Z,EAAOC,EAASC,GAC7B4T,EAAO3T,iBAAiBH,EAAOC,EAASC,GACxC,MAAMyV,EAAUiD,EAAUlZ,EAAoB,KAAQ,IAClDoU,EAAO/O,oBAAoB/E,EAAOC,EAASC,EAC/C,CACA,MAAQ,IACR,IACI,GAAuB,mBAAZD,GAA0B0V,EAAS,CAC1C,IAAIpL,EAAIgP,EAAWpc,IAAI8C,GAClBsK,IACDA,EAAI,IAAIxM,IACRwb,EAAWlc,IAAI4C,EAASsK,IAE5BA,EAAElN,IAAImc,EAAQxZ,EAAOE,GAAUyV,EACnC,CACJ,CACA,MAAQ,CACZ,EAEJ,GAAa,wBAATgE,EACA,OAAO,SAAU3Z,EAAOC,EAASC,GAC7B,IACI4T,EAAO/O,oBAAoB/E,EAAOC,EAASC,EAC/C,CACA,MAAQ,CACR,IACI,GAAuB,mBAAZD,EAAwB,CAC/B,MAAMsK,EAAIgP,EAAWpc,IAAI8C,GACzB,GAAIsK,EAAG,CACH,MAAMnI,EAAMoX,EAAQxZ,EAAOE,GACrB0Z,EAAMrP,EAAEpN,IAAIiF,GAClB,GAAIwX,EAAK,CACL,IACIA,GACJ,CACA,MAAQ,CAERrP,EAAE1K,OAAOuC,EACb,CACe,IAAXmI,EAAEsP,MACFN,EAAW1Z,OAAOI,EAC1B,CACJ,CACJ,CACA,MAAQ,CACZ,EAEJ,GAAa,kBAAT0Z,EACA,OAAO,SAAU1L,GAAO,MAAM6L,EAAMhG,EAAOiG,cAAc9L,GAAM,OAAOqL,EAAWQ,EAAM,EAE3F,GAAa,qBAATH,EACA,OAAO,SAAU1L,GAAO,MAAM+L,EAAOlG,EAAOmG,iBAAiBhM,GAAM,OAAOtV,MAAMI,KAAKihB,GAAMrR,IAAI2Q,EAAa,EAEhH,GAAa,mBAATK,EACA,OAAO,SAAUvf,GAAM,MAAM0f,EAAMhG,EAAO7Z,eAAeG,GAAK,OAAOkf,EAAWQ,EAAM,EAE1F,GAAa,aAATH,EAAqB,CACrB,MAAMO,EAAMpG,EAAOja,SACnB,OAAOyf,EAAWY,IAAQA,CAC9B,CACA,GAAa,SAATP,GAAmB7F,IAAWmF,EAAW,CACzC,MAAM/I,EAAI4D,EAAO3P,KACjB,OAAOmV,EAAWpJ,IAAMA,CAC5B,CACA,GAAa,gBAATyJ,GAA0B7F,IAAWmF,EAAW,CAChD,MAAMkB,EAAIrG,EAAOsG,YACjB,OAAOd,EAAWa,IAAMA,CAC5B,CACA,OAAOhN,QAAQhQ,IAAI2W,EAAQ6F,EAAMhD,EACrC,KAGF0D,EAAmB,IAAItc,IACvBuc,EAAoB,IAAIvc,IACxBwc,EAAe,IAAIxc,IAkCnByc,EAAoBC,IACtB,IAAKA,EACD,OACJ,MAAMC,EAAU,YAAazY,GACzB,MAAM0Y,EAAO,IAAIF,KAAQxY,GAKzB,OAJA2W,EAAUlZ,EAAoB,KAAQ,IAClCib,EAAKC,YACT,CACA,MAAQ,IACDD,CACX,EAEA,OADAD,EAAQlE,UAAYiE,EAAKjE,UAClBkE,GAELlD,EAAW,CACbqD,QAAWlC,GAAiB,KAC5BmC,OAAU9a,GAAS,QACfkZ,IAAYE,EAAM9W,IAAI,cAAgB,CAAC,EAAI,CAAEsJ,WAlD/B,CAACjM,EAAIob,KAAO9Y,KAC9B,MAAM7H,EAAK2e,GAASnN,aAAajM,EAAIob,KAAO9Y,GAC5C,GAAU,MAAN7H,EAAY,CACZ,MAAMub,EAAUiD,EAAUlZ,EAAoB,KAAQ,IAClDqZ,GAASiC,eAAe5gB,EAC5B,CACA,MAAQ,IACRigB,EAAiBhd,IAAIjD,EAAIub,EAC7B,CACA,OAAOvb,OA0CH8e,IAAYE,EAAM9W,IAAI,gBAAkB,CAAC,EAAI,CAAE0Y,aAAiB5gB,IAAS,IACrE2e,GAASiC,eAAe5gB,EAC5B,CACA,MAAQ,CACR,QACI,IACI,MAAM6gB,EAAIZ,EAAiBld,IAAI/C,GAC3B6gB,IACAA,IACAZ,EAAiBxa,OAAOzF,GAEhC,CACA,MAAQ,CACZ,OACA8e,IAAYE,EAAM9W,IAAI,eAAiB,CAAC,EAAI,CAAE4Y,YAtD/B,CAACvb,EAAIob,KAAO9Y,KAC/B,MAAM7H,EAAK2e,GAASmC,cAAcvb,EAAIob,KAAO9Y,GAC7C,GAAU,MAAN7H,EAAY,CACZ,MAAMub,EAAUiD,EAAUlZ,EAAoB,KAAQ,IAClDqZ,GAASoC,gBAAgB/gB,EAC7B,CACA,MAAQ,IACRkgB,EAAkBjd,IAAIjD,EAAIub,EAC9B,CACA,OAAOvb,OA8CH8e,IAAYE,EAAM9W,IAAI,iBAAmB,CAAC,EAAI,CAAE6Y,cAAkB/gB,IAAS,IACvE2e,GAASoC,gBAAgB/gB,EAC7B,CACA,MAAQ,CACR,QACI,IACI,MAAM6gB,EAAIX,EAAkBnd,IAAI/C,GAC5B6gB,IACAA,IACAX,EAAkBza,OAAOzF,GAEjC,CACA,MAAQ,CACZ,OACA8e,IAAYE,EAAM9W,IAAI,yBAA2B,CAAC,EAAI,CAAES,sBA1D9B2I,IAC9B,MAAMtR,EAAK2e,GAAShW,wBAAwB2I,GAC5C,GAAU,MAANtR,EAAY,CACZ,MAAMub,EAAUiD,EAAUlZ,EAAoB,KAAQ,IAClDqZ,GAASqC,uBAAuBhhB,EACpC,CACA,MAAQ,IACRmgB,EAAald,IAAIjD,EAAIub,EACzB,CACA,OAAOvb,OAkDH8e,IAAYE,EAAM9W,IAAI,wBAA0B,CAAC,EAAI,CAAE8Y,qBAAyBhhB,IAAS,IACrF2e,GAASqC,uBAAuBhhB,EACpC,CACA,MAAQ,CACR,QACI,IACI,MAAM6gB,EAAIV,EAAapd,IAAI/C,GACvB6gB,IACAA,IACAV,EAAa1a,OAAOzF,GAE5B,CACA,MAAQ,CACZ,OACA8e,IAAYE,EAAM9W,IAAI,oBAAsB,CAAC,EAAI,CAAE+Y,iBAAoBb,EAAiBzB,GAASsC,sBACjGnC,IAAYE,EAAM9W,IAAI,kBAAoB,CAAC,EAAI,CAAEgZ,eAAkBd,EAAiBzB,GAASuC,oBAC7FpC,IAAYE,EAAM9W,IAAI,wBAA0B,CAAC,EAAI,CAAEiZ,qBAAwBf,EAAiBzB,GAASwC,0BACzGrC,IAAYE,EAAM9W,IAAI,UAAY,CAAC,EAAI,CAAE0W,OAAUM,EAAWP,OAC9DG,IAAYE,EAAM9W,IAAI,YAAc,CAAC,EAAI,CAAEzI,SAAYyf,EAAWL,KAE1E,OAAO,IAAIvC,MAAM,CAAC,EAAG,CACjBvZ,IAAK,CAACqe,EAAI/C,IACFI,GAAeJ,KAAWI,EACnBA,EAAYJ,GACnBA,KAAWG,EAAU5X,EACd4X,EAAU5X,EAAMyX,GACvBA,KAAWG,EAAUhb,EACdgb,EAAUzW,EAAkBsW,GACnCA,KAAWG,EAAUzX,EACdyX,EAAUzX,EAASsX,GAC1BA,KAAWjB,EACJA,EAASiB,QADpB,EAIJpb,IAAK,CAACme,EAAI/C,EAAShW,KACXoW,GAAeC,EAAUxW,IAAImW,GAC7BI,EAAYJ,GAAWhW,EAGvBmW,EAAU5X,EAAMyX,GAAWhW,EAExB,GAEXH,IAAK,CAACkZ,EAAI/C,OAAeI,KAAeJ,KAAWI,KAC/CJ,KAAWG,EAAU5X,GACrByX,KAAWG,EAAUhb,GACrB6a,KAAWG,EAAUzX,GACrBsX,KAAWjB,GAEvB,CACA,EAAA/M,CAAqBtP,EAASsgB,EAAOxS,EAAYjM,EAAWoN,GACxD,MAAM1F,EAAO7J,KACP6R,EAAYhI,EAAKkE,GAAwBK,EAAY9N,GACrDugB,EAAgB,CAAE9W,KAAM,SAAUqE,aAAYpE,gBAAiB7H,GACjEA,EAAU2e,MACVjX,EAAKlF,EAAa,IAAMxC,EAAU2e,KAAKxgB,EAASuR,IAAazD,EAAYvE,EAAM0F,EAAWsC,IAE9F,MAIM9K,EAAS8C,EAAKwE,GAJL,KACPlM,EAAU2I,QACVjB,EAAKlF,EAAa,IAAMxC,EAAU2I,OAAOxK,EAASuR,IAAazD,EAAYvE,EAAM0F,EAAWsC,MAGpGgP,EAAc/V,OAAS/D,EACvB8C,EAAK3H,EAAc5B,EAASugB,EAChC,CACA,EAAAhS,CAAwBvO,EAASygB,EAAe3S,GAC5C,MAAMvE,EAAO7J,KACP6R,EAAYhI,EAAKkE,GAAwBK,EAAY9N,GAC3D,GAAsB,UAAlBygB,EAA2B,CAC3B,MAAMvgB,EAAKF,EACX,IAAKuJ,EAAKxF,EAAkB/B,IAAI9B,GAAK,CACjC,MAAMwgB,EAAU,IAAIxd,IACdyd,EAAKzgB,EAAG0gB,WAAa,GAC3B,GAAID,EACA,IAAK,MAAMhf,KAAOgf,EAAG7R,MAAM,OACnBnN,GACA+e,EAAQ/b,IAAIhD,GAExB4H,EAAKxF,EAAkB7B,IAAIhC,EAAIwgB,EACnC,CACJ,CACA,MAAMG,EAAQ7gB,EACd,IAAI8gB,EAAW,KACf,GAAIL,KAAiBI,EACjBC,EAAWL,MACV,CACD,MAAMM,EAAQN,EAAcO,QAAQ,YAAa,CAAClH,EAAGmH,IAAMA,EAAEC,eACzDH,KAASF,EACTC,EAAWC,EAC0B,aAAhCN,EAAcjU,eAAgC,aAAcqU,IACjEC,EAAW,WACnB,CACA,MAAMK,KAAmBL,GAAuC,kBAApBD,EAAMC,IAC5CM,KAAwBN,KAAaA,KAAYD,IAAqC,mBAApBA,EAAMC,IACxEO,IAAuB9hB,EAAkB+hB,GAAIb,EAAcjU,eAsG3D/F,EAAS8C,EAAKwE,GArGL,KACX,MAAMzG,EAAQiK,IACd,GAAsB,UAAlBkP,EAA2B,CAC3B,MAAMvgB,EAAKF,EACLuhB,EAAOhY,EAAKxF,EAAkB/B,IAAI9B,GACxC,GAAqB,iBAAVoH,EACPpH,EAAG0gB,UAAYW,GAAQA,EAAK7C,KAAO,IAAI6C,GAAMC,KAAK,MAAQla,EAAQ,IAAMA,EAAQ,IAAMA,GAAS,QAE9F,GAAI/J,EAAc+J,GAEfpH,EAAG0gB,UADHW,GAAQA,EAAK7C,KACE,IAAI6C,KAASja,EAAMiG,OAAOsD,UAAU2Q,KAAK,KAEzCla,EAAMiG,OAAOsD,SAAS2Q,KAAK,UAE7C,GAAIla,GAA0B,iBAAVA,EAAoB,CACrCia,GAAQA,EAAK7C,OACbxe,EAAG0gB,UAAY,IAAIW,GAAMC,KAAK,MAClC,IAAK,MAAMtV,KAAO5E,EAAO,CACrB,MAAMma,IAAOna,EAAM4E,GACnB,IAAKA,EACD,SACJ,MAAM6E,EAAS7E,EAAI4C,MAAM,OACzB,IAAK,IAAItI,EAAI,EAAGA,EAAIuK,EAAO1L,OAAQmB,IAAK,CACpC,MAAMkb,EAAK3Q,EAAOvK,GACbkb,GAELxhB,EAAG+Q,UAAU0Q,OAAOD,EAAID,EAC5B,CACJ,CACJ,MACkB,MAATna,GAAiBia,GAAQA,EAAK7C,KACnCxe,EAAG0gB,UAAY,IAAIW,GAAMC,KAAK,KAEhB,MAATla,GACLpH,EAAGoO,gBAAgB,SAEvB,MACJ,CACA,GAAImS,IAAkBviB,EAAW,CAC7B,MAAMgC,EAAKF,EACX,MAAqB,iBAAVsH,OACPpH,EAAGnB,MAAM6iB,QAAUta,GAGnBA,GAA0B,iBAAVA,OAChBvJ,OAAOgS,OAAO7P,EAAGnB,MAAOuI,QAGf,MAATA,GACApH,EAAGoO,gBAAgB,SAE3B,CACA,GAAK6S,GAAiBL,GAAaO,EAAoB,CACnD,MAAMQ,IAAYva,EAOlB,OANIwZ,GAAYK,IACZN,EAAMC,GAAYe,QAClBA,EACA7hB,EAAQ8hB,aAAarB,EAAe,IAEpCzgB,EAAQsO,gBAAgBmS,GAEhC,CACA,IAAIsB,EAAa,KACjB,GAAIza,GAA0B,iBAAVA,EAAoB,CACpC,MAAM0a,EAAQ,GACd,IAAK,MAAMpX,KAAKtD,EACRA,EAAMsD,IACNoX,EAAM/f,KAAK2I,GAEnBmX,EAAaC,EAAM3c,OAAS2c,EAAMR,KAAK,KAAO,IAClD,MACSla,UACLya,EAAoBza,EAAPvG,IAEjB,GAAIqgB,GAAsBN,EACtB,GAAmB,OAAfiB,EACA,IACIlB,EAAMC,GAAYiB,CACtB,CACA,MAAOrH,GACH,IACI1a,EAAQ8hB,aAAarB,EAAesB,EACxC,CACA,MAAQ,CACZ,MAGA/hB,EAAQsO,gBAAgBmS,QAIb,OAAfsB,EACY/hB,EAAQyU,aAAagM,KACrBsB,GACR/hB,EAAQ8hB,aAAarB,EAAesB,GAGpC/hB,EAAQ+K,aAAa0V,IACrBzgB,EAAQsO,gBAAgBmS,KAIpClX,EAAK3H,EAAc5B,EAAS,CAAEyJ,KAAM,OAAQqE,aAAYtD,OAAQ/D,GACpE,CACA,EAAAiM,CAAkBxS,GACd,IAAKA,EACD,OAAO,KACX,IAAKA,EAAGoM,cAAe,CACnB,MAAM2V,EAAM/hB,EAAG8U,GACf,GAAIiN,GAAOA,EAAI3V,cACXpM,EAAK+hB,MAEJ,CACD,MAAMC,EAAehiB,EAAG0T,GACpBsO,IACAhiB,EAAKgiB,EACb,CACJ,CACA,MAAMC,EAAS,CAAC,EAChB,IAAItW,EAAO3L,EACX,KAAO2L,GAAM,CACT,MAAMuW,EAAQ1iB,KAAK4D,EAAYtB,IAAI6J,GAGnC,GAFIuW,GACArkB,OAAOgS,OAAOoS,EAAQC,GACtBvW,IAASnM,KAAKM,QACd,MACJ6L,EAAOA,EAAKS,aAChB,CACA,OAAOxO,EAAOqkB,GAAQ9c,OAAS8c,EAAS,IAC5C,CACA,EAAAE,CAAyBC,GACrB,IAAK,MAAOtiB,EAASwJ,KAAe9J,KAAKqC,EACrC,IAAK,MAAMF,KAAa2H,GACf8Y,IAAStiB,GAAYA,aAAmBuiB,SAAWD,EAAK1J,SAAS5Y,KAAc6B,EAAU2I,QAC1F3I,EAAU2I,QAI1B,CACA,EAAAoE,CAAkB5O,EAAS8N,GACvB,MAAMvE,EAAO7J,KACPqb,EAAQjN,EAAW7E,OAAO8R,MAAM,4EACtC,IAAKA,EACD,OAEJ,MAAMyH,EAAUzH,EAAM,IAAMA,EAAM,GAC5B0H,EAAW1H,EAAM,GACjB2H,EAAW3H,EAAM,GACjBvH,EAAc/U,EAAEgV,cAAc,SAEpC,IAAIkP,EADJ3iB,EAAQ0T,YAAYC,aAAaH,EAAaxT,GAE1CA,EAAQ3B,KAAiBC,GACzBqkB,EAAkBlkB,EAAEO,cAAc,OAClC2jB,EAAgB5jB,MAAMZ,GAAeQ,EACrCgkB,EAAgBxjB,YAAYa,EAAQ+T,QAAQC,UAAU,IACtDhU,EAAQ0T,YAAYmB,YAAY7U,KAGhC2iB,EAAkB3iB,EAClBA,EAAQ0T,YAAYmB,YAAY7U,IAEpC,MAAM4iB,EAAgBpP,EAAYlH,eAAiB/C,EAAKvJ,QAClD6iB,EAAWtZ,EAAKkE,GAAwBiV,EAASzZ,OAAQ2Z,GACzDE,EAAY,GACZC,EAAc,CAACC,EAAMC,KACvB,MAAMb,EAAQ,CAAEI,CAACA,GAAUQ,GAG3B,OAFIP,IACAL,EAAMK,GAAYQ,GACfb,GA2DLc,EAAM,CAAEzZ,KAAM,MAAOqE,cACrBrH,EAAS8C,EAAKwE,GA1DL,KACX,MAAMoV,EAAO5Z,EAAKlF,EAAa,KAC3B,MAAM4V,EAAS4I,IACf,GAAIhlB,EAAQoc,GACR,MAAO,CAAE4E,KAAM5E,EAAQjc,KAAM,MACjC,GAAmB,oBAAR4E,KAAuBqX,aAAkBrX,IAChD,MAAO,CAAEic,KAAMlhB,EAAOsc,EAAOlQ,UAAW/L,KAAML,EAAOsc,EAAOjc,SAEhE,GAAmB,oBAARkF,KAAuB+W,aAAkB/W,IAChD,MAAO,CAAE2b,KAAMlhB,EAAOsc,EAAOlQ,UAAW/L,KAAM,MAElD,GAAIic,GAA6C,mBAA5BA,EAAOwB,OAAOC,UAC/B,MAAO,CAAEmD,KAAMlhB,EAAOsc,GAASjc,KAAM,MAEzC,GAAIic,GAA4B,iBAAXA,EAAqB,CACtC,MAAMjc,EAAOD,OAAOC,KAAKic,GAEzB,MAAO,CAAE4E,KADI7gB,EAAKwP,IAAI5C,GAAKqP,EAAOrP,IACnB5M,OACnB,CACA,MAAO,CAAE6gB,KAAM,GAAI7gB,KAAM,OAC1B,CAAE6gB,KAAM,GAAI7gB,KAAM,OACf6gB,EAAOsE,EAAKtE,KACZuE,EAAUD,EAAKnlB,KACrB,GAAI8kB,EAAUzd,OAASwZ,EAAKxZ,OACxB,KAAOyd,EAAUzd,OAASwZ,EAAKxZ,QAAQ,CACnC,MAAMma,EAAOsD,EAAUO,MACnB7D,EAAK9L,YACL8L,EAAK9L,WAAWmB,YAAY2K,EACpC,CAEJ,MAAM8D,EAASC,KAAKC,IAAIV,EAAUzd,OAAQwZ,EAAKxZ,QAC/C,IAAK,IAAImB,EAAI,EAAGA,EAAI8c,EAAQ9c,IAAK,CAC7B,MAAMgZ,EAAOsD,EAAUtc,GAEvB+C,EAAKjG,EAAYpB,IAAIsd,EAAMuD,EAAYlE,EAAKrY,GAD7B4c,EAAUA,EAAQ5c,GAAKA,IAEtC+C,EAAK8Y,GAAyB7C,EAClC,CACA,GAAIX,EAAKxZ,OAASyd,EAAUzd,OAAQ,CAChC,MAAMoe,EAAOhlB,EAAEilB,yBACTC,EAAQb,EAAUzd,OACxB,IAAK,IAAImB,EAAImd,EAAOnd,EAAIqY,EAAKxZ,OAAQmB,IAAK,CACtC,MAAMod,EAAQjB,EAAgB3O,UAAU,GACxC4P,EAAMtV,gBAAgB,SAEtB/E,EAAKjG,EAAYpB,IAAI0hB,EAAOb,EAAYlE,EAAKrY,GAD9B4c,EAAUA,EAAQ5c,GAAKA,IAEtC,IACI+C,EAAKjB,GAAiBsb,EAC1B,CACA,MAAQ,CACRH,EAAKtkB,YAAYykB,GACjBd,EAAU7gB,KAAK2hB,EACnB,CACA,MAAMC,EAAMf,EAAUa,EAAQ,IAAMnQ,EAChCqQ,EAAInQ,YACJmQ,EAAInQ,WAAWC,aAAa8P,EAAMI,EAAI5O,YAC9C,GAGsCiO,GAC1CA,EAAI1Y,OAAS/D,EACb8C,EAAK3H,EAAc4R,EAAa0P,EACpC,CACA,EAAArb,GACI,MAAM0B,EAAO7J,KACb,IAAK,MAAM8J,KAAcD,EAAKxH,EAAYgI,SACtC,IAAK,MAAM+Z,KAAMta,EACb,KAAIhL,IAAkCslB,EAAGzS,KAErCyS,EAAGtZ,OACH,IACIsZ,EAAGtZ,QACP,CACA,MAAOuZ,GAEP,CAIhB,EAMJ,OAJAxkB,EAAkB+hB,GAAM,CACpB0C,UAAW,EAAGC,eAAgB,EAAGC,WAAY,EAAGC,QAAS,GAE/C,IAt3Ed,MACI,WAAAhiB,GACIzC,KAAK0kB,GAAc,IAAIxhB,IACvBlD,KAAK2kB,GAAQ,IAAI9gB,QACjB7D,KAAK4kB,GAAW,GAChB5kB,KAAK6kB,GAAU,CAAC,EAChB7kB,KAAK8kB,GAAoB,IAAI5hB,IAC7BlD,KAAK+kB,GAAsB,IAAI7hB,IAC/BlD,KAAKglB,GAAa,IAAInhB,QACtB7D,KAAKilB,GAAsB,EAC3BjlB,KAAKmC,UAAY,CAACvC,EAAMuC,KACpB,GAAIvC,EAAKgM,WAAWlM,EAAM,KACtB,MAAUwlB,MAAM,iDAAiDxlB,kDAGrE,OADAM,KAAK8kB,GAAkBtiB,IAAI5C,EAAMuC,GAC1BnC,MAEXA,KAAKmlB,kBAAqBC,IACtB,IAAKA,IAAeA,EAAWxlB,KAC3B,MAAUslB,MAAM,qCACpB,MAAMtlB,EAAOwlB,EAAWxlB,KAAKkN,cAC7B,GAAI9M,KAAK+kB,GAAoBtd,IAAI7H,GAC7B,MAAUslB,MAAM,mBAAmBtlB,yBAEvC,OADAI,KAAK+kB,GAAoBviB,IAAI5C,EAAMwlB,GAC5BplB,MAEXA,KAAKqlB,GAA8BzlB,GAASI,KAAK+kB,GAAoBziB,IAAI1C,EAAKkN,eAC9E9M,KAAK2P,GAAuB/P,GAASI,KAAK8kB,GAAkBxiB,IAAI1C,GAChEI,KAAKkB,EAAa,IAAMlB,KAAK6kB,GAC7B7kB,KAAKslB,KAAO,CAACC,EAAS,CAAC,KACnBvlB,KAAK6kB,GAAU,CAAEW,UAAW,OAAQC,MAAO,EAAOC,iBAAkB,KAASH,GAChC,kBAAlCvlB,KAAK6kB,GAAQa,mBACpB5mB,EAAiCkB,KAAK6kB,GAAQa,kBAElD,MAAMC,EAAO3lB,KAAK6kB,GAAQzjB,OAO1B,GALI1B,EADAimB,GAAwB,iBAATA,GAAqBA,EAAK9mB,GAAc,EACjD8mB,EAGA,IAEN5mB,GAAsB,YAAjBA,EAAE6mB,WACP7mB,EAAEuG,iBAAiB,mBAAoB,KAAQtF,KAAK6lB,KAA0B7lB,KAAK8lB,KAA2B,MAAMvE,EAAIxiB,GAAGmgB,cAAclf,KAAK6kB,GAAQW,WAAgBjE,IAClKvhB,KAAK+lB,GAAoBxE,GACrBvhB,KAAK6kB,GAAQhK,UACb7a,KAAKgmB,GAAkBzE,WAG9B,IAAKxiB,GAAsB,aAAjBA,EAAE6mB,YAA8C,gBAAjB7mB,EAAE6mB,WAA8B,CAC1E5lB,KAAK6lB,KACL7lB,KAAK8lB,KACL,MAAMvE,EAAIxiB,GAAGmgB,cAAclf,KAAK6kB,GAAQW,WACpCjE,IACAvhB,KAAK+lB,GAAoBxE,GACrBvhB,KAAK6kB,GAAQhK,UACb7a,KAAKgmB,GAAkBzE,GAEnC,CACA,OAAOvhB,MAEXA,KAAKimB,gBAAmBb,IACpB,MAAMrH,EAAY,IAAIle,EAAkBG,KAAKkmB,KAAwBd,EAAYplB,MAGjF,OAFAA,KAAK0kB,GAAYliB,IAAIub,EAAUxe,GAAIwe,GACnCA,EAAUvX,kBACHuX,GAEX/d,KAAK8lB,GAA0B,KAC3B,MAAMN,EAAYzmB,GAAGmgB,cAAclf,KAAK6kB,GAAQW,WAChD,IAAKA,EACD,OACJ,MAAMW,EAAoBX,EAAUpG,iBAAiB,IAAIzf,EAAS,YAClE,IAAK,MAAMW,KAAW6lB,EACbnmB,KAAK6I,GAAuBvI,IAC7BN,KAAKomB,GAAwB9lB,GAErC,MAAM+lB,EAAWb,EAAUpG,iBAAiB,qBAC5C,IAAK,MAAM5e,KAAM6lB,EACRrmB,KAAK6I,GAAuBrI,IAC7BR,KAAKsmB,GAA2B9lB,GAGxC,GADAR,KAAKumB,KACiC,IAAlCJ,EAAkBtnB,KAAsBmB,KAAK6I,GAAuB2c,GAAY,CAChF,MAAMgB,EAAavoB,EAAO+B,KAAK0kB,GAAYra,UACrCoc,EAAgBD,EAAWA,EAAW3nB,GAAc,GACtD4nB,IAAkBA,EAAchmB,SAChCgmB,EAAcle,cAAcid,EAEpC,GAEJxlB,KAAKumB,GAAkB,KACnB,GAAKvmB,KAAK4kB,GAAS/lB,GAAnB,CAEA,IAAK,MAAMsC,KAAKnB,KAAK4kB,GAAU,CAC3B,IACI7kB,EADAwiB,EAAMphB,EAAEX,GAAGoM,cAEf,KAAO2V,IAAQxiB,GAAQ,CACnB,MAAM2mB,EAAQ1mB,KAAK6I,GAAuB0Z,GACtCmE,EACA3mB,EAAS2mB,EAETnE,EAAMA,EAAI3V,aAClB,CACI7M,GACAoB,EAAE+Z,KAAKpb,eAAeC,EAE9B,CACA,IAAK,MAAMoB,KAAKnB,KAAK4kB,GACjBzjB,EAAE+Z,KAAK1S,kBACXxI,KAAK4kB,GAAW,EAjBN,GAmBd5kB,KAAKomB,GAA0B,CAAC9lB,EAASqmB,KACrC,MAAMC,EAAiBtmB,EAAQyU,aAAapV,EAAS,SACrD,IAAI0G,EAAO,CAAC,EACZ,GAAIugB,EAAgB,CAChBtmB,EAAQsO,gBAAgBjP,EAAS,SACjC,IACI,GAAIgnB,EAAe,CACf,IAAIE,EAAY,CAAC,EACjB,IACIA,EAAYF,EAAc7e,OAA4B,CAAC,CAC3D,CACA,MACI+e,EAAY,CAAC,CACjB,CAEAxgB,EADmBmD,SAAS,SAAU,yBAAyBod,OACxD/b,CAAOgc,EAClB,MAEIxgB,EAAOrG,KAAK8mB,GAAqBF,GAGjCvgB,EADAA,EAAKb,QACE,CAAEA,QAASa,EAAKb,QAASa,KAAM,IAAKA,IAGpC,CAAEA,KAAM,IAAKA,IAEpBsgB,IACAtgB,EAAKA,KAAKkX,QAAUoJ,EAE5B,CACA,MAAO3L,GACP,CACJ,CACA,MAAME,EAAOlb,KAAKimB,gBAAgB5f,GAClC6U,EAAK5a,QAAUA,EACf4a,EAAK1U,kBACLxG,KAAK8I,GAAiBoS,EAAK5a,QAAS4a,GACpClb,KAAK4kB,GAASriB,KAAK,CAAE/B,GAAIF,EAAS4a,SAClC,MAAM6L,EAAWzmB,EAAQyU,aAAapV,EAAS,SAC/C,GAAIonB,EAAU,CACVzmB,EAAQsO,gBAAgBjP,EAAS,SACjC,MAAMqnB,EAAkB9L,EAAKxW,GAAYkB,QACzCsV,EAAKxW,EAAWkB,QAAU,WACtB,GAAIohB,EACA,IACIA,EAAgBnf,KAAK7H,KACzB,CACA,MAAQ,CAEZ,MAAM6R,EAAgBrI,SAAS,MAAO,aAAeud,EAAW,MAChEtc,eAAe,KACX,IAAIyQ,EAAKpa,aAAgBoa,EAAK5a,SAAY4a,EAAK5a,QAAQ2mB,YAEvD,IACI,MAAMjc,EAAMkQ,EAAKpT,OAA4BoT,EAAKzS,gBAAkB,CAAC,EAC/D8R,EAAS1I,EAAU7G,GACzB,GAAsB,mBAAXuP,EACP,IACIA,GACJ,CACA,MAAQ,CAEhB,CACA,MAAQ,GAEhB,CACJ,GAEJva,KAAKkmB,GAAuB,IAAM,aAAegB,KAAKC,MAAQ,IAAMtD,KAAKuD,SAASC,SAAS,IAAIC,UAAU,EAAG,GAC5GtnB,KAAK8mB,GAAwB1Y,IACzB,IACI,OAAW5E,SAAS,UAAY4E,EAAW7E,OAApC,EACX,CACA,MACI,MAAO,CAAC,CACZ,GAEJvJ,KAAK0K,GAAwB6c,IAAkBvnB,KAAK0kB,GAAY1f,OAAOuiB,IACvEvnB,KAAKwnB,GAAO,OACZxnB,KAAK8I,GAAmB,CAACxI,EAASyd,KAC9B/d,KAAK2kB,GAAMniB,IAAIlC,EAASyd,IAE5B/d,KAAKuK,GAAsBjK,IAAc,IACrCN,KAAK2kB,GAAM3f,OAAO1E,EACtB,CACA,MAAQ,EACZ,CACA,EAAAulB,GACI,IAAK9mB,EACD,OACJ,GAAY,MAARW,EACA,OACJ,MAAMH,EAAK,sBAAsBG,EACjC,GAAIX,EAAEI,OAASJ,EAAEK,eAAeG,GAAK,CACjC,MAAMF,EAAQN,EAAEO,cAAcd,GAC9Ba,EAAME,GAAKA,EACXF,EAAMG,YAAc,IAAIE,YAAcA,UAAYA,YAAcA,eAAiBA,cAAgBA,YAAcA,cAAgBA,8BAC/HX,EAAEI,KAAKM,YAAYJ,EACvB,CACJ,CACA,EAAA0mB,CAAoBP,GACZxlB,KAAKynB,IAA6C,oBAArBjH,mBAEjCxgB,KAAKynB,GAAgB,IAAIjH,iBAAiBkH,IACtC,IAAK,MAAMtH,KAAKsH,EACZ,GAAe,cAAXtH,EAAErW,KAAsB,CACxB,IAAK,IAAIjD,EAAI,EAAGA,EAAIsZ,EAAEuH,WAAWhiB,OAAQmB,IAAK,CAC1C,MAAM6E,EAAIyU,EAAEuH,WAAW7gB,GACvB,GAAmB,IAAf6E,EAAES,SACF,SACJ,MAAM5L,EAAKmL,EACa,cAApBnL,EAAG7B,IACS6B,EAAGuU,aAAa,YAChB/U,KAAK6I,GAAuBrI,IACpCR,KAAKsmB,GAA2B9lB,EAE5C,CACA,IAAK,IAAIsG,EAAI,EAAGA,EAAIsZ,EAAEwH,aAAajiB,OAAQmB,IAAK,CAC5C,MAAM6E,EAAIyU,EAAEwH,aAAa9gB,GACzB,GAAmB,IAAf6E,EAAES,SACF,SACJ,MAAM5L,EAAKmL,EACXlB,eAAe,KACX,GAAIjK,EAAGymB,YACH,OACJ,MAAMY,EAAQ,CAACrnB,GACf,KAAOqnB,EAAMliB,QAAQ,CACjB,MAAM4c,EAAMsF,EAAMlE,MACZzI,EAAOlb,KAAK6I,GAAuB0Z,GACzC,GAAIrH,IAASA,EAAKpa,YACd,IACIoa,EAAKtR,SACT,CACA,MAAQ,CAEZ,IAAIZ,EAAQuZ,EAAIhU,kBAChB,KAAOvF,GACH6e,EAAMtlB,KAAKyG,GACXA,EAAQA,EAAMyF,kBAEtB,GAER,CACJ,MACK,GAAe,eAAX2R,EAAErW,KAAuB,CAC9B,MAAMkP,EAASmH,EAAEnH,OACbA,GAAkC,cAAxBA,EAAOta,IAAoD,WAApByhB,EAAEW,eACnD/gB,KAAK8nB,GAA0B7O,EAEvC,CAEJjZ,KAAKumB,OAETvmB,KAAKynB,GAAcM,QAAQvC,EAAW,CAAEwC,UAAW,EAAMC,QAAS,EAAMvc,WAAY,EAAMwc,gBAAiB,CAAC,YAChH,CACA,EAAAJ,CAA0BtnB,GACtB,MAAM4I,GAAO5I,EAAGuU,aAAa,WAAa,IAAIxL,OACxCnH,EAAWpC,KAAK6I,GAAuBrI,GAC7C,GAAK4I,EAAL,CAUA,GAAIhH,IAAaA,EAAStB,YACtB,IACIsB,EAASwH,SACb,CACA,MAAQ,CAEZpJ,EAAGwR,UAAY,GACfhS,KAAKsmB,GAA2B9lB,EARhC,KATA,CACI,GAAI4B,IAAaA,EAAStB,YACtB,IACIsB,EAASwH,SACb,CACA,MAAQ,CAEZpJ,EAAGwR,UAAY,EAEnB,CASJ,CACA,EAAAsU,CAA2B9lB,GACvB,MAAM2nB,EAAS3nB,EAAGuU,aAAa,UAC/B,IAAKoT,EACD,OACJ,MAAMzlB,EAAM1C,KAAKqlB,GAA2B8C,GAC5C,IAAKzlB,EACD,OAEJ,IAAI0lB,EACAC,EAAM7nB,EAAGoM,cACb,KAAOyb,IAAQD,GAAY,CACvB,MAAM1B,EAAQ1mB,KAAK6I,GAAuBwf,GACtC3B,EACA0B,EAAa1B,EAEb2B,EAAMA,EAAIzb,aAClB,CACA,IAAI0b,EAAQ,KACRC,EAAiB,KACjBC,EAAoB,KACnBF,IACDA,EAAQ,CAAC,GACb,MAAMG,EAAWjoB,EAAGuU,aAAapV,EAAS,SAC1C,GAAI8oB,EAAU,CAEV,GADAD,EAAoBC,EAChBL,EACA,IAGIG,EAFe/e,SAAS,MAAO,qBAAuBif,EAAW,KAEhD3jB,CADLsjB,EAAW3f,WAAW,GAEtC,CACA,MACI8f,EAAiB,IACrB,MAGA,IACIA,EAAqB/e,SAAS,WAAaif,EAAW,IAArC,EACrB,CACA,MACIF,EAAiB,IACrB,CAEJ,GAAIA,GAA4C,iBAAnBA,EACzB,IAAK,MAAMrd,KAAKqd,EACNrd,KAAKod,IACPA,EAAMpd,GAAYqd,EAAerd,GAAtB7J,IACvBb,EAAGoO,gBAAgBjP,EAAS,QAChC,CACA,IAmBI+oB,EAnBAC,EAAW,CAAC,EAChB,GAAIjmB,EAAIkmB,SACJ,IACID,EAAWjmB,EAAIkmB,SAASN,IAAU,CAAC,CACvC,CACA,MACIK,EAAW,CAAC,CAChB,CAEJ,GAAIjmB,EAAI2D,KACJ,IAAK,MAAM6E,KAAKxI,EAAI2D,KAChBsiB,EAASzd,GAAKxI,EAAI2D,KAAK6E,GAG/B,IAAK,MAAMA,KAAKod,EACNpd,KAAKyd,IACPA,EAASzd,GAAKod,EAAMpd,IAI5B,GAFAyd,EAAS1d,OAASqd,EAEM,mBAAb5lB,EAAI4iB,KACX,IACI,MAAMoB,EAAQhkB,EAAI4iB,KAAKgD,GACvBI,EAAWhC,GAA0B,iBAAVA,EAAsBA,OAAQjd,CAC7D,CACA,MACIif,OAAUjf,CACd,CAEJ,MAAMof,EAAU,CACZxiB,KAAMsiB,EACNnjB,QAAS,IAAM9C,EAAI8C,SAAW,CAAC,KAAQkjB,GAASljB,SAAW,CAAC,GAC5DC,SAAU,IAAM/C,EAAI+C,UAAY,CAAC,KAAQijB,GAASjjB,UAAY,CAAC,GAC/DC,YAAa,IAAMhD,EAAIgD,aAAe,CAAC,KAAQgjB,GAAShjB,aAAe,CAAC,GACxEE,QAAS8iB,GAAS9iB,SAAWlD,EAAIkD,QACjCC,UAAW6iB,GAAS7iB,WAAanD,EAAImD,UACrCG,YAAa0iB,GAAS1iB,aAAetD,EAAIsD,YACzCC,cAAeyiB,GAASziB,eAAiBvD,EAAIuD,cAC7CF,QAAS2iB,GAAS3iB,SAAWrD,EAAIqD,QACjCD,UAAW4iB,GAAS5iB,WAAapD,EAAIoD,UACrCI,cAAewiB,GAASxiB,eAAiBxD,EAAIwD,eAE3CgV,EAAOlb,KAAKimB,gBAAgB4C,GAClC3N,EAAK5a,QAAUE,EACf,MAAMsoB,EAAmB,GACzB,KAAOtoB,EAAGuoB,YAAY,CAClB,MAAMpd,EAAInL,EAAGuoB,WACbD,EAAiBvmB,KAAKoJ,GACtBnL,EAAG2U,YAAYxJ,EACnB,CACA,GAAIjJ,EAAIsmB,SAAU,CACd,MAAMC,EAAiBC,IACnB1oB,EAAGwR,UAAYkX,EACf,MAAMC,EAAQ3oB,EAAG4e,iBAAiB,QAClC,GAAI+J,EAAMxjB,OACN,IAAK,MAAMyjB,KAAUD,EAAO,CACxB,MAAMvpB,EAAOwpB,EAAOrU,aAAa,QACjC,IAAIsU,EAAU,GAOd,GALIA,EAAUP,EAAiBjb,OAD3BjO,EACkC+L,GAAoB,IAAfA,EAAES,UAAkBT,EAAEoJ,aAAa,UAAYnV,EAGpD+L,GAAoB,IAAfA,EAAES,WAAmBT,EAAEN,aAAa,SAE3Ege,EAAQ1jB,OAAQ,CAChB,MAAMoe,EAAOhlB,EAAEilB,yBACf,IAAK,MAAMrY,KAAK0d,EACZtF,EAAKtkB,YAAYkM,GACrByd,EAAOpV,YAAYsV,aAAavF,EAAMqF,EAC1C,CACJ,GAGFG,EAAS7mB,EAAIsmB,SACnB,GAAsB,iBAAXO,EACPN,EAAcM,QAEb,GAAsB,mBAAXA,EACZ,IACI,MAAMtK,EAAMsK,IACRtK,GAA2B,mBAAbA,EAAIuK,MAClBhpB,EAAGwR,UAAY,GACfiN,EAAIuK,KAAKC,IAAUR,EAAcQ,GAAQ,IAAK,IAC1CvO,EAAKvS,IACT,CACA,MAAQ,KAGRsgB,GAAqBhK,GAAO,IAAd5d,GAEtB,CACA,MACIb,EAAGwR,UAAY,EACnB,MAEKuX,GAAiC,mBAAhBA,EAAOC,OAC7BhpB,EAAGwR,UAAY,GACfuX,EAAOC,KAAKC,IAAUR,EAAcQ,GAAQ,IAAK,IAC7CvO,EAAKvS,IACT,CACA,MAAQ,IAEhB,MAEI,IAAK,MAAMgD,KAAKmd,EACZtoB,EAAGf,YAAYkM,GAEvB3L,KAAK8I,GAAiBtI,EAAI0a,GAC1B,IACI,MAAMwO,EAASlpB,EAAG4e,iBAAiB,IAAIzf,EAAS,YAChD,IAAK,MAAMwM,KAAQud,EACV1pB,KAAK6I,GAAuBsD,IAC7BnM,KAAKomB,GAAwBja,EAAM+O,EAE/C,CACA,MAAQ,CAER,GADAlb,KAAK4kB,GAASriB,KAAK,CAAE/B,KAAI0a,SACrBsN,GAAqBJ,EACrB,IACIlN,EAAKvQ,GAAmB6d,EAAmBJ,EAC/C,CACA,MAAQ,CAEZpoB,KAAKumB,IACT,CACA,EAAA1d,CAAuBvI,GAAW,OAAON,KAAK2kB,GAAMriB,IAAIhC,EAAU,CAClE,OAAAynB,CAAQxnB,GAAY,CACpB,EAAAylB,CAAkBR,GACd,GAAIxlB,KAAKilB,GACL,OACJ,MAAMrC,EAAO4C,EACPpgB,EAAW4V,IACb,IAAIuH,EAAMvH,EAAE/B,OACZ,KAAOsJ,GAAOA,IAAQK,EAAKhW,gBACnBoO,EAAE2O,cADgC,CAGtC,MAAM7b,EAAM9N,KAAKglB,GAAW1iB,IAAIigB,GAChC,GAAIzU,EAAK,CACL,MAAMqR,EAAOrR,EAAIxL,IAAI0Y,EAAEjR,MACvB,GAAIoV,GAAQA,EAAKxZ,OACb,IAAK,MAAMikB,IAAK,IAAIzK,GAChB,IACI,GAAIyK,EAAE1O,MAAQ0O,EAAE1O,KAAKpa,YAAa,CAC9B,MAAMgG,EAAIqY,EAAKhW,QAAQygB,GACnB9iB,GAAK,GACLqY,EAAK9W,OAAOvB,EAAG,GACnB,QACJ,CACA,KAAK8iB,EAAE/b,QAAU+b,EAAE/b,OAAOmN,MACtB4O,EAAE3O,IAAID,GACF4O,EAAE9T,MAAM,CACR,MAAMxL,EAAM6U,EAAKhW,QAAQygB,GACrBtf,GAAO,GACP6U,EAAK9W,OAAOiC,EAAK,EACzB,CAER,CACA,MAAQ,CAGpB,CACAiY,EAAMA,EAAI3V,aACd,GAEEid,EAAgB,CAAC,UAAW,SAC5BC,EAAe,CAAC,QAAS,QAAS,UACxC,IAAK,MAAMnP,KAAMkP,EACbjH,EAAKtd,iBAAiBqV,EAAIvV,EAAS,GACvC,IAAK,MAAMuV,KAAMmP,EACblH,EAAKtd,iBAAiBqV,EAAIvV,EAAS,GACvCpF,KAAKilB,GAAsB,CAC/B,CACA,EAAAlK,CAAmBza,EAAS6E,EAAO4kB,GAC/B,IAAIjc,EAAM9N,KAAKglB,GAAW1iB,IAAIhC,GACzBwN,IACDA,EAAM,IAAI5K,IACVlD,KAAKglB,GAAWxiB,IAAIlC,EAASwN,IAEjC,IAAIqR,EAAOrR,EAAIxL,IAAI6C,GAMnB,OALKga,IACDA,EAAO,GACPrR,EAAItL,IAAI2C,EAAOga,IAEnBA,EAAK5c,KAAKwnB,GACH,KACH,IACI,MAAMra,EAAI1P,KAAKglB,GAAW1iB,IAAIhC,GACxB0pB,EAAIta,GAAGpN,IAAI6C,GACjB,IAAK6kB,EACD,OACJ,MAAM1f,EAAM0f,EAAE7gB,QAAQ4gB,GAClBzf,GAAO,GACP0f,EAAE3hB,OAAOiC,EAAK,EACtB,CACA,MAAQ,EAEhB,EAo2DR,CAr5EuB,GAs5EvB,GAAsB,oBAAX6T,OAAwB,CAC/B,MAAMmB,EAAInB,OACVmB,EAAE2K,MAAQjsB,EACVshB,EAAE4K,OAASlsB,CACf","ignoreList":[]}