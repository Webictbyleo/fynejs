{"version":3,"file":"x-tool.min.js","names":["ARRAY_ISARRAY","Array","isArray","WkMap","WeakMap","quMct","queueMicrotask","XToolFramework","_Afrom","from","_AisArr","_Okeys","Object","keys","_logErr","STR_STYLE","STR_DISPLAY","STR_NONE","STR_TAGNAME","STR_TEMPLATE","STR_LENGTH","XTOOL_ENABLE_STATIC_DIRECTIVES","d","document","STR_CONTENTS","EV_DELEGATED","head","getElementById","style","createElement","id","textContent","appendChild","PFX","attrName","name","ReactiveComponent","attachToParent","parent","this","_parent","_addChild","_id","framework","_framework","element","_element","el","isBound","_isBound","v","isMounted","_isMounted","isDestroyed","_isDestroyed","_cancelUserResources","fn","_userResourceCleanups","delete","setFrozen","on","_isFrozen","_isSealed","_setSealed","_addDirective","directive","existing","_directives","get","push","set","constructor","def","_propUpdateActive","_runningPropEffect","_beforeMountCalled","_children","_computed","_propEffects","_computedCache","Map","_computedDeps","_inverseComputedDeps","_isInComputedEvaluation","_isInMethodExecution","_allEffects","Set","_hasComputed","_cleanupFunctions","_currentInvoker","_lastTimeoutByInvoker","_lastIntervalByInvoker","_lastRafByInvoker","_lastObserverByInvoker","mutation","resize","intersection","_eventListeners","_loopScopes","_expressionCache","_propertyDependencies","_activeEffect","_renderScheduled","_nextTickQueue","_initialClassSets","_propParent","_callLifecycleHook","hookName","hook","_lifecycle","_safeExecute","_runWithGlobalInterception","_addCleanupFunction","wrapper","add","_addEventListenerWithCleanup","event","handler","options","addEventListener","_originalMethods","methods","computed","propEffects","length","mounted","unmounted","destroyed","updated","beforeMount","beforeUnmount","beforeDestroy","_data","_createReactiveData","data","_methods","_bindMethods","callBeforeMount","_onDataChange","_property","clear","effectsToRun","directDeps","i","effect","_scheduleRender","boundMethods","methodName","originalMethod","args","prev","prevInv","_getComputedValue","key","_trackDependency","has","computeFn","dep","value","call","_createMethodContext","propKey","deps","includes","requestAnimationFrame","_render","q","splice","fallback","error","console","bindToElement","completeBinding","getContext","includeComputed","_applyAsyncTemplateResolved","_parseDirectives","_getComponentByElement","_registerElement","child","_removeChild","index","indexOf","src","String","test","body","trim","Function","undefined","_createContextProxy","apply","destroy","self","directives","type","customDirective","unbind","removeEventListener","cleanup","_propEffect","values","idx","_unregisterElement","_deepReactiveCache","_unregisterComponent","_initReactiveProps","expr","evalFn","update","obj","ctx","$props","k","processElement","isRoot","hasAttribute","isComponentTag","hasTextOrHtml","forAttr","a","attributes","n","startsWith","_bindDirective","attr","_bindTextInterpolationsIn","_walkElements","nodes","childNodes","node","nodeType","Node","TEXT_NODE","textNode","raw","nodeValue","__x_tool_ti","parentTag","parentElement","tagName","toLowerCase","inCode","segs","open","literal","slice","bs","p","charCodeAt","prefixEnd","repeat","close","hasExpr","some","s","hasEscaped","evaluators","filter","map","_createElementEvaluator","exprIndex","out","val","dirInfo","expression","_createEffect","processor","firstElementChild","next","nextElementSibling","directiveName","isShortBind","removeAttribute","_bindAttributeDirective","_bindSimpleDirective","_bindModelDirective","_bindIfDirective","_bindForDirective","prefix","rest","split","suffix","mods","modifiers","reduce","acc","m","_getCustomDirective","_bindCustomDirective","_bindEventDirective","updateFn","directiveRef","_static","found","evaluator","originalDisplay","_prevShown","innerHTML","property","isCheckbox","isNumeric","isMultiSelect","multiple","Reflect","defineProperty","configurable","enumerable","writable","getValueEvaluator","setValueEvaluator","_createEvaluator","checkboxValue","loopScope","_collectLoopScope","inferCheckboxValue","member","checked","sel","arr","opt","selected","setInputValue","t","parseFloat","getInputValue","currentVal","forEach","$value","placeholder","createComment","parentNode","insertBefore","__x_if_anchorParent","branches","makeActualElement","content","cloneNode","isTemplate","first","firstEval","__x_tool_bound","originalNodes","sib","isElse","isElseIf","getAttribute","branch","active","orig","removeChild","mountBranch","b","__x_if_current","nextSibling","cb","unmountBranch","eventName","trimmed","arrow","_extractArrowFunction","opts","once","passive","capture","onlySelf","shouldPrevent","prevent","shouldStop","stop","isOutside","outside","deferExec","defer","keyAliasMap","enter","esc","escape","space","tab","backspace","del","arrowup","arrowdown","arrowleft","arrowright","home","end","pageup","pagedown","comboRequirements","ctrl","alt","shift","meta","buttonMap","left","middle","right","touchSingle","single","touchMulti","multi","modifierKeys","allowedKeys","aliases","allowedButtons","btn","needKeyCheck","needButtonCheck","needTouchCheck","passesFilters","path","composedPath","tgt","target","contains","TouchEvent","tCount","touches","MouseEvent","button","KeyboardEvent","ctrlKey","altKey","shiftKey","metaKey","runExpr","thisCtx","compiledArrow","_compileArrowForEvent","paramsList","isBlock","mapArgs","_","isStatement","executor","result","createEventHandler","preventDefault","stopPropagation","ev","canDelegate","_getConfig","delegate","remover","_registerDelegated","e","run","comp","ownerDocument","compiled","match","params","Boolean","endsWith","_wrapData","parentKey","getPrototypeOf","prototype","proxy","Proxy","receiver","Symbol","iterator","Error","beforeLen","beforeFirst","beforeLast","ownKeys","had","oldValue","deleteProperty","ok","pc","eff","_includeComputed","specials","$log","$destroy","$forceUpdate","$addCleanupFunction","$nextTick","Promise","resolve","$el","$id","$isMounted","$isDestroyed","$isSealed","$isFrozen","$parent","$children","$seal","$mutate","prevMethod","propStr","_target","targetElement","component","mergedScope","scopeKeys","gWindow","window","gDocument","cfg","sandbox","sandboxExpressions","allow","allowGlobals","_lastListenerByTarget","wrapTarget","handlerMap","makeKey","JSON","stringify","prop","_receiver","inv","eKey","invMap","evMap","rem","size","invKey","rec","res","querySelector","list","querySelectorAll","doc","w","defaultView","bind","_timeoutRemovers","_intervalRemovers","_rafRemovers","wrapObserverCtor","Orig","kind","Wrapped","observe","disconnect","unobserve","inst","store","$target","$event","setTimeout","ms","clearTimeout","r","setInterval","clearInterval","cancelAnimationFrame","MutationObserver","ResizeObserver","IntersectionObserver","_t","_name","directiveInfo","attributeName","baseSet","oc","className","cls","elAny","propName","camel","replace","c","toUpperCase","isBooleanProp","hasNonFunctionProp","isKnownBooleanAttr","_BA","base","join","tokens","tk","classList","toggle","cssText","assign","boolVal","setAttribute","normalized","parts","cur","anchorParent","merged","scope","_updateElementDirectives","root","Element","itemVar","indexVar","listCode","templateToClone","contextAnchor","listEval","instances","createScope","item","idxOrKey","dir","norm","keysArr","pop","minLen","Math","min","frag","createDocumentFragment","start","clone","ref","dr","itemscope","formnovalidate","novalidate","default","_components","_byEl","_pending","_config","_customDirectives","_namedComponentDefs","_delegated","_delegatedRootBound","registerComponent","definition","_getRegisteredComponentDef","init","config","container","debug","staticDirectives","_hpf","readyState","_applyPrefixInitialCSS","_autoDiscoverComponents","_ensureRootObserver","_ensureDelegation","createComponent","_generateComponentId","componentElements","_bindElementAsComponent","reusable","_instantiateNamedComponent","_processPending","components","lastComponent","maybe","parentForEval","dataExpression","parentCtx","_parseDataExpression","initExpr","existingMounted","isConnected","Date","now","random","toString","substring","componentId","_log","_rootObserver","records","addedNodes","removedNodes","stack","_onComponentSourceChanged","ro","childList","subtree","attributeFilter","source","parentComp","par","props","dynamicPropObj","rawPropExpression","propExpr","initDef","baseData","makeData","compDef","originalChildren","firstChild","template","applyTemplate","tpl","slots","slotEl","matched","replaceChild","tplVal","then","html","nested","cancelBubble","h","captureEvents","bubbleEvents","entry","l","XTool","FyneJS"],"sourceRoot":"./dist","sources":["dist/x-tool.js"],"sourcesContent":["\"use strict\";\nconst ARRAY_ISARRAY = Array.isArray;\nconst WkMap = WeakMap;\nconst quMct = queueMicrotask;\nconst FT_C = true;\nconst FT_TI = typeof __FEAT_TEXT_INTERP__ === 'boolean' ? __FEAT_TEXT_INTERP__ : true;\nconst _FT_DR = typeof __FEAT_DEEP_REACTIVE__ === 'boolean' ? __FEAT_DEEP_REACTIVE__ : true;\nconst FT_IFB = typeof __FEAT_IF_BRANCHES__ === 'boolean' ? __FEAT_IF_BRANCHES__ : true;\nconst XToolFramework = function () {\n    const _Afrom = Array.from;\n    const _AisArr = ARRAY_ISARRAY;\n    const _Okeys = Object.keys;\n    const _logErr = (..._args) => { };\n    const STR_STYLE = 'style';\n    const STR_DISPLAY = 'display';\n    const STR_NONE = 'none';\n    const STR_TAGNAME = 'tagName';\n    const STR_TEMPLATE = 'TEMPLATE';\n    const STR_LENGTH = 'length';\n    let XTOOL_ENABLE_STATIC_DIRECTIVES = true;\n    const d = (typeof document !== 'undefined' ? document : null);\n    const STR_CONTENTS = 'contents';\n    const EV_CLICK = 'click', EV_INPUT = 'input', EV_CHANGE = 'change', EV_KEYDOWN = 'keydown', EV_KEYUP = 'keyup';\n    const EV_DELEGATED = [EV_CLICK, EV_INPUT, EV_CHANGE, EV_KEYDOWN, EV_KEYUP];\n    try {\n        if (d && d.head && !d.getElementById('x-tool-initial-css')) {\n            const style = d.createElement(STR_STYLE);\n            style.id = 'x-tool-initial-css';\n            style.textContent = '[x-show],[x-if],[x-else],[x-else-if],[x\\\\:show],[x\\\\:if],[x\\\\:else],[x\\\\:else-if]{display:none;}';\n            d.head.appendChild(style);\n        }\n    }\n    catch { }\n    let PFX = 'x';\n    const attrName = (name) => `${PFX}-${name}`;\n    class XToolFramework {\n        constructor() {\n            this._components = new Map();\n            this._byEl = new WkMap();\n            this._pending = [];\n            this._config = {};\n            this._customDirectives = new Map();\n            this._namedComponentDefs = new Map();\n            this._delegated = new WkMap();\n            this._delegatedRootBound = false;\n            this.directive = (name, directive) => {\n                if (name.startsWith(PFX + '-')) {\n                    throw new Error(`Custom directive names should not start with \"${PFX}-\". Use: XTool.directive(\"my-directive\", ...)`);\n                }\n                this._customDirectives.set(name, directive);\n                return this;\n            };\n            this.registerComponent = (definition) => {\n                if (!definition || !definition.name)\n                    throw new Error('registerComponent requires a name');\n                const name = definition.name.toLowerCase();\n                if (this._namedComponentDefs.has(name))\n                    throw new Error(`Component name \"${name}\" already registered`);\n                this._namedComponentDefs.set(name, definition);\n                return this;\n            };\n            this._getRegisteredComponentDef = (name) => this._namedComponentDefs.get(name.toLowerCase());\n            this._getCustomDirective = (name) => this._customDirectives.get(name);\n            this._getConfig = () => this._config;\n            this.init = (config = {}) => {\n                this._config = { container: 'body', debug: false, staticDirectives: true, ...config };\n                if (typeof this._config.staticDirectives === 'boolean') {\n                    XTOOL_ENABLE_STATIC_DIRECTIVES = this._config.staticDirectives;\n                }\n                const _hpf = this._config.prefix;\n                if (_hpf && typeof _hpf === 'string' && _hpf[STR_LENGTH] > 0) {\n                    PFX = _hpf;\n                }\n                else {\n                    PFX = 'x';\n                }\n                if (d && d.readyState === 'loading') {\n                    d.addEventListener('DOMContentLoaded', () => { this._applyPrefixInitialCSS(); this._autoDiscoverComponents(); const c = d?.querySelector(this._config.container); if (c) {\n                        this._ensureRootObserver(c);\n                        if (this._config.delegate)\n                            this._ensureDelegation(c);\n                    } });\n                }\n                else if (!d || d.readyState === 'complete' || d.readyState === 'interactive') {\n                    this._applyPrefixInitialCSS();\n                    this._autoDiscoverComponents();\n                    const c = d?.querySelector(this._config.container);\n                    if (c) {\n                        this._ensureRootObserver(c);\n                        if (this._config.delegate)\n                            this._ensureDelegation(c);\n                    }\n                }\n                return this;\n            };\n            this.createComponent = (definition) => {\n                const component = new ReactiveComponent(this._generateComponentId(), definition, this);\n                this._components.set(component.id, component);\n                component.callBeforeMount();\n                return component;\n            };\n            this._autoDiscoverComponents = () => {\n                const container = d?.querySelector(this._config.container);\n                if (!container)\n                    return;\n                const componentElements = container.querySelectorAll(`[${attrName('data')}]`);\n                for (const element of componentElements) {\n                    if (!this._getComponentByElement(element))\n                        this._bindElementAsComponent(element);\n                }\n                const reusable = container.querySelectorAll('component[source]');\n                for (const el of reusable) {\n                    if (!this._getComponentByElement(el))\n                        this._instantiateNamedComponent(el);\n                }\n                this._processPending();\n                if (componentElements[STR_LENGTH] === 0 && !this._getComponentByElement(container)) {\n                    const components = _Afrom(this._components.values());\n                    const lastComponent = components[components[STR_LENGTH] - 1];\n                    if (lastComponent && !lastComponent.isBound) {\n                        lastComponent.bindToElement(container);\n                    }\n                }\n            };\n            this._processPending = () => {\n                if (!this._pending[STR_LENGTH])\n                    return;\n                for (const p of this._pending) {\n                    let cur = p.el.parentElement;\n                    let parent;\n                    while (cur && !parent) {\n                        const maybe = this._getComponentByElement(cur);\n                        if (maybe)\n                            parent = maybe;\n                        else\n                            cur = cur.parentElement;\n                    }\n                    if (parent) {\n                        p.comp.attachToParent(parent);\n                    }\n                }\n                for (const p of this._pending)\n                    p.comp.completeBinding();\n                this._pending = [];\n            };\n            this._bindElementAsComponent = (element, parentForEval) => {\n                const dataExpression = element.getAttribute(attrName('data'));\n                let data = {};\n                if (dataExpression) {\n                    element.removeAttribute(attrName('data'));\n                    try {\n                        if (parentForEval) {\n                            let parentCtx = {};\n                            try {\n                                parentCtx = parentForEval._createMethodContext?.() || {};\n                            }\n                            catch {\n                                parentCtx = {};\n                            }\n                            const evalFn = new Function('parent', `with(parent){ return (${dataExpression}) }`);\n                            data = evalFn(parentCtx);\n                        }\n                        else {\n                            data = this._parseDataExpression(dataExpression);\n                        }\n                        if (data.methods) {\n                            data = { methods: data.methods, data: { ...data } };\n                        }\n                        else {\n                            data = { data: { ...data } };\n                        }\n                        if (parentForEval) {\n                            data.data.$parent = parentForEval;\n                        }\n                    }\n                    catch (e) {\n                    }\n                }\n                const comp = this.createComponent(data);\n                comp.element = element;\n                comp.callBeforeMount();\n                this._registerElement(comp.element, comp);\n                this._pending.push({ el: element, comp });\n                const initExpr = element.getAttribute(attrName('init'));\n                if (initExpr) {\n                    element.removeAttribute(attrName('init'));\n                    const existingMounted = comp._lifecycle?.mounted;\n                    comp._lifecycle.mounted = function () {\n                        if (existingMounted) {\n                            try {\n                                existingMounted.call(this);\n                            }\n                            catch { }\n                        }\n                        const evaluator = new Function('ctx', 'with(ctx){' + initExpr + '} ');\n                        quMct(() => {\n                            if (comp.isDestroyed || !comp.element || !comp.element.isConnected)\n                                return;\n                            try {\n                                const ctx = comp._createMethodContext?.() || comp.getContext?.() || {};\n                                const result = evaluator(ctx);\n                                if (typeof result === 'function') {\n                                    try {\n                                        result();\n                                    }\n                                    catch { }\n                                }\n                            }\n                            catch { }\n                        });\n                    };\n                }\n            };\n            this._generateComponentId = () => 'component_' + Date.now() + '_' + Math.random().toString(36).substring(2, 9);\n            this._parseDataExpression = (expression) => {\n                try {\n                    return new Function('return ' + expression.trim())();\n                }\n                catch {\n                    return {};\n                }\n            };\n            this._unregisterComponent = (componentId) => { this._components.delete(componentId); };\n            this._log = (..._args) => { };\n            this._registerElement = (element, component) => {\n                this._byEl.set(element, component);\n            };\n            this._unregisterElement = (element) => { try {\n                this._byEl.delete(element);\n            }\n            catch { } };\n        }\n        _applyPrefixInitialCSS() {\n            if (!d)\n                return;\n            if (PFX === 'x')\n                return;\n            const id = `x-tool-initial-css-${PFX}`;\n            if (d.head && !d.getElementById(id)) {\n                const style = d.createElement(STR_STYLE);\n                style.id = id;\n                style.textContent = `[${PFX}-show],[${PFX}-if],[${PFX}-else],[${PFX}-else-if],[${PFX}\\\\:show],[${PFX}\\\\:if],[${PFX}\\\\:else],[${PFX}\\\\:else-if]{display:none;}`;\n                d.head.appendChild(style);\n            }\n        }\n        _ensureRootObserver(container) {\n            if (this._rootObserver || typeof MutationObserver === 'undefined')\n                return;\n            this._rootObserver = new MutationObserver(records => {\n                for (const r of records) {\n                    if (r.type === 'childList') {\n                        for (let i = 0; i < r.addedNodes.length; i++) {\n                            const n = r.addedNodes[i];\n                            if (n.nodeType !== 1)\n                                continue;\n                            const el = n;\n                            if (el[STR_TAGNAME] === 'COMPONENT') {\n                                const src = el.getAttribute('source');\n                                if (src && !this._getComponentByElement(el))\n                                    this._instantiateNamedComponent(el);\n                            }\n                        }\n                        for (let i = 0; i < r.removedNodes.length; i++) {\n                            const n = r.removedNodes[i];\n                            if (n.nodeType !== 1)\n                                continue;\n                            const el = n;\n                            quMct(() => {\n                                if (el.isConnected)\n                                    return;\n                                const stack = [el];\n                                while (stack.length) {\n                                    const cur = stack.pop();\n                                    const comp = this._getComponentByElement(cur);\n                                    if (comp && !comp.isDestroyed) {\n                                        try {\n                                            comp.destroy();\n                                        }\n                                        catch { }\n                                    }\n                                    let child = cur.firstElementChild;\n                                    while (child) {\n                                        stack.push(child);\n                                        child = child.nextElementSibling;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else if (r.type === 'attributes') {\n                        const target = r.target;\n                        if (target && target[STR_TAGNAME] === 'COMPONENT') {\n                            if (r.attributeName === 'source') {\n                                this._onComponentSourceChanged(target);\n                            }\n                            else if (r.attributeName === 'readonly') {\n                                const comp = this._getComponentByElement(target);\n                                if (comp) {\n                                    try {\n                                        const ro = target.hasAttribute('readonly');\n                                        comp.setFrozen(!!ro);\n                                    }\n                                    catch { }\n                                }\n                            }\n                        }\n                    }\n                }\n                this._processPending();\n            });\n            this._rootObserver.observe(container, { childList: true, subtree: true, attributes: true, attributeFilter: ['source', 'readonly'] });\n        }\n        _onComponentSourceChanged(el) {\n            const src = (el.getAttribute('source') || '').trim();\n            const existing = this._getComponentByElement(el);\n            if (!src) {\n                if (existing && !existing.isDestroyed) {\n                    try {\n                        existing.destroy();\n                    }\n                    catch { }\n                }\n                el.innerHTML = '';\n                return;\n            }\n            if (existing && !existing.isDestroyed) {\n                try {\n                    existing.destroy();\n                }\n                catch { }\n            }\n            el.innerHTML = '';\n            this._instantiateNamedComponent(el);\n        }\n        _instantiateNamedComponent(el) {\n            const source = el.getAttribute('source');\n            if (!source)\n                return;\n            const def = this._getRegisteredComponentDef(source);\n            if (!def) {\n                return;\n            }\n            let parentComp;\n            let par = el.parentElement;\n            while (par && !parentComp) {\n                const maybe = this._getComponentByElement(par);\n                if (maybe)\n                    parentComp = maybe;\n                else\n                    par = par.parentElement;\n            }\n            let props = null;\n            let dynamicPropObj = null;\n            let rawPropExpression = null;\n            if (!props)\n                props = {};\n            const propExpr = el.getAttribute(attrName('prop'));\n            if (propExpr) {\n                rawPropExpression = propExpr;\n                if (parentComp) {\n                    try {\n                        const fn = new Function('ctx', 'with(ctx){return (' + propExpr + ')}');\n                        const ctx = parentComp.getContext(true);\n                        dynamicPropObj = fn(ctx);\n                    }\n                    catch {\n                        dynamicPropObj = null;\n                    }\n                }\n                else {\n                    try {\n                        dynamicPropObj = new Function('return (' + propExpr + ')')();\n                    }\n                    catch {\n                        dynamicPropObj = null;\n                    }\n                }\n                if (dynamicPropObj && typeof dynamicPropObj === 'object')\n                    for (const k in dynamicPropObj)\n                        if (!(k in props))\n                            props[k] = String(dynamicPropObj[k]);\n                el.removeAttribute(attrName('prop'));\n            }\n            let baseData = {};\n            if (def.makeData) {\n                try {\n                    baseData = def.makeData(props) || {};\n                }\n                catch {\n                    baseData = {};\n                }\n            }\n            if (def.data) {\n                for (const k in def.data) {\n                    baseData[k] = def.data[k];\n                }\n            }\n            for (const k in props) {\n                if (!(k in baseData))\n                    baseData[k] = props[k];\n            }\n            baseData.$props = props;\n            let initDef;\n            if (typeof def.init === 'function') {\n                try {\n                    const maybe = def.init(props);\n                    initDef = (maybe && typeof maybe === 'object') ? maybe : undefined;\n                }\n                catch {\n                    initDef = undefined;\n                }\n            }\n            const compDef = {\n                data: baseData,\n                methods: { ...(def.methods || {}), ...(initDef?.methods || {}) },\n                computed: { ...(def.computed || {}), ...(initDef?.computed || {}) },\n                propEffects: { ...(def.propEffects || {}), ...(initDef?.propEffects || {}) },\n                mounted: initDef?.mounted || def.mounted,\n                unmounted: initDef?.unmounted || def.unmounted,\n                beforeMount: initDef?.beforeMount || def.beforeMount,\n                beforeUnmount: initDef?.beforeUnmount || def.beforeUnmount,\n                updated: initDef?.updated || def.updated,\n                destroyed: initDef?.destroyed || def.destroyed,\n                beforeDestroy: initDef?.beforeDestroy || def.beforeDestroy\n            };\n            const comp = this.createComponent(compDef);\n            comp.element = el;\n            const originalChildren = [];\n            while (el.firstChild) {\n                const n = el.firstChild;\n                originalChildren.push(n);\n                el.removeChild(n);\n            }\n            if (def.template) {\n                const applyTemplate = (tpl) => {\n                    el.innerHTML = tpl;\n                    const slots = el.querySelectorAll('slot');\n                    if (slots.length) {\n                        for (const slotEl of slots) {\n                            const name = slotEl.getAttribute('name');\n                            let matched = [];\n                            if (name) {\n                                matched = originalChildren.filter(n => n.nodeType === 1 && n.getAttribute('slot') === name);\n                            }\n                            else {\n                                matched = originalChildren.filter(n => n.nodeType !== 1 || !n.hasAttribute('slot'));\n                            }\n                            if (matched.length) {\n                                const frag = d.createDocumentFragment();\n                                for (const n of matched)\n                                    frag.appendChild(n);\n                                slotEl.parentNode?.replaceChild(frag, slotEl);\n                            }\n                        }\n                    }\n                };\n                const tplVal = def.template;\n                if (typeof tplVal === 'string') {\n                    applyTemplate(tplVal);\n                }\n                else if (typeof tplVal === 'function') {\n                    try {\n                        const res = tplVal();\n                        if (res && typeof res.then === 'function') {\n                            el.innerHTML = '';\n                            res.then(html => { applyTemplate(html || ''); try {\n                                comp._applyAsyncTemplateResolved();\n                            }\n                            catch { } });\n                        }\n                        else {\n                            applyTemplate(String(res || ''));\n                        }\n                    }\n                    catch {\n                        el.innerHTML = '';\n                    }\n                }\n                else if (tplVal && typeof tplVal.then === 'function') {\n                    el.innerHTML = '';\n                    tplVal.then(html => { applyTemplate(html || ''); try {\n                        comp._applyAsyncTemplateResolved();\n                    }\n                    catch { } });\n                }\n            }\n            else {\n                for (const n of originalChildren)\n                    el.appendChild(n);\n            }\n            this._registerElement(el, comp);\n            try {\n                const nested = el.querySelectorAll(`[${attrName('data')}]`);\n                for (const node of nested) {\n                    if (!this._getComponentByElement(node))\n                        this._bindElementAsComponent(node, comp);\n                }\n            }\n            catch { }\n            this._pending.push({ el, comp });\n            if (rawPropExpression && parentComp) {\n                try {\n                    comp._initReactiveProps(rawPropExpression, parentComp);\n                }\n                catch { }\n            }\n            this._processPending();\n        }\n        _getComponentByElement(element) { return this._byEl.get(element); }\n        observe(_element) { }\n        _ensureDelegation(container) {\n            if (this._delegatedRootBound)\n                return;\n            const root = container;\n            const handler = (e) => {\n                let cur = e.target;\n                while (cur && cur !== root.parentElement) {\n                    if (e.cancelBubble)\n                        break;\n                    const map = this._delegated.get(cur);\n                    if (map) {\n                        const list = map.get(e.type);\n                        if (list && list.length) {\n                            for (const h of [...list]) {\n                                try {\n                                    if (h.comp && h.comp.isDestroyed) {\n                                        const i = list.indexOf(h);\n                                        if (i > -1)\n                                            list.splice(i, 1);\n                                        continue;\n                                    }\n                                    if (!h.filter || h.filter(e)) {\n                                        h.run(e);\n                                        if (h.once) {\n                                            const idx = list.indexOf(h);\n                                            if (idx > -1)\n                                                list.splice(idx, 1);\n                                        }\n                                    }\n                                }\n                                catch { }\n                            }\n                        }\n                    }\n                    cur = cur.parentElement;\n                }\n            };\n            const captureEvents = ['keydown', 'keyup'];\n            const bubbleEvents = ['click', 'input', 'change'];\n            for (const ev of captureEvents)\n                root.addEventListener(ev, handler, true);\n            for (const ev of bubbleEvents)\n                root.addEventListener(ev, handler, false);\n            this._delegatedRootBound = true;\n        }\n        _registerDelegated(element, event, entry) {\n            let map = this._delegated.get(element);\n            if (!map) {\n                map = new Map();\n                this._delegated.set(element, map);\n            }\n            let list = map.get(event);\n            if (!list) {\n                list = [];\n                map.set(event, list);\n            }\n            list.push(entry);\n            return () => {\n                try {\n                    const m = this._delegated.get(element);\n                    const l = m?.get(event);\n                    if (!l)\n                        return;\n                    const idx = l.indexOf(entry);\n                    if (idx > -1)\n                        l.splice(idx, 1);\n                }\n                catch { }\n            };\n        }\n    }\n    class ReactiveComponent {\n        attachToParent(parent) {\n            this._parent = parent;\n            parent._addChild(this);\n        }\n        get id() { return this._id; }\n        get framework() { return this._framework; }\n        get element() { return this._element; }\n        set element(el) { this._element = el; }\n        get isBound() { return this._isBound; }\n        set isBound(v) { this._isBound = v; }\n        get isMounted() { return this._isMounted; }\n        set isMounted(v) { this._isMounted = v; }\n        get isDestroyed() { return this._isDestroyed; }\n        set isDestroyed(v) { this._isDestroyed = v; }\n        _cancelUserResources() {\n            for (const fn of Array.from(this._userResourceCleanups)) {\n                try {\n                    fn();\n                }\n                catch { }\n                this._userResourceCleanups.delete(fn);\n            }\n        }\n        setFrozen(on) {\n            if (on === this._isFrozen)\n                return;\n            this._isFrozen = on;\n            if (on) {\n                this._isSealed = true;\n                this._cancelUserResources();\n            }\n            else {\n            }\n        }\n        _setSealed(on) {\n            if (on === this._isSealed)\n                return;\n            this._isSealed = on;\n            if (on) {\n                this._cancelUserResources();\n            }\n        }\n        _addDirective(element, directive) {\n            const existing = this._directives.get(element) || [];\n            existing.push(directive);\n            this._directives.set(element, existing);\n        }\n        constructor(id, def, framework) {\n            this._propUpdateActive = false;\n            this._runningPropEffect = false;\n            this._element = null;\n            this._isBound = false;\n            this._isMounted = false;\n            this._isDestroyed = false;\n            this._beforeMountCalled = false;\n            this._children = [];\n            this._parent = null;\n            this._computed = {};\n            this._propEffects = {};\n            this._computedCache = new Map();\n            this._computedDeps = new Map();\n            this._inverseComputedDeps = new Map();\n            this._isInComputedEvaluation = false;\n            this._isInMethodExecution = false;\n            this._allEffects = new Set();\n            this._hasComputed = false;\n            this._directives = new Map();\n            this._cleanupFunctions = new Set();\n            this._isSealed = false;\n            this._isFrozen = false;\n            this._userResourceCleanups = new Set();\n            this._currentInvoker = null;\n            this._lastTimeoutByInvoker = new Map();\n            this._lastIntervalByInvoker = new Map();\n            this._lastRafByInvoker = new Map();\n            this._lastObserverByInvoker = {\n                mutation: new Map(),\n                resize: new Map(),\n                intersection: new Map()\n            };\n            this._eventListeners = [];\n            this._loopScopes = new WkMap();\n            this._expressionCache = new Map();\n            this._propertyDependencies = new Map();\n            this._activeEffect = null;\n            this._renderScheduled = false;\n            this._nextTickQueue = [];\n            this._initialClassSets = new WkMap();\n            this._propParent = null;\n            this._callLifecycleHook = (hookName) => {\n                const hook = this._lifecycle[hookName];\n                if (typeof hook === 'function') {\n                    this._safeExecute(() => this._runWithGlobalInterception(hook, []));\n                }\n            };\n            this._addCleanupFunction = (fn) => {\n                if (typeof fn !== 'function')\n                    return undefined;\n                const wrapper = () => {\n                    try {\n                        fn();\n                    }\n                    catch {\n                        _logErr();\n                    }\n                    try {\n                        this._cleanupFunctions.delete(wrapper);\n                    }\n                    catch { }\n                };\n                this._cleanupFunctions.add(wrapper);\n                return () => { try {\n                    this._cleanupFunctions.delete(wrapper);\n                }\n                catch { } };\n            };\n            this._addEventListenerWithCleanup = (element, event, handler, options) => {\n                element.addEventListener(event, handler, options);\n                this._eventListeners.push({ element, event, handler, options });\n            };\n            this._id = id;\n            this._framework = framework;\n            this._originalMethods = def.methods || {};\n            this._computed = def.computed || {};\n            this._propEffects = def.propEffects || {};\n            this._hasComputed = !!(def.computed && Object.keys(def.computed).length);\n            this._lifecycle = {\n                mounted: def.mounted,\n                unmounted: def.unmounted || def.destroyed,\n                updated: def.updated,\n                beforeMount: def.beforeMount,\n                beforeUnmount: def.beforeUnmount || def.beforeDestroy\n            };\n            this._data = this._createReactiveData(def.data || {});\n            this._methods = this._bindMethods();\n        }\n        callBeforeMount() {\n            if (!this._beforeMountCalled) {\n                this._callLifecycleHook('beforeMount');\n                this._beforeMountCalled = true;\n            }\n        }\n        _onDataChange(_property) {\n            if (this.isBound) {\n                if (FT_C)\n                    this._computedCache.clear();\n                const effectsToRun = new Set();\n                const directDeps = this._propertyDependencies.get(_property);\n                if (directDeps)\n                    for (let i = 0; i < directDeps.length; i++)\n                        effectsToRun.add(directDeps[i]);\n                for (const effect of effectsToRun)\n                    this._safeExecute(effect);\n                if (this._hasComputed || !XTOOL_ENABLE_STATIC_DIRECTIVES) {\n                    this._scheduleRender();\n                }\n                this._callLifecycleHook('updated');\n            }\n        }\n        _bindMethods() {\n            const boundMethods = {};\n            for (const methodName in this._originalMethods) {\n                const originalMethod = this._originalMethods[methodName];\n                boundMethods[methodName] = (...args) => {\n                    const prev = this._isInMethodExecution;\n                    const prevInv = this._currentInvoker;\n                    this._isInMethodExecution = true;\n                    this._currentInvoker = methodName;\n                    try {\n                        return this._safeExecute(() => this._runWithGlobalInterception(originalMethod, args));\n                    }\n                    finally {\n                        this._isInMethodExecution = prev;\n                        this._currentInvoker = prevInv;\n                    }\n                };\n            }\n            return boundMethods;\n        }\n        _getComputedValue(key) {\n            if (!FT_C)\n                return undefined;\n            this._trackDependency(key);\n            if (this._computedCache.has(key))\n                return this._computedCache.get(key);\n            try {\n                const computeFn = this._computed[key];\n                this._isInComputedEvaluation = true;\n                const prev = this._computedDeps.get(key);\n                if (prev) {\n                    for (const dep of prev) {\n                        const set = this._inverseComputedDeps.get(dep);\n                        if (set)\n                            set.delete(key);\n                    }\n                }\n                this._computedDeps.set(key, new Set());\n                const value = computeFn.call(this._createMethodContext());\n                this._isInComputedEvaluation = false;\n                this._computedCache.set(key, value);\n                return value;\n            }\n            catch {\n                this._isInComputedEvaluation = false;\n                return undefined;\n            }\n        }\n        _trackDependency(propKey) {\n            if (!this._activeEffect)\n                return;\n            let deps = this._propertyDependencies.get(propKey);\n            if (!deps) {\n                deps = [];\n                this._propertyDependencies.set(propKey, deps);\n            }\n            if (!deps.includes(this._activeEffect))\n                deps.push(this._activeEffect);\n        }\n        _scheduleRender() {\n            if (this._isSealed || this._isFrozen)\n                return;\n            if (this._renderScheduled)\n                return;\n            this._renderScheduled = true;\n            requestAnimationFrame(() => {\n                this._renderScheduled = false;\n                this._render();\n                if (this._nextTickQueue && this._nextTickQueue.length) {\n                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                    for (const fn of q) {\n                        try {\n                            fn();\n                        }\n                        catch { }\n                    }\n                }\n            });\n        }\n        _safeExecute(fn, fallback) {\n            try {\n                return fn();\n            }\n            catch (error) {\n                console.error(error);\n                return fallback;\n            }\n        }\n        bindToElement(element) {\n            if (this._isBound)\n                return;\n            this._element = element;\n            if (!this._beforeMountCalled) {\n                this.callBeforeMount();\n            }\n            this.completeBinding();\n        }\n        getContext(includeComputed = true) {\n            return this._createMethodContext(includeComputed);\n        }\n        _applyAsyncTemplateResolved() {\n            if (!this._element)\n                return;\n            try {\n                this._parseDirectives(this._element);\n            }\n            catch { }\n            this._scheduleRender();\n        }\n        completeBinding() {\n            if (this._isBound || !this._element)\n                return;\n            if (!this._framework._getComponentByElement(this._element))\n                this._framework._registerElement(this._element, this);\n            this._isBound = true;\n            this._isMounted = true;\n            this._parseDirectives(this._element);\n            this._render();\n            this._callLifecycleHook('mounted');\n        }\n        _addChild(child) {\n            if (!this._children.includes(child)) {\n                this._children.push(child);\n            }\n        }\n        _removeChild(child) {\n            const index = this._children.indexOf(child);\n            if (index > -1) {\n                this._children.splice(index, 1);\n            }\n        }\n        _runWithGlobalInterception(fn, args) {\n            try {\n                const src = String(fn);\n                if (!/\\[native code\\]/.test(src)) {\n                    let body = src.trim();\n                    if (!/^function[\\s\\(]/.test(body) && !/^[\\w\\$_][\\w\\d\\$_]*\\s*=>/.test(body) && !/^\\(.*?\\)\\s*=>/.test(body)) {\n                        body = 'function ' + body;\n                    }\n                    const trySrc = 'with(ctx){ const f = (' + body + '); return f.apply(thisArg, argsArray); }';\n                    const wrapper = new Function('thisArg', 'argsArray', 'ctx', trySrc);\n                    return wrapper.call(undefined, this._createMethodContext(), args, this._createContextProxy(undefined, undefined));\n                }\n            }\n            catch {\n            }\n            return fn.apply(this._createMethodContext(), args);\n        }\n        destroy() {\n            const self = this;\n            if (self._isDestroyed)\n                return;\n            self._callLifecycleHook('beforeUnmount');\n            for (const child of self._children) {\n                if (!child.isDestroyed)\n                    child.destroy();\n            }\n            if (self._parent) {\n                self._parent._removeChild(self);\n            }\n            for (const [element, directives] of self._directives) {\n                for (const directive of directives) {\n                    if (directive.type === 'custom' && directive.customDirective?.unbind) {\n                        try {\n                            directive.customDirective.unbind(element, self);\n                        }\n                        catch {\n                            _logErr();\n                        }\n                    }\n                }\n            }\n            self._directives.clear();\n            for (const { element, event, handler, options } of self._eventListeners) {\n                element.removeEventListener(event, handler, options);\n            }\n            self._eventListeners = [];\n            for (const cleanup of Array.from(self._cleanupFunctions)) {\n                try {\n                    cleanup();\n                }\n                catch {\n                    _logErr();\n                }\n            }\n            self._cleanupFunctions.clear();\n            self._computedCache.clear();\n            self._expressionCache.clear();\n            self._propertyDependencies.clear();\n            if (self._propParent && self._propEffect) {\n                for (const deps of self._propParent._propertyDependencies.values()) {\n                    const idx = deps.indexOf(self._propEffect);\n                    if (idx > -1)\n                        deps.splice(idx, 1);\n                }\n            }\n            if (self._element)\n                self._framework._unregisterElement(self._element);\n            self._callLifecycleHook('unmounted');\n            self._isDestroyed = true;\n            self._isMounted = false;\n            self._isBound = false;\n            self._children = [];\n            self._parent = null;\n            this._deepReactiveCache = new WkMap;\n            self._element = null;\n            quMct(() => self._framework._unregisterComponent(self._id));\n        }\n        _initReactiveProps(expr, parent) {\n            if (!expr || !parent)\n                return;\n            this._propParent = parent;\n            let evalFn;\n            try {\n                evalFn = new Function('ctx', 'with(ctx){return (' + expr + ')}');\n            }\n            catch {\n                return;\n            }\n            const update = () => {\n                parent._activeEffect = update;\n                let obj;\n                try {\n                    const ctx = parent.getContext(true);\n                    obj = evalFn(ctx);\n                }\n                catch {\n                    obj = null;\n                }\n                parent._activeEffect = null;\n                if (obj && typeof obj === 'object') {\n                    this._data.$props = this._data.$props || {};\n                    this._propUpdateActive = true;\n                    for (const k in obj) {\n                        const v = obj[k];\n                        if (this._data[k] !== v)\n                            this._data[k] = v;\n                    }\n                    this._propUpdateActive = false;\n                }\n            };\n            this._propEffect = update;\n            update();\n        }\n        _parseDirectives(element) {\n            const self = this;\n            let processedElements = 0;\n            const processElement = (el, isRoot = false) => {\n                if (!isRoot && (el.hasAttribute(attrName('data')) || this._framework._getComponentByElement(el))) {\n                    return false;\n                }\n                const isComponentTag = el[STR_TAGNAME] === 'COMPONENT';\n                const directives = [];\n                let hasTextOrHtml = false;\n                let forAttr = null;\n                for (const a of el.attributes) {\n                    const n = a.name;\n                    if (n.startsWith(PFX + '-') || n.startsWith(PFX + ':')) {\n                        directives.push(a);\n                        if (!hasTextOrHtml && (n === attrName('text') || n === attrName('html')))\n                            hasTextOrHtml = true;\n                        if (!forAttr && n === attrName('for'))\n                            forAttr = a;\n                    }\n                }\n                if (directives.length > 0) {\n                    processedElements++;\n                    if (forAttr) {\n                        self._bindDirective(el, forAttr.name, forAttr.value);\n                        return false;\n                    }\n                    for (const attr of directives)\n                        self._bindDirective(el, attr.name, attr.value);\n                }\n                if (FT_TI && !hasTextOrHtml)\n                    self._bindTextInterpolationsIn(el);\n                return isRoot || !isComponentTag;\n            };\n            processElement(element, true);\n            self._walkElements(element, processElement);\n        }\n        _bindTextInterpolationsIn(el) {\n            const nodes = Array.from(el.childNodes);\n            for (const node of nodes) {\n                if (node.nodeType !== Node.TEXT_NODE)\n                    continue;\n                const textNode = node;\n                const raw = textNode.nodeValue || '';\n                if (textNode.__x_tool_ti || raw.indexOf('{{') === -1)\n                    continue;\n                const parentTag = (textNode.parentElement?.tagName || '').toLowerCase();\n                const inCode = parentTag === 'code' || parentTag === 'pre';\n                const segs = [];\n                let i = 0;\n                while (i < raw.length) {\n                    const open = raw.indexOf('{{', i);\n                    if (open === -1) {\n                        segs.push({ literal: raw.slice(i) });\n                        break;\n                    }\n                    let bs = 0;\n                    for (let p = open - 1; p >= 0 && raw.charCodeAt(p) === 92; p--)\n                        bs++;\n                    if (bs > 0) {\n                        const prefixStart = i;\n                        const prefixEnd = open - bs;\n                        if (prefixEnd > prefixStart)\n                            segs.push({ literal: raw.slice(prefixStart, prefixEnd) });\n                        if (bs > 1)\n                            segs.push({ literal: '\\\\'.repeat(bs - 1) });\n                        const close = raw.indexOf('}}', open + 2);\n                        if (close === -1) {\n                            segs.push({ literal: raw.slice(open, raw.length) });\n                            i = raw.length;\n                            break;\n                        }\n                        segs.push({ literal: raw.slice(open, close + 2) });\n                        i = close + 2;\n                        continue;\n                    }\n                    else {\n                        if (open > i)\n                            segs.push({ literal: raw.slice(i, open) });\n                        const close = raw.indexOf('}}', open + 2);\n                        if (close === -1) {\n                            segs.push({ literal: raw.slice(open) });\n                            i = raw.length;\n                            break;\n                        }\n                        const expr = raw.slice(open + 2, close).trim();\n                        if (expr)\n                            segs.push({ expr });\n                        else\n                            segs.push({ literal: '' });\n                        i = close + 2;\n                        continue;\n                    }\n                }\n                const hasExpr = segs.some(s => s.expr);\n                const hasEscaped = segs.some(s => s.literal && s.literal.includes('{{'));\n                if (!hasExpr && !hasEscaped)\n                    continue;\n                textNode.__x_tool_ti = true;\n                const evaluators = hasExpr && !inCode ? segs.filter(s => s.expr).map(s => this._createElementEvaluator(s.expr, el)) : [];\n                let exprIndex = 0;\n                const update = () => {\n                    exprIndex = 0;\n                    let out = '';\n                    for (const s of segs) {\n                        if (s.literal != null) {\n                            out += s.literal;\n                        }\n                        else if (s.expr) {\n                            if (inCode) {\n                                out += '{{ ' + s.expr + ' }}';\n                            }\n                            else {\n                                const val = evaluators[exprIndex++]();\n                                out += (val == null ? '' : String(val));\n                            }\n                        }\n                    }\n                    if (textNode.textContent !== out)\n                        textNode.textContent = out;\n                };\n                const dirInfo = { type: 'text-interpolation', expression: raw, update: undefined };\n                this._addDirective(el, dirInfo);\n                const effect = this._createEffect(update, dirInfo);\n                dirInfo.update = effect;\n            }\n        }\n        _walkElements(parent, processor) {\n            let child = parent.firstElementChild;\n            while (child) {\n                const next = child.nextElementSibling;\n                if (processor(child))\n                    this._walkElements(child, processor);\n                child = next;\n            }\n        }\n        _bindDirective(element, directiveName, expression) {\n            const self = this;\n            const isShortBind = directiveName.startsWith(PFX + ':');\n            const type = directiveName.slice(PFX.length + 1);\n            if (isShortBind || type === 'class' || type === STR_STYLE) {\n                element.removeAttribute(directiveName);\n                return self._bindAttributeDirective(element, type, expression);\n            }\n            if (type === 'text' || type === 'html' || type === 'show') {\n                element.removeAttribute(directiveName);\n                return self._bindSimpleDirective(element, expression, type);\n            }\n            const handled = type === 'model' ? (element.removeAttribute(directiveName), self._bindModelDirective(element, expression), true)\n                : type === 'if' ? (element.removeAttribute(directiveName), self._bindIfDirective(element, expression), true)\n                    : type === 'for' ? (element.removeAttribute(directiveName), self._bindForDirective(element, expression), true)\n                        : false;\n            if (handled)\n                return;\n            if (type.indexOf(':') > -1) {\n                const [prefix, rest] = type.split(':', 2);\n                const [suffix, ...mods] = rest.split('.');\n                const modifiers = mods.reduce((acc, m) => { if (m)\n                    acc[m] = true; return acc; }, {});\n                if (prefix === 'on') {\n                    element.removeAttribute(directiveName);\n                    const customDirective = self.framework._getCustomDirective(suffix);\n                    return customDirective\n                        ? self._bindCustomDirective(element, suffix, expression, customDirective, modifiers)\n                        : self._bindEventDirective(element, suffix, expression, modifiers);\n                }\n                element.removeAttribute(directiveName);\n                return self._bindAttributeDirective(element, suffix, expression);\n            }\n        }\n        _createEffect(updateFn, directiveRef) {\n            const effect = () => {\n                this._activeEffect = effect;\n                try {\n                    updateFn();\n                }\n                finally {\n                    this._activeEffect = null;\n                }\n            };\n            effect();\n            this._allEffects.add(effect);\n            if (XTOOL_ENABLE_STATIC_DIRECTIVES && directiveRef && directiveRef._static === undefined) {\n                let found = false;\n                for (const deps of this._propertyDependencies.values()) {\n                    if (deps.includes(effect)) {\n                        found = true;\n                        break;\n                    }\n                }\n                directiveRef._static = !found;\n            }\n            return effect;\n        }\n        _bindSimpleDirective(element, expression, type) {\n            if (type === 'class' || type === STR_STYLE) {\n                return this._bindAttributeDirective(element, type, expression);\n            }\n            const evaluator = this._createElementEvaluator(expression, element);\n            let originalDisplay;\n            if (type === 'show') {\n                const el = element;\n                originalDisplay = el.style[STR_DISPLAY] !== STR_NONE ? el.style[STR_DISPLAY] : undefined;\n            }\n            let _prevShown = undefined;\n            const update = () => {\n                const value = evaluator();\n                const el = element;\n                switch (type) {\n                    case 'text':\n                        el.textContent = String(value);\n                        break;\n                    case 'html':\n                        el.innerHTML = String(value || '');\n                        break;\n                    case 'show':\n                        const next = !!value;\n                        if (_prevShown === next)\n                            return;\n                        _prevShown = next;\n                        el.style[STR_DISPLAY] = next ? (originalDisplay || '') : STR_NONE;\n                        break;\n                }\n            };\n            const dirInfo = { type, expression, update: undefined, originalDisplay };\n            this._addDirective(element, dirInfo);\n            const effect = this._createEffect(update, dirInfo);\n            dirInfo.update = effect;\n        }\n        _bindModelDirective(element, property) {\n            const isCheckbox = element.type === 'checkbox';\n            const isNumeric = element.type === 'number' || element.type === 'range';\n            const isMultiSelect = element.tagName === 'SELECT' && element.multiple === true;\n            if (!Reflect.has(this._data, property)) {\n                Reflect.defineProperty(this._data, property, {\n                    'configurable': true,\n                    'enumerable': true,\n                    'writable': true\n                });\n            }\n            const getValueEvaluator = this._createElementEvaluator(property, element);\n            const setValueEvaluator = this._createEvaluator(`${property} = $value`, true);\n            const inferCheckboxValue = () => {\n                if (element.hasAttribute('value'))\n                    return element.value;\n                const loopScope = this._collectLoopScope(element);\n                if (loopScope) {\n                    const keys = Object.keys(loopScope);\n                    if (keys.length === 1)\n                        return loopScope[keys[0]];\n                }\n                return element.value;\n            };\n            const checkboxValue = isCheckbox ? inferCheckboxValue() : undefined;\n            const getInputValue = () => {\n                if (isCheckbox) {\n                    if (Array.isArray(getValueEvaluator()) && checkboxValue !== undefined) {\n                        return element.checked ? checkboxValue : undefined;\n                    }\n                    if (element.hasAttribute('value'))\n                        return element.checked ? element.value : undefined;\n                    return element.checked;\n                }\n                if (isMultiSelect) {\n                    const sel = element;\n                    const values = [];\n                    for (let i = 0; i < sel.options.length; i++) {\n                        const opt = sel.options[i];\n                        if (opt.selected)\n                            values.push(opt.value);\n                    }\n                    return values;\n                }\n                return isNumeric ? parseFloat(element.value) || 0 : element.value;\n            };\n            const setInputValue = (value) => {\n                if (isCheckbox) {\n                    if (Array.isArray(value)) {\n                        const member = element.hasAttribute('value') ? element.value : checkboxValue;\n                        element.checked = member != null ? value.includes(member) : false;\n                    }\n                    else {\n                        element.checked = !!value;\n                    }\n                    return;\n                }\n                if (isMultiSelect) {\n                    const sel = element;\n                    const arr = Array.isArray(value) ? value : [];\n                    for (let i = 0; i < sel.options.length; i++) {\n                        const opt = sel.options[i];\n                        opt.selected = arr.includes(opt.value);\n                    }\n                    return;\n                }\n                element.value = String(value ?? (isNumeric ? 0 : ''));\n            };\n            this._createEffect(() => setInputValue(getValueEvaluator()));\n            const ctx = this._createContextProxy(undefined, element);\n            const updateData = () => {\n                const raw = getInputValue();\n                const currentVal = this._safeExecute(() => getValueEvaluator());\n                if (isCheckbox && Array.isArray(currentVal)) {\n                    const arr = currentVal;\n                    const member = element.hasAttribute('value') ? element.value : checkboxValue;\n                    if (member !== undefined) {\n                        const idx = arr.indexOf(member);\n                        if (element.checked) {\n                            if (idx === -1)\n                                arr.push(member);\n                        }\n                        else if (idx > -1) {\n                            arr.splice(idx, 1);\n                        }\n                    }\n                }\n                else if (isMultiSelect && Array.isArray(currentVal)) {\n                    const arr = currentVal;\n                    arr.splice(0, arr.length);\n                    raw.forEach(v => arr.push(v));\n                }\n                else {\n                    ctx.$value = raw;\n                    this._safeExecute(() => { setValueEvaluator.call(this._createMethodContext(), ctx); });\n                }\n            };\n            const t = element.type;\n            const eventType = (element[STR_TAGNAME] === 'SELECT' || t === 'checkbox' || t === 'radio' || t === 'file') ? 'change' : 'input';\n            this._addEventListenerWithCleanup(element, eventType, updateData);\n            this._addDirective(element, { type: 'model', property });\n        }\n        _bindIfDirective(element, expression) {\n            const self = this;\n            const placeholder = d.createComment('x-if');\n            element.parentNode?.insertBefore(placeholder, element);\n            element.__x_if_anchorParent = placeholder.parentElement || null;\n            const branches = [];\n            const makeActualElement = (el) => {\n                if (el[STR_TAGNAME] === STR_TEMPLATE) {\n                    const wrapper = d.createElement('div');\n                    wrapper.style[STR_DISPLAY] = STR_CONTENTS;\n                    wrapper.appendChild(el.content.cloneNode(true));\n                    return { el: wrapper, isTemplate: true };\n                }\n                return { el: el, isTemplate: false };\n            };\n            const first = makeActualElement(element);\n            const firstEval = self._createElementEvaluator(expression, element);\n            branches.push({ el: first.el, test: firstEval, isTemplate: first.isTemplate });\n            if (!first.isTemplate)\n                first.el.__x_tool_bound = true;\n            const originalNodes = [element];\n            if (FT_IFB) {\n                if (FT_IFB) {\n                    let sib = element.nextElementSibling;\n                    while (sib) {\n                        const isElse = sib.hasAttribute('x-else');\n                        const isElseIf = sib.hasAttribute('x-else-if');\n                        if (!isElse && !isElseIf)\n                            break;\n                        if (sib.hasAttribute('x-else-if')) {\n                            const attr = sib.getAttribute('x-else-if') || '';\n                            const branch = makeActualElement(sib);\n                            const evalFn = self._createElementEvaluator((attr || '').trim(), sib);\n                            branches.push({ el: branch.el, test: evalFn, isTemplate: branch.isTemplate });\n                            if (!branch.isTemplate)\n                                branch.el.__x_tool_bound = true;\n                        }\n                        else {\n                            const branch = makeActualElement(sib);\n                            branches.push({ el: branch.el, test: null, isTemplate: branch.isTemplate });\n                            if (!branch.isTemplate)\n                                branch.el.__x_tool_bound = true;\n                        }\n                        sib.removeAttribute('x-else');\n                        sib.removeAttribute('x-else-if');\n                        originalNodes.push(sib);\n                        sib = sib.nextElementSibling;\n                    }\n                }\n            }\n            let active = -1;\n            for (const orig of originalNodes) {\n                if (orig.parentNode)\n                    orig.parentNode.removeChild(orig);\n            }\n            const mountBranch = (idx) => {\n                if (idx < 0)\n                    return;\n                const b = branches[idx];\n                if (!b.el.__x_tool_bound) {\n                    self._parseDirectives(b.el);\n                    b.el.__x_tool_bound = true;\n                }\n                element.__x_if_current?.parentNode?.removeChild(element.__x_if_current);\n                if (!b.el.parentNode) {\n                    placeholder.parentNode?.insertBefore(b.el, placeholder.nextSibling);\n                }\n                element.__x_if_current = b.el;\n                active = idx;\n            };\n            const unmountBranch = (idx, cb) => {\n                if (idx < 0) {\n                    if (cb)\n                        cb();\n                    return;\n                }\n                const b = branches[idx];\n                if (b.el.parentNode) {\n                    if (b.el.parentNode)\n                        b.el.parentNode.removeChild(b.el);\n                    if (cb)\n                        cb();\n                }\n                else if (cb)\n                    cb();\n                active = -1;\n            };\n            const update = () => {\n                let next = -1;\n                for (let i = 0; i < branches[STR_LENGTH]; i++) {\n                    const b = branches[i];\n                    const pass = b.test ? !!b.test() : true;\n                    if (pass) {\n                        next = i;\n                        break;\n                    }\n                }\n                if (next === active)\n                    return;\n                if (active !== -1) {\n                    unmountBranch(active, () => mountBranch(next));\n                }\n                else {\n                    mountBranch(next);\n                }\n            };\n            const effect = self._createEffect(update);\n            self._addDirective(element, { type: 'if', expression, update: effect });\n        }\n        _bindEventDirective(element, eventName, expression, modifiers) {\n            const self = this;\n            const trimmed = (expression || '').trim();\n            const arrow = self._extractArrowFunction(trimmed);\n            const opts = modifiers ? {\n                once: !!modifiers.once,\n                passive: !!modifiers.passive,\n                capture: !!modifiers.capture,\n            } : undefined;\n            const onlySelf = !!modifiers?.self;\n            const shouldPrevent = !!modifiers?.prevent;\n            const shouldStop = !!modifiers?.stop;\n            const isOutside = !!modifiers?.outside;\n            const deferExec = !!modifiers?.defer;\n            const keyAliasMap = {\n                enter: ['enter'],\n                esc: ['escape', 'esc'],\n                escape: ['escape', 'esc'],\n                space: [' ', 'space', 'spacebar'],\n                tab: ['tab'],\n                backspace: ['backspace'],\n                delete: ['delete', 'del'],\n                del: ['delete', 'del'],\n                arrowup: ['arrowup', 'up'],\n                arrowdown: ['arrowdown', 'down'],\n                arrowleft: ['arrowleft', 'left'],\n                arrowright: ['arrowright', 'right'],\n                home: ['home'],\n                end: ['end'],\n                pageup: ['pageup'],\n                pagedown: ['pagedown']\n            };\n            const comboRequirements = {\n                ctrl: !!modifiers?.ctrl,\n                alt: !!modifiers?.alt,\n                shift: !!modifiers?.shift,\n                meta: !!modifiers?.meta,\n            };\n            const buttonMap = { left: 0, middle: 1, right: 2 };\n            const touchSingle = !!modifiers?.single;\n            const touchMulti = !!modifiers?.multi;\n            const modifierKeys = modifiers ? _Okeys(modifiers) : [];\n            const allowedKeys = [];\n            for (const m of modifierKeys) {\n                const aliases = keyAliasMap[m.toLowerCase()];\n                if (aliases)\n                    allowedKeys.push(...aliases);\n            }\n            const allowedButtons = [];\n            for (const m of modifierKeys) {\n                const btn = buttonMap[m.toLowerCase()];\n                if (btn !== undefined)\n                    allowedButtons.push(btn);\n            }\n            const needKeyCheck = allowedKeys.length > 0 || comboRequirements.ctrl || comboRequirements.alt || comboRequirements.shift || comboRequirements.meta;\n            const needButtonCheck = allowedButtons.length > 0;\n            const needTouchCheck = touchSingle || touchMulti;\n            const passesFilters = (event) => {\n                const path = event.composedPath ? event.composedPath() : null;\n                const tgt = (path && path.length ? path[0] : event.target);\n                if (isOutside) {\n                    if (!tgt)\n                        return false;\n                    if (element instanceof Node && (element === tgt || element.contains(tgt)))\n                        return false;\n                }\n                if (onlySelf && event.target !== element)\n                    return false;\n                if (needTouchCheck) {\n                    if (event instanceof TouchEvent) {\n                        const tCount = event.touches.length;\n                        if (touchSingle && tCount !== 1)\n                            return false;\n                        if (touchMulti && tCount < 2)\n                            return false;\n                    }\n                    else\n                        return false;\n                }\n                if (needButtonCheck) {\n                    if (event instanceof MouseEvent) {\n                        if (!allowedButtons.includes(event.button))\n                            return false;\n                    }\n                    else\n                        return false;\n                }\n                if (needKeyCheck) {\n                    if (!(event instanceof KeyboardEvent))\n                        return false;\n                    const k = (event.key || '').toLowerCase();\n                    if (allowedKeys.length > 0 && !allowedKeys.includes(k))\n                        return false;\n                    if (comboRequirements.ctrl && !event.ctrlKey)\n                        return false;\n                    if (comboRequirements.alt && !event.altKey)\n                        return false;\n                    if (comboRequirements.shift && !event.shiftKey)\n                        return false;\n                    if (comboRequirements.meta && !event.metaKey)\n                        return false;\n                }\n                return true;\n            };\n            const hasExpr = !!trimmed;\n            let runExpr = null;\n            const thisCtx = self._createMethodContext();\n            if (arrow) {\n                const compiledArrow = self._compileArrowForEvent(arrow.paramsList, arrow.body, arrow.isBlock);\n                const mapArgs = arrow.paramsList.length\n                    ? (event) => arrow.paramsList.map((_, idx) => (idx === 0 ? event : idx === 1 ? element : undefined))\n                    : () => [];\n                runExpr = (event) => {\n                    const ctx = self._createContextProxy(event, element);\n                    compiledArrow.call(thisCtx, ctx, ...mapArgs(event));\n                };\n            }\n            else if (hasExpr) {\n                const isStatement = trimmed.includes(';');\n                const executor = self._createEvaluator(trimmed, isStatement);\n                runExpr = (event) => {\n                    const ctx = self._createContextProxy(event, element);\n                    const result = executor.call(thisCtx, ctx);\n                    if (typeof result === 'function')\n                        result.call(thisCtx, event);\n                };\n            }\n            const createEventHandler = (event) => {\n                if (!passesFilters(event))\n                    return;\n                if (shouldPrevent && typeof event.preventDefault === 'function')\n                    event.preventDefault();\n                if (shouldStop && typeof event.stopPropagation === 'function')\n                    event.stopPropagation();\n                if (!runExpr)\n                    return;\n                if (deferExec && typeof quMct === 'function') {\n                    const ev = event;\n                    quMct(() => self._safeExecute(() => runExpr(ev)));\n                    return;\n                }\n                self._safeExecute(() => runExpr(event));\n            };\n            const cfg = this.framework._getConfig();\n            const canDelegate = !!cfg.delegate && EV_DELEGATED.includes(eventName);\n            if (!isOutside && canDelegate) {\n                const remover = this.framework._registerDelegated(element, eventName, { filter: (e) => passesFilters(e), run: (e) => createEventHandler(e), once: !!modifiers?.once, comp: this });\n                this._addCleanupFunction(remover);\n            }\n            else {\n                const target = isOutside ? (element?.ownerDocument || d || document) : element;\n                self._addEventListenerWithCleanup(target, eventName, createEventHandler, opts);\n            }\n        }\n        _createEvaluator(expression, isStatement = false) {\n            const key = `${isStatement ? 's' : 'r'}:${expression}`;\n            let fn = this._expressionCache.get(key);\n            if (!fn) {\n                fn = new Function('ctx', `with(ctx){${isStatement ? expression : `return (${expression})`}}`);\n                this._expressionCache.set(key, fn);\n            }\n            return fn;\n        }\n        _createElementEvaluator(expression, element) {\n            const self = this;\n            const compiled = self._createEvaluator(expression);\n            return () => this._safeExecute(() => compiled.call(self._createMethodContext(), self._createContextProxy(undefined, element)));\n        }\n        _extractArrowFunction(expression) {\n            let m = expression.match(/^\\s*\\(\\s*([^)]*?)\\s*\\)\\s*=>\\s*([\\s\\S]+)$/);\n            if (!m)\n                m = expression.match(/^\\s*([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*=>\\s*([\\s\\S]+)$/);\n            if (!m)\n                return null;\n            const params = (m[1] || '')\n                .split(',')\n                .map(p => p.trim())\n                .filter(Boolean);\n            const body = (m[2] || '').trim();\n            const isBlock = body.startsWith('{') && body.endsWith('}');\n            const finalBody = isBlock ? body.slice(1, -1) : body;\n            return { paramsList: params, body: finalBody, isBlock };\n        }\n        _compileArrowForEvent(params, body, isBlock) {\n            const content = isBlock ? body : 'return ( ' + body + ' );';\n            return new Function('ctx', ...params, 'with(ctx){ ' + content + ' }');\n        }\n        _wrapData(data, parentKey) {\n            if (!(Object.getPrototypeOf(data) === Object.prototype || ARRAY_ISARRAY(data)))\n                return data;\n            const self = this;\n            if (!this._deepReactiveCache)\n                this._deepReactiveCache = new WkMap();\n            if (this._deepReactiveCache.has(data))\n                return this._deepReactiveCache.get(data);\n            const proxy = new Proxy(data, {\n                get: (target, p, receiver) => {\n                    if (ARRAY_ISARRAY(target)) {\n                        if (p === Symbol.iterator) {\n                            self._trackDependency(parentKey);\n                            return Reflect.get(target, p, receiver);\n                        }\n                        if (p === 'length' || (typeof p === 'string' && /^\\d+$/.test(p))) {\n                            self._trackDependency(parentKey);\n                        }\n                    }\n                    else {\n                        self._trackDependency(parentKey);\n                    }\n                    const value = Reflect.get(target, p, receiver);\n                    if (ARRAY_ISARRAY(target) && typeof value === 'function' && ['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse', 'copyWithin', 'fill'].includes(p)) {\n                        return function (...args) {\n                            if (self._isInComputedEvaluation) {\n                                const name = String(p);\n                                throw new Error(`[x-tool] Mutation via '${String(parentKey)}.${name}()' is not allowed during computed evaluation.`);\n                            }\n                            if (self._isFrozen) {\n                                const name = String(p);\n                                throw new Error(`[x-tool] Mutation via '${String(parentKey)}.${name}()' is not allowed while component is frozen.`);\n                            }\n                            const arr = target;\n                            const beforeLen = arr.length;\n                            const beforeFirst = arr[0];\n                            const beforeLast = arr[beforeLen - 1];\n                            const result = value.apply(target, args);\n                            if (!self._isSealed && (arr.length !== beforeLen || arr[0] !== beforeFirst || arr[arr.length - 1] !== beforeLast)) {\n                                self._onDataChange(parentKey);\n                            }\n                            return result;\n                        };\n                    }\n                    const type = typeof value;\n                    if (value && type === 'object') {\n                        return self._wrapData(value, parentKey);\n                    }\n                    return value;\n                },\n                ownKeys: (target) => { return Reflect.ownKeys(target); },\n                has: (target, key) => { return Reflect.has(target, key); },\n                set: (target, p, value) => {\n                    if (self._isDestroyed)\n                        return true;\n                    if (self._isInComputedEvaluation) {\n                        const key = String(parentKey) + (typeof p === 'symbol' ? '' : '.' + String(p));\n                        throw new Error(`[x-tool] Mutation of '${key}' is not allowed during computed evaluation.`);\n                    }\n                    if (self._isFrozen) {\n                        const key = String(parentKey) + (typeof p === 'symbol' ? '' : '.' + String(p));\n                        throw new Error(`[x-tool] Mutation of '${key}' is not allowed while component is frozen.`);\n                    }\n                    if (typeof p === 'symbol')\n                        return true;\n                    const had = Reflect.has(target, p);\n                    const oldValue = had ? Reflect.get(target, p) : undefined;\n                    if (value && typeof value === 'object') {\n                        value = self._wrapData(value, typeof p === 'symbol' ? parentKey : (String(parentKey) + '.' + String(p)));\n                    }\n                    if (!had) {\n                        try {\n                            Reflect.defineProperty(target, p, {\n                                configurable: true,\n                                enumerable: true,\n                                writable: true,\n                                value\n                            });\n                        }\n                        catch {\n                            Reflect.set(target, p, value);\n                        }\n                        self._onDataChange(parentKey);\n                        return true;\n                    }\n                    if (oldValue === value)\n                        return true;\n                    Reflect.set(target, p, value);\n                    if (!self._isSealed)\n                        self._onDataChange(parentKey);\n                    return true;\n                },\n                deleteProperty: (target, p) => {\n                    if (self._isInComputedEvaluation) {\n                        const key = String(parentKey) + (typeof p === 'symbol' ? '' : '.' + String(p));\n                        throw new Error(`[x-tool] Deletion of '${key}' is not allowed during computed evaluation.`);\n                    }\n                    if (self._isFrozen) {\n                        const key = String(parentKey) + (typeof p === 'symbol' ? '' : '.' + String(p));\n                        throw new Error(`[x-tool] Deletion of '${key}' is not allowed while component is frozen.`);\n                    }\n                    const ok = Reflect.deleteProperty(target, p);\n                    if (ok && !self._isSealed)\n                        self._onDataChange(parentKey);\n                    return ok;\n                }\n            });\n            this._deepReactiveCache.set(data, proxy);\n            return proxy;\n        }\n        _createReactiveData(data) {\n            const self = this;\n            return new Proxy(data, {\n                get: (target, property, receiver) => {\n                    const value = Reflect.get(target, property, receiver);\n                    if (property === Symbol.iterator)\n                        return value;\n                    if (typeof property !== 'symbol') {\n                        self._trackDependency(property);\n                    }\n                    if (value && typeof value === 'object') {\n                        return self._wrapData(value, property);\n                    }\n                    return value;\n                },\n                ownKeys: (target) => Reflect.ownKeys(target),\n                has: (target, key) => Reflect.has(target, key),\n                set: (target, property, value, receiver) => {\n                    if (self._isDestroyed)\n                        return true;\n                    if (self._isFrozen)\n                        return true;\n                    if (self._isInComputedEvaluation) {\n                        throw new Error(`[x-tool] Mutation of '${String(property)}' is not allowed during computed evaluation.`);\n                    }\n                    if (property === Symbol.iterator && ARRAY_ISARRAY(target))\n                        return value;\n                    const oldValue = Reflect.get(target, property);\n                    if (value && typeof value === 'object') {\n                        value = self._wrapData(value, property);\n                    }\n                    if (oldValue === value)\n                        return true;\n                    const had = Reflect.has(target, property);\n                    if (!had) {\n                        try {\n                            Reflect.defineProperty(target, property, {\n                                configurable: true,\n                                enumerable: true,\n                                writable: true,\n                                value\n                            });\n                        }\n                        catch {\n                            Reflect.set(target, property, value, receiver);\n                        }\n                    }\n                    else {\n                        Reflect.set(target, property, value, receiver);\n                    }\n                    if (!this._isSealed)\n                        this._onDataChange(property);\n                    if (this._propUpdateActive && property !== '$props') {\n                        const pc = target.$props;\n                        if (pc)\n                            pc[property] = value;\n                        const eff = this._propEffects[property];\n                        if (eff && !this._runningPropEffect && !this._isSealed) {\n                            this._runningPropEffect = true;\n                            this._safeExecute(() => eff.call(this._createMethodContext(), value, oldValue));\n                            this._runningPropEffect = false;\n                        }\n                    }\n                    return true;\n                }\n            });\n        }\n        _createMethodContext(_includeComputed = true) {\n            const specials = {\n                '$log': (..._args) => { },\n                '$destroy': () => this.destroy(),\n                '$forceUpdate': () => this._scheduleRender(),\n                '$addCleanupFunction': (fn) => this._addCleanupFunction(fn),\n                '$nextTick': (cb) => {\n                    if (cb) {\n                        this._nextTickQueue.push(cb);\n                        if (!this._renderScheduled)\n                            quMct(() => {\n                                if (!this._renderScheduled && this._nextTickQueue.length) {\n                                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                                    for (const fn of q) {\n                                        this._safeExecute(() => fn());\n                                    }\n                                }\n                            });\n                        return;\n                    }\n                    return new Promise(resolve => {\n                        this._nextTickQueue.push(() => resolve());\n                        if (!this._renderScheduled)\n                            quMct(() => {\n                                if (!this._renderScheduled && this._nextTickQueue.length) {\n                                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                                    for (const fn of q) {\n                                        this._safeExecute(() => fn());\n                                    }\n                                }\n                            });\n                    });\n                },\n                '$el': this._element,\n                '$id': this._id,\n                '$isMounted': this._isMounted,\n                '$isDestroyed': this._isDestroyed,\n                '$isSealed': this._isSealed,\n                '$isFrozen': this._isFrozen,\n                '$parent': this._parent,\n                '$children': this._children,\n                '$seal': (on = true) => { this._setSealed(!!on); },\n                '$mutate': (fn) => {\n                    const prevMethod = this._isInMethodExecution;\n                    if (this._isInComputedEvaluation) {\n                        throw new Error('[x-tool] $mutate cannot be used inside computed evaluation; computed getters must be pure.');\n                    }\n                    this._isInMethodExecution = false;\n                    try {\n                        return typeof fn === 'function' ? fn() : undefined;\n                    }\n                    finally {\n                        this._isInMethodExecution = prevMethod;\n                        this._scheduleRender();\n                    }\n                }\n            };\n            return new Proxy(this._data, {\n                get: (target, propStr) => {\n                    if (propStr in target) {\n                        this._trackDependency(propStr);\n                        const v = target[propStr];\n                        return v;\n                    }\n                    if (FT_C && (propStr in this._computed))\n                        return this._getComputedValue(propStr);\n                    if (propStr in specials)\n                        return specials[propStr];\n                    return this._methods[propStr];\n                },\n                set: (_target, propStr, value) => {\n                    if (this._isInComputedEvaluation) {\n                        throw new Error(`[x-tool] Mutation of '${String(propStr)}' is not allowed during computed evaluation.`);\n                    }\n                    if (this._isFrozen) {\n                        throw new Error(`[x-tool] Mutation of '${String(propStr)}' is not allowed while component is frozen.`);\n                    }\n                    this._data[propStr] = value;\n                    return true;\n                }\n            });\n        }\n        _createContextProxy(event, targetElement) {\n            const component = this;\n            const mergedScope = targetElement ? this._collectLoopScope(targetElement) : null;\n            const scopeKeys = mergedScope ? new Set(_Okeys(mergedScope)) : new Set();\n            const gWindow = (typeof window !== 'undefined' ? window : undefined);\n            const gDocument = (typeof document !== 'undefined' ? document : undefined);\n            const cfg = this.framework._getConfig();\n            const sandbox = !!cfg.sandboxExpressions;\n            const allow = new Set((cfg.allowGlobals || []).map(s => String(s)));\n            const _lastListenerByTarget = new WkMap();\n            const wrapTarget = (t) => {\n                if (!t)\n                    return t;\n                const hasAdd = typeof t.addEventListener === 'function';\n                if (!hasAdd)\n                    return t;\n                const handlerMap = new WkMap();\n                const makeKey = (event, options) => {\n                    try {\n                        return event + '|' + (options === undefined ? '' : (typeof options === 'object' ? JSON.stringify(options) : String(options)));\n                    }\n                    catch {\n                        return event + '|';\n                    }\n                };\n                return new Proxy(t, {\n                    get(target, prop, _receiver) {\n                        if (prop === 'addEventListener') {\n                            return function (event, handler, options) {\n                                if (component._isSealed || component._isFrozen)\n                                    return;\n                                const inv = component._currentInvoker || '__anonymous__';\n                                const eKey = makeKey(event, options);\n                                let invMap = _lastListenerByTarget.get(target);\n                                if (!invMap) {\n                                    invMap = new Map();\n                                    _lastListenerByTarget.set(target, invMap);\n                                }\n                                let evMap = invMap.get(inv);\n                                if (!evMap) {\n                                    evMap = new Map();\n                                    invMap.set(inv, evMap);\n                                }\n                                const prev = evMap.get(eKey);\n                                if (prev) {\n                                    try {\n                                        target.removeEventListener(event, prev.handler, prev.options);\n                                    }\n                                    catch { }\n                                    try {\n                                        prev.remover && prev.remover();\n                                    }\n                                    catch { }\n                                    evMap.delete(eKey);\n                                }\n                                target.addEventListener(event, handler, options);\n                                const remover = component._addCleanupFunction(() => {\n                                    try {\n                                        target.removeEventListener(event, handler, options);\n                                    }\n                                    catch { }\n                                });\n                                if (remover)\n                                    component._userResourceCleanups.add(remover);\n                                try {\n                                    if (typeof handler === 'function' && remover) {\n                                        let m = handlerMap.get(handler);\n                                        if (!m) {\n                                            m = new Map();\n                                            handlerMap.set(handler, m);\n                                        }\n                                        m.set(eKey, remover);\n                                    }\n                                }\n                                catch { }\n                                evMap.set(eKey, { handler, options, remover });\n                            };\n                        }\n                        if (prop === 'removeEventListener') {\n                            return function (event, handler, options) {\n                                try {\n                                    target.removeEventListener(event, handler, options);\n                                }\n                                catch { }\n                                const key = makeKey(event, options);\n                                try {\n                                    if (typeof handler === 'function') {\n                                        const m = handlerMap.get(handler);\n                                        if (m) {\n                                            const rem = m.get(key);\n                                            if (rem) {\n                                                try {\n                                                    rem();\n                                                }\n                                                catch { }\n                                                ;\n                                                m.delete(key);\n                                            }\n                                            if (m.size === 0)\n                                                handlerMap.delete(handler);\n                                        }\n                                    }\n                                }\n                                catch { }\n                                const invMap = _lastListenerByTarget.get(target);\n                                if (invMap) {\n                                    for (const [invKey, evMap] of invMap) {\n                                        const rec = evMap.get(key);\n                                        if (rec && rec.handler === handler) {\n                                            try {\n                                                rec.remover && rec.remover();\n                                            }\n                                            catch { }\n                                            evMap.delete(key);\n                                            if (evMap.size === 0)\n                                                invMap.delete(invKey);\n                                            break;\n                                        }\n                                    }\n                                }\n                            };\n                        }\n                        if (prop === 'querySelector') {\n                            return function (sel) { const res = target.querySelector(sel); return wrapTarget(res); };\n                        }\n                        if (prop === 'querySelectorAll') {\n                            return function (sel) { const list = target.querySelectorAll(sel); return Array.from(list).map(wrapTarget); };\n                        }\n                        if (prop === 'getElementById') {\n                            return function (id) { const res = target.getElementById(id); return wrapTarget(res); };\n                        }\n                        if (prop === 'document') {\n                            const doc = target.document;\n                            return wrapTarget(doc) || doc;\n                        }\n                        if (prop === 'body' && target === gDocument) {\n                            const b = target.body;\n                            return wrapTarget(b) || b;\n                        }\n                        if (prop === 'defaultView' && target === gDocument) {\n                            const w = target.defaultView;\n                            return wrapTarget(w) || w;\n                        }\n                        const val = target[prop];\n                        if (typeof val === 'function') {\n                            try {\n                                return val.bind(target);\n                            }\n                            catch { }\n                        }\n                        return val;\n                    }\n                });\n            };\n            const _timeoutRemovers = new Map();\n            const _intervalRemovers = new Map();\n            const _rafRemovers = new Map();\n            const ctxSetTimeout = (fn, ms, ...args) => {\n                if (component._isSealed || component._isFrozen)\n                    return undefined;\n                const key = component._currentInvoker || '__anonymous__';\n                const prev = component._lastTimeoutByInvoker.get(key);\n                if (prev) {\n                    try {\n                        gWindow?.clearTimeout?.(prev.id);\n                    }\n                    catch { }\n                    ;\n                    try {\n                        prev.remover && prev.remover();\n                    }\n                    catch { }\n                }\n                const id = gWindow?.setTimeout?.(fn, ms, ...args);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.clearTimeout?.(id);\n                    }\n                    catch { } });\n                    if (remover)\n                        component._userResourceCleanups.add(remover);\n                    _timeoutRemovers.set(id, remover);\n                    component._lastTimeoutByInvoker.set(key, { id, remover });\n                }\n                return id;\n            };\n            const ctxSetInterval = (fn, ms, ...args) => {\n                if (component._isSealed || component._isFrozen)\n                    return undefined;\n                const key = component._currentInvoker || '__anonymous__';\n                const prev = component._lastIntervalByInvoker.get(key);\n                if (prev) {\n                    try {\n                        gWindow?.clearInterval?.(prev.id);\n                    }\n                    catch { }\n                    ;\n                    try {\n                        prev.remover && prev.remover();\n                    }\n                    catch { }\n                }\n                const id = gWindow?.setInterval?.(fn, ms, ...args);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.clearInterval?.(id);\n                    }\n                    catch { } });\n                    if (remover)\n                        component._userResourceCleanups.add(remover);\n                    _intervalRemovers.set(id, remover);\n                    component._lastIntervalByInvoker.set(key, { id, remover });\n                }\n                return id;\n            };\n            const ctxRequestAnimationFrame = (cb) => {\n                if (component._isSealed || component._isFrozen)\n                    return undefined;\n                const key = component._currentInvoker || '__anonymous__';\n                const prev = component._lastRafByInvoker.get(key);\n                if (prev) {\n                    try {\n                        gWindow?.cancelAnimationFrame?.(prev.id);\n                    }\n                    catch { }\n                    ;\n                    try {\n                        prev.remover && prev.remover();\n                    }\n                    catch { }\n                }\n                const id = gWindow?.requestAnimationFrame?.(cb);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.cancelAnimationFrame?.(id);\n                    }\n                    catch { } });\n                    if (remover)\n                        component._userResourceCleanups.add(remover);\n                    _rafRemovers.set(id, remover);\n                    component._lastRafByInvoker.set(key, { id, remover });\n                }\n                return id;\n            };\n            const wrapObserverCtor = (Orig, kind) => {\n                if (!Orig)\n                    return undefined;\n                const Wrapped = function (...args) {\n                    if (component._isSealed || component._isFrozen)\n                        return { observe() { }, disconnect() { }, unobserve() { } };\n                    const inst = new Orig(...args);\n                    const key = component._currentInvoker || '__anonymous__';\n                    let store = kind === 'mutation' ? component._lastObserverByInvoker.mutation : kind === 'resize' ? component._lastObserverByInvoker.resize : component._lastObserverByInvoker.intersection;\n                    const prev = store.get(key);\n                    if (prev) {\n                        try {\n                            prev.inst.disconnect();\n                        }\n                        catch { }\n                        ;\n                        try {\n                            prev.remover && prev.remover();\n                        }\n                        catch { }\n                    }\n                    const remover = component._addCleanupFunction(() => { try {\n                        inst.disconnect();\n                    }\n                    catch { } });\n                    if (remover)\n                        component._userResourceCleanups.add(remover);\n                    store.set(key, { inst, remover });\n                    return inst;\n                };\n                Wrapped.prototype = Orig.prototype;\n                return Wrapped;\n            };\n            const specials = {\n                '$target': targetElement || null,\n                '$event': event || null,\n                ...(sandbox && !allow.has('setTimeout') ? {} : { 'setTimeout': ctxSetTimeout }),\n                ...(sandbox && !allow.has('clearTimeout') ? {} : { 'clearTimeout': (id) => { try {\n                        gWindow?.clearTimeout?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _timeoutRemovers.get(id);\n                            if (r) {\n                                r();\n                                _timeoutRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('setInterval') ? {} : { 'setInterval': ctxSetInterval }),\n                ...(sandbox && !allow.has('clearInterval') ? {} : { 'clearInterval': (id) => { try {\n                        gWindow?.clearInterval?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _intervalRemovers.get(id);\n                            if (r) {\n                                r();\n                                _intervalRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('requestAnimationFrame') ? {} : { 'requestAnimationFrame': ctxRequestAnimationFrame }),\n                ...(sandbox && !allow.has('cancelAnimationFrame') ? {} : { 'cancelAnimationFrame': (id) => { try {\n                        gWindow?.cancelAnimationFrame?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _rafRemovers.get(id);\n                            if (r) {\n                                r();\n                                _rafRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('MutationObserver') ? {} : { 'MutationObserver': wrapObserverCtor(gWindow?.MutationObserver, 'mutation') }),\n                ...(sandbox && !allow.has('ResizeObserver') ? {} : { 'ResizeObserver': wrapObserverCtor(gWindow?.ResizeObserver, 'resize') }),\n                ...(sandbox && !allow.has('IntersectionObserver') ? {} : { 'IntersectionObserver': wrapObserverCtor(gWindow?.IntersectionObserver, 'intersection') }),\n                ...(sandbox && !allow.has('window') ? {} : { 'window': wrapTarget(gWindow) }),\n                ...(sandbox && !allow.has('document') ? {} : { 'document': wrapTarget(gDocument) })\n            };\n            return new Proxy({}, {\n                get: (_t, propStr) => {\n                    if (mergedScope && propStr in mergedScope)\n                        return mergedScope[propStr];\n                    if (propStr in component._data)\n                        return component._data[propStr];\n                    if (propStr in component._computed)\n                        return component._getComputedValue(propStr);\n                    if (propStr in component._methods)\n                        return component._methods[propStr];\n                    if (propStr in specials)\n                        return specials[propStr];\n                    return undefined;\n                },\n                set: (_t, propStr, value) => {\n                    if (mergedScope && scopeKeys.has(propStr)) {\n                        mergedScope[propStr] = value;\n                    }\n                    else {\n                        component._data[propStr] = value;\n                    }\n                    return true;\n                },\n                has: (_t, propStr) => !!(mergedScope && propStr in mergedScope) ||\n                    propStr in component._data ||\n                    propStr in component._computed ||\n                    propStr in component._methods ||\n                    propStr in specials\n            });\n        }\n        _bindCustomDirective(element, _name, expression, directive, modifiers) {\n            const self = this;\n            const evaluator = self._createElementEvaluator(expression, element);\n            const directiveInfo = { type: 'custom', expression, customDirective: directive };\n            if (directive.bind) {\n                self._safeExecute(() => directive.bind(element, evaluator(), expression, self, modifiers, evaluator));\n            }\n            const update = () => {\n                if (directive.update)\n                    self._safeExecute(() => directive.update(element, evaluator(), expression, self, modifiers, evaluator));\n            };\n            const effect = self._createEffect(update);\n            directiveInfo.update = effect;\n            self._addDirective(element, directiveInfo);\n        }\n        _bindAttributeDirective(element, attributeName, expression) {\n            const self = this;\n            const evaluator = self._createElementEvaluator(expression, element);\n            if (attributeName === 'class') {\n                const el = element;\n                if (!self._initialClassSets.get(el)) {\n                    const baseSet = new Set();\n                    const oc = el.className || '';\n                    if (oc)\n                        for (const cls of oc.split(/\\s+/)) {\n                            if (cls)\n                                baseSet.add(cls);\n                        }\n                    self._initialClassSets.set(el, baseSet);\n                }\n            }\n            const elAny = element;\n            let propName = null;\n            if (attributeName in elAny)\n                propName = attributeName;\n            else {\n                const camel = attributeName.replace(/-([a-z])/g, (_, c) => c.toUpperCase());\n                if (camel in elAny)\n                    propName = camel;\n                else if (attributeName.toLowerCase() === 'readonly' && 'readOnly' in elAny)\n                    propName = 'readOnly';\n            }\n            const isBooleanProp = !!(propName && typeof elAny[propName] === 'boolean');\n            const hasNonFunctionProp = !!(propName && (propName in elAny) && typeof elAny[propName] !== 'function');\n            const isKnownBooleanAttr = !!ReactiveComponent._BA[attributeName.toLowerCase()];\n            const update = () => {\n                const value = evaluator();\n                if (attributeName === 'class') {\n                    const el = element;\n                    const base = self._initialClassSets.get(el);\n                    if (typeof value === 'string') {\n                        el.className = base && base.size ? [...base].join(' ') + (value ? ' ' + value : '') : value || '';\n                    }\n                    else if (ARRAY_ISARRAY(value)) {\n                        if (base && base.size)\n                            el.className = [...base, ...value.filter(Boolean)].join(' ');\n                        else\n                            el.className = value.filter(Boolean).join(' ');\n                    }\n                    else if (value && typeof value === 'object') {\n                        if (base && base.size)\n                            el.className = [...base].join(' ');\n                        for (const raw in value) {\n                            const on = !!value[raw];\n                            if (!raw)\n                                continue;\n                            const tokens = raw.split(/\\s+/);\n                            for (let i = 0; i < tokens.length; i++) {\n                                const tk = tokens[i];\n                                if (!tk)\n                                    continue;\n                                el.classList.toggle(tk, on);\n                            }\n                        }\n                    }\n                    else if (value == null && base && base.size) {\n                        el.className = [...base].join(' ');\n                    }\n                    else if (value == null) {\n                        el.removeAttribute('class');\n                    }\n                    return;\n                }\n                if (attributeName === STR_STYLE) {\n                    const el = element;\n                    if (typeof value === 'string') {\n                        el.style.cssText = value;\n                        return;\n                    }\n                    if (value && typeof value === 'object') {\n                        Object.assign(el.style, value);\n                        return;\n                    }\n                    if (value == null)\n                        el.removeAttribute('style');\n                    return;\n                }\n                if ((isBooleanProp && propName) || isKnownBooleanAttr) {\n                    const boolVal = !!value;\n                    if (propName && isBooleanProp)\n                        elAny[propName] = boolVal;\n                    if (boolVal)\n                        element.setAttribute(attributeName, '');\n                    else\n                        element.removeAttribute(attributeName);\n                    return;\n                }\n                let normalized = null;\n                if (value && typeof value === 'object') {\n                    const parts = [];\n                    for (const k in value) {\n                        if (value[k])\n                            parts.push(k);\n                    }\n                    normalized = parts.length ? parts.join(' ') : null;\n                }\n                else if (value !== null && value !== undefined) {\n                    normalized = String(value);\n                }\n                if (hasNonFunctionProp && propName) {\n                    if (normalized !== null) {\n                        try {\n                            elAny[propName] = normalized;\n                        }\n                        catch (e) {\n                            try {\n                                element.setAttribute(attributeName, normalized);\n                            }\n                            catch { }\n                        }\n                    }\n                    else {\n                        element.removeAttribute(attributeName);\n                    }\n                    return;\n                }\n                if (normalized !== null) {\n                    const cur = element.getAttribute(attributeName);\n                    if (cur !== normalized)\n                        element.setAttribute(attributeName, normalized);\n                }\n                else {\n                    if (element.hasAttribute(attributeName))\n                        element.removeAttribute(attributeName);\n                }\n            };\n            const effect = self._createEffect(update);\n            self._addDirective(element, { type: 'bind', expression, update: effect });\n        }\n        _collectLoopScope(el) {\n            if (!el)\n                return null;\n            if (!el.parentElement) {\n                const cur = el.__x_if_current;\n                if (cur && cur.parentElement) {\n                    el = cur;\n                }\n                else {\n                    const anchorParent = el.__x_if_anchorParent;\n                    if (anchorParent)\n                        el = anchorParent;\n                }\n            }\n            const merged = {};\n            let node = el;\n            while (node) {\n                const scope = this._loopScopes.get(node);\n                if (scope)\n                    Object.assign(merged, scope);\n                if (node === this.element)\n                    break;\n                node = node.parentElement;\n            }\n            return _Okeys(merged).length ? merged : null;\n        }\n        _updateElementDirectives(root) {\n            for (const [element, directives] of this._directives) {\n                for (const directive of directives) {\n                    if ((root === element || (element instanceof Element && root.contains(element))) && directive.update) {\n                        directive.update();\n                    }\n                }\n            }\n        }\n        _bindForDirective(element, expression) {\n            const self = this;\n            const match = expression.trim().match(/^(?:\\(\\s*([^,\\s]+)\\s*(?:,\\s*([^\\)]+))?\\s*\\)|([^,\\s]+))\\s+(in|of)\\s+(.+)$/);\n            if (!match) {\n                return;\n            }\n            const itemVar = match[1] || match[3];\n            const indexVar = match[2];\n            const listCode = match[5];\n            const placeholder = d.createComment('x-for');\n            element.parentNode?.insertBefore(placeholder, element);\n            let templateToClone;\n            if (element[STR_TAGNAME] === STR_TEMPLATE) {\n                templateToClone = d.createElement('div');\n                templateToClone.style[STR_DISPLAY] = STR_CONTENTS;\n                templateToClone.appendChild(element.content.cloneNode(true));\n                element.parentNode?.removeChild(element);\n            }\n            else {\n                templateToClone = element;\n                element.parentNode?.removeChild(element);\n            }\n            const contextAnchor = placeholder.parentElement || self.element;\n            const listEval = self._createElementEvaluator(listCode.trim(), contextAnchor);\n            const instances = [];\n            const createScope = (item, idxOrKey) => {\n                const scope = { [itemVar]: item };\n                if (indexVar)\n                    scope[indexVar] = idxOrKey;\n                return scope;\n            };\n            const update = () => {\n                const norm = self._safeExecute(() => {\n                    const result = listEval();\n                    if (_AisArr(result))\n                        return { list: result, keys: null };\n                    if (typeof Map !== 'undefined' && result instanceof Map) {\n                        return { list: _Afrom(result.values()), keys: _Afrom(result.keys()) };\n                    }\n                    if (typeof Set !== 'undefined' && result instanceof Set) {\n                        return { list: _Afrom(result.values()), keys: null };\n                    }\n                    if (result && typeof result[Symbol.iterator] === 'function') {\n                        return { list: _Afrom(result), keys: null };\n                    }\n                    if (result && typeof result === 'object') {\n                        const keys = Object.keys(result);\n                        const list = keys.map(k => result[k]);\n                        return { list, keys };\n                    }\n                    return { list: [], keys: null };\n                }, { list: [], keys: null });\n                const list = norm.list;\n                const keysArr = norm.keys;\n                if (instances.length > list.length) {\n                    while (instances.length > list.length) {\n                        const inst = instances.pop();\n                        if (inst.parentNode)\n                            inst.parentNode.removeChild(inst);\n                    }\n                }\n                const minLen = Math.min(instances.length, list.length);\n                for (let i = 0; i < minLen; i++) {\n                    const inst = instances[i];\n                    const keyVal = keysArr ? keysArr[i] : i;\n                    self._loopScopes.set(inst, createScope(list[i], keyVal));\n                    self._updateElementDirectives(inst);\n                }\n                if (list.length > instances.length) {\n                    const frag = d.createDocumentFragment();\n                    const start = instances.length;\n                    for (let i = start; i < list.length; i++) {\n                        const clone = templateToClone.cloneNode(true);\n                        clone.removeAttribute('x-for');\n                        const keyVal = keysArr ? keysArr[i] : i;\n                        self._loopScopes.set(clone, createScope(list[i], keyVal));\n                        try {\n                            self._parseDirectives(clone);\n                        }\n                        catch { }\n                        frag.appendChild(clone);\n                        instances.push(clone);\n                    }\n                    const ref = instances[start - 1] || placeholder;\n                    if (ref.parentNode)\n                        ref.parentNode.insertBefore(frag, ref.nextSibling);\n                }\n            };\n            const dir = { type: 'for', expression };\n            const effect = self._createEffect(update, dir);\n            dir.update = effect;\n            self._addDirective(placeholder, dir);\n        }\n        _render() {\n            const self = this;\n            for (const directives of self._directives.values()) {\n                for (const dr of directives) {\n                    if (XTOOL_ENABLE_STATIC_DIRECTIVES && dr._static)\n                        continue;\n                    if (dr.update) {\n                        try {\n                            dr.update();\n                        }\n                        catch (error) {\n                            if (!(error instanceof ReferenceError)) { }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    ReactiveComponent._BA = {\n        itemscope: 1, formnovalidate: 1, novalidate: 1, default: 1\n    };\n    const xTool = new XToolFramework();\n    return xTool;\n}();\nif (typeof window !== 'undefined') {\n    const w = window;\n    w.XTool = XToolFramework;\n    w.FyneJS = XToolFramework;\n}\n//# sourceMappingURL=x-tool.js.map"],"mappings":"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","ignoreList":[]}