{"version":3,"file":"x-tool.min.js","names":["ARRAY_ISARRAY","Array","isArray","WkMap","WeakMap","XToolFramework","_Afrom","from","_AisArr","_Okeys","Object","keys","_logErr","STR_STYLE","STR_DISPLAY","STR_NONE","STR_TAGNAME","STR_TEMPLATE","STR_LENGTH","XTOOL_ENABLE_STATIC_DIRECTIVES","d","document","STR_CONTENTS","EV_DELEGATED","head","getElementById","style","createElement","id","textContent","appendChild","PFX","attrName","name","ReactiveComponent","attachToParent","parent","this","_parent","_addChild","_id","framework","_framework","element","_element","el","isBound","_isBound","v","isMounted","_isMounted","isDestroyed","_isDestroyed","_addDirective","directive","existing","_directives","get","push","set","constructor","def","_propUpdateActive","_runningPropEffect","_beforeMountCalled","_children","_computed","_propEffects","_computedCache","Map","_computedDeps","_inverseComputedDeps","_isInComputedEvaluation","_isInMethodExecution","_allEffects","Set","_hasComputed","_cleanupFunctions","_currentInvoker","_lastTimeoutByInvoker","_lastIntervalByInvoker","_lastRafByInvoker","_lastObserverByInvoker","mutation","resize","intersection","_eventListeners","_loopScopes","_expressionCache","_propertyDependencies","_activeEffect","_renderScheduled","_nextTickQueue","_initialClassSets","_propParent","_callLifecycleHook","hookName","hook","_lifecycle","_safeExecute","_runWithGlobalInterception","_addCleanupFunction","fn","wrapper","delete","add","_addEventListenerWithCleanup","event","handler","options","addEventListener","_originalMethods","methods","computed","propEffects","length","mounted","unmounted","destroyed","updated","beforeMount","beforeUnmount","beforeDestroy","_data","_createReactiveData","data","_methods","_bindMethods","callBeforeMount","_onDataChange","_property","clear","effectsToRun","directDeps","i","effect","_scheduleRender","boundMethods","methodName","originalMethod","args","prev","prevInv","_getComputedValue","key","_trackDependency","has","computeFn","dep","value","call","_createMethodContext","propKey","deps","includes","requestAnimationFrame","_render","q","splice","fallback","error","console","bindToElement","completeBinding","getContext","includeComputed","_applyAsyncTemplateResolved","_parseDirectives","_getComponentByElement","_registerElement","child","_removeChild","index","indexOf","src","String","test","body","trim","Function","undefined","_createContextProxy","apply","destroy","self","directives","type","customDirective","unbind","removeEventListener","cleanup","_propEffect","values","idx","_unregisterElement","_deepReactiveCache","queueMicrotask","_unregisterComponent","_initReactiveProps","expr","evalFn","update","obj","ctx","$props","k","processElement","isRoot","hasAttribute","isComponentTag","hasTextOrHtml","forAttr","a","attributes","n","startsWith","_bindDirective","attr","_bindTextInterpolationsIn","_walkElements","nodes","childNodes","node","nodeType","Node","TEXT_NODE","textNode","raw","nodeValue","__x_tool_ti","parentTag","parentElement","tagName","toLowerCase","inCode","segs","open","literal","slice","bs","p","charCodeAt","prefixEnd","repeat","close","hasExpr","some","s","hasEscaped","evaluators","filter","map","_createElementEvaluator","exprIndex","out","val","dirInfo","expression","_createEffect","processor","firstElementChild","next","nextElementSibling","directiveName","isShortBind","removeAttribute","_bindAttributeDirective","_bindSimpleDirective","_bindModelDirective","_bindIfDirective","_bindForDirective","prefix","rest","split","suffix","mods","modifiers","reduce","acc","m","_getCustomDirective","_bindCustomDirective","_bindEventDirective","updateFn","directiveRef","_static","found","evaluator","originalDisplay","_prevShown","innerHTML","property","isCheckbox","isNumeric","isMultiSelect","multiple","Reflect","defineProperty","configurable","enumerable","writable","getValueEvaluator","setValueEvaluator","_createEvaluator","checkboxValue","loopScope","_collectLoopScope","inferCheckboxValue","member","checked","sel","arr","opt","selected","setInputValue","t","parseFloat","getInputValue","currentVal","forEach","$value","placeholder","createComment","parentNode","insertBefore","__x_if_anchorParent","branches","makeActualElement","content","cloneNode","isTemplate","first","firstEval","__x_tool_bound","originalNodes","sib","isElse","isElseIf","getAttribute","branch","active","orig","removeChild","mountBranch","b","__x_if_current","nextSibling","cb","unmountBranch","eventName","trimmed","arrow","_extractArrowFunction","opts","once","passive","capture","onlySelf","shouldPrevent","prevent","shouldStop","stop","isOutside","outside","deferExec","defer","keyAliasMap","enter","esc","escape","space","tab","backspace","del","arrowup","arrowdown","arrowleft","arrowright","home","end","pageup","pagedown","comboRequirements","ctrl","alt","shift","meta","buttonMap","left","middle","right","touchSingle","single","touchMulti","multi","modifierKeys","allowedKeys","aliases","allowedButtons","btn","needKeyCheck","needButtonCheck","needTouchCheck","passesFilters","path","composedPath","tgt","target","contains","TouchEvent","tCount","touches","MouseEvent","button","KeyboardEvent","ctrlKey","altKey","shiftKey","metaKey","runExpr","thisCtx","compiledArrow","_compileArrowForEvent","paramsList","isBlock","mapArgs","_","isStatement","executor","result","createEventHandler","preventDefault","stopPropagation","ev","canDelegate","_getConfig","delegate","remover","_registerDelegated","e","run","comp","ownerDocument","compiled","match","params","Boolean","endsWith","_wrapData","parentKey","getPrototypeOf","prototype","proxy","Proxy","receiver","Symbol","iterator","Error","beforeLen","beforeFirst","beforeLast","ownKeys","had","oldValue","deleteProperty","pc","eff","_includeComputed","specials","$log","$destroy","$forceUpdate","$addCleanupFunction","$nextTick","Promise","resolve","$el","$id","$isMounted","$isDestroyed","$parent","$children","$mutate","prevMethod","propStr","_target","targetElement","component","mergedScope","scopeKeys","gWindow","window","gDocument","cfg","sandbox","sandboxExpressions","allow","allowGlobals","_lastListenerByTarget","wrapTarget","handlerMap","makeKey","JSON","stringify","prop","_receiver","inv","eKey","invMap","evMap","rem","size","invKey","rec","res","querySelector","list","querySelectorAll","doc","w","defaultView","bind","_timeoutRemovers","_intervalRemovers","_rafRemovers","wrapObserverCtor","Orig","kind","Wrapped","inst","store","disconnect","$target","$event","setTimeout","ms","clearTimeout","r","setInterval","clearInterval","cancelAnimationFrame","MutationObserver","ResizeObserver","IntersectionObserver","_t","_name","directiveInfo","attributeName","baseSet","oc","className","cls","elAny","propName","camel","replace","c","toUpperCase","isBooleanProp","hasNonFunctionProp","isKnownBooleanAttr","_BA","base","join","on","tokens","tk","classList","toggle","cssText","assign","boolVal","setAttribute","normalized","parts","cur","anchorParent","merged","scope","_updateElementDirectives","root","Element","itemVar","indexVar","listCode","templateToClone","contextAnchor","listEval","instances","createScope","item","idxOrKey","dir","norm","keysArr","pop","minLen","Math","min","frag","createDocumentFragment","start","clone","ref","dr","itemscope","formnovalidate","novalidate","default","_components","_byEl","_pending","_config","_customDirectives","_namedComponentDefs","_delegated","_delegatedRootBound","registerComponent","definition","_getRegisteredComponentDef","init","config","container","debug","staticDirectives","_hpf","readyState","_applyPrefixInitialCSS","_autoDiscoverComponents","_ensureRootObserver","_ensureDelegation","createComponent","_generateComponentId","componentElements","_bindElementAsComponent","reusable","_instantiateNamedComponent","_processPending","components","lastComponent","maybe","parentForEval","dataExpression","parentCtx","_parseDataExpression","initExpr","existingMounted","isConnected","Date","now","random","toString","substring","componentId","_log","_rootObserver","records","addedNodes","removedNodes","stack","_onComponentSourceChanged","observe","childList","subtree","attributeFilter","source","parentComp","par","props","dynamicPropObj","rawPropExpression","propExpr","initDef","baseData","makeData","compDef","originalChildren","firstChild","template","applyTemplate","tpl","slots","slotEl","matched","replaceChild","tplVal","then","html","nested","cancelBubble","h","captureEvents","bubbleEvents","entry","l","XTool","FyneJS"],"sourceRoot":"./dist","sources":["dist/x-tool.js"],"sourcesContent":["\"use strict\";\nconst ARRAY_ISARRAY = Array.isArray;\nconst WkMap = WeakMap;\nconst FT_C = true;\nconst FT_TI = typeof __FEAT_TEXT_INTERP__ === 'boolean' ? __FEAT_TEXT_INTERP__ : true;\nconst _FT_DR = typeof __FEAT_DEEP_REACTIVE__ === 'boolean' ? __FEAT_DEEP_REACTIVE__ : true;\nconst FT_IFB = typeof __FEAT_IF_BRANCHES__ === 'boolean' ? __FEAT_IF_BRANCHES__ : true;\nconst XToolFramework = function () {\n    const _Afrom = Array.from;\n    const _AisArr = ARRAY_ISARRAY;\n    const _Okeys = Object.keys;\n    const _logErr = (..._args) => { };\n    const STR_STYLE = 'style';\n    const STR_DISPLAY = 'display';\n    const STR_NONE = 'none';\n    const STR_TAGNAME = 'tagName';\n    const STR_TEMPLATE = 'TEMPLATE';\n    const STR_LENGTH = 'length';\n    let XTOOL_ENABLE_STATIC_DIRECTIVES = true;\n    const d = (typeof document !== 'undefined' ? document : null);\n    const STR_CONTENTS = 'contents';\n    const EV_CLICK = 'click', EV_INPUT = 'input', EV_CHANGE = 'change', EV_KEYDOWN = 'keydown', EV_KEYUP = 'keyup';\n    const EV_DELEGATED = [EV_CLICK, EV_INPUT, EV_CHANGE, EV_KEYDOWN, EV_KEYUP];\n    try {\n        if (d && d.head && !d.getElementById('x-tool-initial-css')) {\n            const style = d.createElement(STR_STYLE);\n            style.id = 'x-tool-initial-css';\n            style.textContent = '[x-show],[x-if],[x-else],[x-else-if],[x\\\\:show],[x\\\\:if],[x\\\\:else],[x\\\\:else-if]{display:none;}';\n            d.head.appendChild(style);\n        }\n    }\n    catch { }\n    let PFX = 'x';\n    const attrName = (name) => `${PFX}-${name}`;\n    class XToolFramework {\n        constructor() {\n            this._components = new Map();\n            this._byEl = new WkMap();\n            this._pending = [];\n            this._config = {};\n            this._customDirectives = new Map();\n            this._namedComponentDefs = new Map();\n            this._delegated = new WkMap();\n            this._delegatedRootBound = false;\n            this.directive = (name, directive) => {\n                if (name.startsWith(PFX + '-')) {\n                    throw new Error(`Custom directive names should not start with \"${PFX}-\". Use: XTool.directive(\"my-directive\", ...)`);\n                }\n                this._customDirectives.set(name, directive);\n                return this;\n            };\n            this.registerComponent = (definition) => {\n                if (!definition || !definition.name)\n                    throw new Error('registerComponent requires a name');\n                const name = definition.name.toLowerCase();\n                if (this._namedComponentDefs.has(name))\n                    throw new Error(`Component name \"${name}\" already registered`);\n                this._namedComponentDefs.set(name, definition);\n                return this;\n            };\n            this._getRegisteredComponentDef = (name) => this._namedComponentDefs.get(name.toLowerCase());\n            this._getCustomDirective = (name) => this._customDirectives.get(name);\n            this._getConfig = () => this._config;\n            this.init = (config = {}) => {\n                this._config = { container: 'body', debug: false, staticDirectives: true, ...config };\n                if (typeof this._config.staticDirectives === 'boolean') {\n                    XTOOL_ENABLE_STATIC_DIRECTIVES = this._config.staticDirectives;\n                }\n                const _hpf = this._config.prefix;\n                if (_hpf && typeof _hpf === 'string' && _hpf[STR_LENGTH] > 0) {\n                    PFX = _hpf;\n                }\n                else {\n                    PFX = 'x';\n                }\n                if (d && d.readyState === 'loading') {\n                    d.addEventListener('DOMContentLoaded', () => { this._applyPrefixInitialCSS(); this._autoDiscoverComponents(); const c = d?.querySelector(this._config.container); if (c) {\n                        this._ensureRootObserver(c);\n                        if (this._config.delegate)\n                            this._ensureDelegation(c);\n                    } });\n                }\n                else if (!d || d.readyState === 'complete' || d.readyState === 'interactive') {\n                    this._applyPrefixInitialCSS();\n                    this._autoDiscoverComponents();\n                    const c = d?.querySelector(this._config.container);\n                    if (c) {\n                        this._ensureRootObserver(c);\n                        if (this._config.delegate)\n                            this._ensureDelegation(c);\n                    }\n                }\n                return this;\n            };\n            this.createComponent = (definition) => {\n                const component = new ReactiveComponent(this._generateComponentId(), definition, this);\n                this._components.set(component.id, component);\n                component.callBeforeMount();\n                return component;\n            };\n            this._autoDiscoverComponents = () => {\n                const container = d?.querySelector(this._config.container);\n                if (!container)\n                    return;\n                const componentElements = container.querySelectorAll(`[${attrName('data')}]`);\n                for (const element of componentElements) {\n                    if (!this._getComponentByElement(element))\n                        this._bindElementAsComponent(element);\n                }\n                const reusable = container.querySelectorAll('component[source]');\n                for (const el of reusable) {\n                    if (!this._getComponentByElement(el))\n                        this._instantiateNamedComponent(el);\n                }\n                this._processPending();\n                if (componentElements[STR_LENGTH] === 0 && !this._getComponentByElement(container)) {\n                    const components = _Afrom(this._components.values());\n                    const lastComponent = components[components[STR_LENGTH] - 1];\n                    if (lastComponent && !lastComponent.isBound) {\n                        lastComponent.bindToElement(container);\n                    }\n                }\n            };\n            this._processPending = () => {\n                if (!this._pending[STR_LENGTH])\n                    return;\n                for (const p of this._pending) {\n                    let cur = p.el.parentElement;\n                    let parent;\n                    while (cur && !parent) {\n                        const maybe = this._getComponentByElement(cur);\n                        if (maybe)\n                            parent = maybe;\n                        else\n                            cur = cur.parentElement;\n                    }\n                    if (parent) {\n                        p.comp.attachToParent(parent);\n                    }\n                }\n                for (const p of this._pending)\n                    p.comp.completeBinding();\n                this._pending = [];\n            };\n            this._bindElementAsComponent = (element, parentForEval) => {\n                const dataExpression = element.getAttribute(attrName('data'));\n                let data = {};\n                if (dataExpression) {\n                    element.removeAttribute(attrName('data'));\n                    try {\n                        if (parentForEval) {\n                            let parentCtx = {};\n                            try {\n                                parentCtx = parentForEval._createMethodContext?.() || {};\n                            }\n                            catch {\n                                parentCtx = {};\n                            }\n                            const evalFn = new Function('parent', `with(parent){ return (${dataExpression}) }`);\n                            data = evalFn(parentCtx);\n                        }\n                        else {\n                            data = this._parseDataExpression(dataExpression);\n                        }\n                        if (data.methods) {\n                            data = { methods: data.methods, data: { ...data } };\n                        }\n                        else {\n                            data = { data: { ...data } };\n                        }\n                        if (parentForEval) {\n                            data.data.$parent = parentForEval;\n                        }\n                    }\n                    catch (e) {\n                    }\n                }\n                const comp = this.createComponent(data);\n                comp.element = element;\n                comp.callBeforeMount();\n                this._registerElement(comp.element, comp);\n                this._pending.push({ el: element, comp });\n                const initExpr = element.getAttribute(attrName('init'));\n                if (initExpr) {\n                    element.removeAttribute(attrName('init'));\n                    const existingMounted = comp._lifecycle?.mounted;\n                    comp._lifecycle.mounted = function () {\n                        if (existingMounted) {\n                            try {\n                                existingMounted.call(this);\n                            }\n                            catch { }\n                        }\n                        const evaluator = new Function('ctx', 'with(ctx){' + initExpr + '} ');\n                        queueMicrotask(() => {\n                            if (comp.isDestroyed || !comp.element || !comp.element.isConnected)\n                                return;\n                            try {\n                                const ctx = comp._createMethodContext?.() || comp.getContext?.() || {};\n                                const result = evaluator(ctx);\n                                if (typeof result === 'function') {\n                                    try {\n                                        result();\n                                    }\n                                    catch { }\n                                }\n                            }\n                            catch { }\n                        });\n                    };\n                }\n            };\n            this._generateComponentId = () => 'component_' + Date.now() + '_' + Math.random().toString(36).substring(2, 9);\n            this._parseDataExpression = (expression) => {\n                try {\n                    return new Function('return ' + expression.trim())();\n                }\n                catch {\n                    return {};\n                }\n            };\n            this._unregisterComponent = (componentId) => { this._components.delete(componentId); };\n            this._log = (..._args) => { };\n            this._registerElement = (element, component) => {\n                this._byEl.set(element, component);\n            };\n            this._unregisterElement = (element) => { try {\n                this._byEl.delete(element);\n            }\n            catch { } };\n        }\n        _applyPrefixInitialCSS() {\n            if (!d)\n                return;\n            if (PFX === 'x')\n                return;\n            const id = `x-tool-initial-css-${PFX}`;\n            if (d.head && !d.getElementById(id)) {\n                const style = d.createElement(STR_STYLE);\n                style.id = id;\n                style.textContent = `[${PFX}-show],[${PFX}-if],[${PFX}-else],[${PFX}-else-if],[${PFX}\\\\:show],[${PFX}\\\\:if],[${PFX}\\\\:else],[${PFX}\\\\:else-if]{display:none;}`;\n                d.head.appendChild(style);\n            }\n        }\n        _ensureRootObserver(container) {\n            if (this._rootObserver || typeof MutationObserver === 'undefined')\n                return;\n            this._rootObserver = new MutationObserver(records => {\n                for (const r of records) {\n                    if (r.type === 'childList') {\n                        for (let i = 0; i < r.addedNodes.length; i++) {\n                            const n = r.addedNodes[i];\n                            if (n.nodeType !== 1)\n                                continue;\n                            const el = n;\n                            if (el[STR_TAGNAME] === 'COMPONENT') {\n                                const src = el.getAttribute('source');\n                                if (src && !this._getComponentByElement(el))\n                                    this._instantiateNamedComponent(el);\n                            }\n                        }\n                        for (let i = 0; i < r.removedNodes.length; i++) {\n                            const n = r.removedNodes[i];\n                            if (n.nodeType !== 1)\n                                continue;\n                            const el = n;\n                            queueMicrotask(() => {\n                                if (el.isConnected)\n                                    return;\n                                const stack = [el];\n                                while (stack.length) {\n                                    const cur = stack.pop();\n                                    const comp = this._getComponentByElement(cur);\n                                    if (comp && !comp.isDestroyed) {\n                                        try {\n                                            comp.destroy();\n                                        }\n                                        catch { }\n                                    }\n                                    let child = cur.firstElementChild;\n                                    while (child) {\n                                        stack.push(child);\n                                        child = child.nextElementSibling;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else if (r.type === 'attributes') {\n                        const target = r.target;\n                        if (target && target[STR_TAGNAME] === 'COMPONENT' && r.attributeName === 'source') {\n                            this._onComponentSourceChanged(target);\n                        }\n                    }\n                }\n                this._processPending();\n            });\n            this._rootObserver.observe(container, { childList: true, subtree: true, attributes: true, attributeFilter: ['source'] });\n        }\n        _onComponentSourceChanged(el) {\n            const src = (el.getAttribute('source') || '').trim();\n            const existing = this._getComponentByElement(el);\n            if (!src) {\n                if (existing && !existing.isDestroyed) {\n                    try {\n                        existing.destroy();\n                    }\n                    catch { }\n                }\n                el.innerHTML = '';\n                return;\n            }\n            if (existing && !existing.isDestroyed) {\n                try {\n                    existing.destroy();\n                }\n                catch { }\n            }\n            el.innerHTML = '';\n            this._instantiateNamedComponent(el);\n        }\n        _instantiateNamedComponent(el) {\n            const source = el.getAttribute('source');\n            if (!source)\n                return;\n            const def = this._getRegisteredComponentDef(source);\n            if (!def) {\n                return;\n            }\n            let parentComp;\n            let par = el.parentElement;\n            while (par && !parentComp) {\n                const maybe = this._getComponentByElement(par);\n                if (maybe)\n                    parentComp = maybe;\n                else\n                    par = par.parentElement;\n            }\n            let props = null;\n            let dynamicPropObj = null;\n            let rawPropExpression = null;\n            if (!props)\n                props = {};\n            const propExpr = el.getAttribute(attrName('prop'));\n            if (propExpr) {\n                rawPropExpression = propExpr;\n                if (parentComp) {\n                    try {\n                        const fn = new Function('ctx', 'with(ctx){return (' + propExpr + ')}');\n                        const ctx = parentComp.getContext(true);\n                        dynamicPropObj = fn(ctx);\n                    }\n                    catch {\n                        dynamicPropObj = null;\n                    }\n                }\n                else {\n                    try {\n                        dynamicPropObj = new Function('return (' + propExpr + ')')();\n                    }\n                    catch {\n                        dynamicPropObj = null;\n                    }\n                }\n                if (dynamicPropObj && typeof dynamicPropObj === 'object')\n                    for (const k in dynamicPropObj)\n                        if (!(k in props))\n                            props[k] = String(dynamicPropObj[k]);\n                el.removeAttribute(attrName('prop'));\n            }\n            let baseData = {};\n            if (def.makeData) {\n                try {\n                    baseData = def.makeData(props) || {};\n                }\n                catch {\n                    baseData = {};\n                }\n            }\n            if (def.data) {\n                for (const k in def.data) {\n                    baseData[k] = def.data[k];\n                }\n            }\n            for (const k in props) {\n                if (!(k in baseData))\n                    baseData[k] = props[k];\n            }\n            baseData.$props = props;\n            let initDef;\n            if (typeof def.init === 'function') {\n                try {\n                    const maybe = def.init(props);\n                    initDef = (maybe && typeof maybe === 'object') ? maybe : undefined;\n                }\n                catch {\n                    initDef = undefined;\n                }\n            }\n            const compDef = {\n                data: baseData,\n                methods: { ...(def.methods || {}), ...(initDef?.methods || {}) },\n                computed: { ...(def.computed || {}), ...(initDef?.computed || {}) },\n                propEffects: { ...(def.propEffects || {}), ...(initDef?.propEffects || {}) },\n                mounted: initDef?.mounted || def.mounted,\n                unmounted: initDef?.unmounted || def.unmounted,\n                beforeMount: initDef?.beforeMount || def.beforeMount,\n                beforeUnmount: initDef?.beforeUnmount || def.beforeUnmount,\n                updated: initDef?.updated || def.updated,\n                destroyed: initDef?.destroyed || def.destroyed,\n                beforeDestroy: initDef?.beforeDestroy || def.beforeDestroy\n            };\n            const comp = this.createComponent(compDef);\n            comp.element = el;\n            const originalChildren = [];\n            while (el.firstChild) {\n                const n = el.firstChild;\n                originalChildren.push(n);\n                el.removeChild(n);\n            }\n            if (def.template) {\n                const applyTemplate = (tpl) => {\n                    el.innerHTML = tpl;\n                    const slots = el.querySelectorAll('slot');\n                    if (slots.length) {\n                        for (const slotEl of slots) {\n                            const name = slotEl.getAttribute('name');\n                            let matched = [];\n                            if (name) {\n                                matched = originalChildren.filter(n => n.nodeType === 1 && n.getAttribute('slot') === name);\n                            }\n                            else {\n                                matched = originalChildren.filter(n => n.nodeType !== 1 || !n.hasAttribute('slot'));\n                            }\n                            if (matched.length) {\n                                const frag = d.createDocumentFragment();\n                                for (const n of matched)\n                                    frag.appendChild(n);\n                                slotEl.parentNode?.replaceChild(frag, slotEl);\n                            }\n                        }\n                    }\n                };\n                const tplVal = def.template;\n                if (typeof tplVal === 'string') {\n                    applyTemplate(tplVal);\n                }\n                else if (typeof tplVal === 'function') {\n                    try {\n                        const res = tplVal();\n                        if (res && typeof res.then === 'function') {\n                            el.innerHTML = '';\n                            res.then(html => { applyTemplate(html || ''); try {\n                                comp._applyAsyncTemplateResolved();\n                            }\n                            catch { } });\n                        }\n                        else {\n                            applyTemplate(String(res || ''));\n                        }\n                    }\n                    catch {\n                        el.innerHTML = '';\n                    }\n                }\n                else if (tplVal && typeof tplVal.then === 'function') {\n                    el.innerHTML = '';\n                    tplVal.then(html => { applyTemplate(html || ''); try {\n                        comp._applyAsyncTemplateResolved();\n                    }\n                    catch { } });\n                }\n            }\n            else {\n                for (const n of originalChildren)\n                    el.appendChild(n);\n            }\n            this._registerElement(el, comp);\n            try {\n                const nested = el.querySelectorAll(`[${attrName('data')}]`);\n                for (const node of nested) {\n                    if (!this._getComponentByElement(node))\n                        this._bindElementAsComponent(node, comp);\n                }\n            }\n            catch { }\n            this._pending.push({ el, comp });\n            if (rawPropExpression && parentComp) {\n                try {\n                    comp._initReactiveProps(rawPropExpression, parentComp);\n                }\n                catch { }\n            }\n            this._processPending();\n        }\n        _getComponentByElement(element) { return this._byEl.get(element); }\n        observe(_element) { }\n        _ensureDelegation(container) {\n            if (this._delegatedRootBound)\n                return;\n            const root = container;\n            const handler = (e) => {\n                let cur = e.target;\n                while (cur && cur !== root.parentElement) {\n                    if (e.cancelBubble)\n                        break;\n                    const map = this._delegated.get(cur);\n                    if (map) {\n                        const list = map.get(e.type);\n                        if (list && list.length) {\n                            for (const h of [...list]) {\n                                try {\n                                    if (h.comp && h.comp.isDestroyed) {\n                                        const i = list.indexOf(h);\n                                        if (i > -1)\n                                            list.splice(i, 1);\n                                        continue;\n                                    }\n                                    if (!h.filter || h.filter(e)) {\n                                        h.run(e);\n                                        if (h.once) {\n                                            const idx = list.indexOf(h);\n                                            if (idx > -1)\n                                                list.splice(idx, 1);\n                                        }\n                                    }\n                                }\n                                catch { }\n                            }\n                        }\n                    }\n                    cur = cur.parentElement;\n                }\n            };\n            const captureEvents = ['keydown', 'keyup'];\n            const bubbleEvents = ['click', 'input', 'change'];\n            for (const ev of captureEvents)\n                root.addEventListener(ev, handler, true);\n            for (const ev of bubbleEvents)\n                root.addEventListener(ev, handler, false);\n            this._delegatedRootBound = true;\n        }\n        _registerDelegated(element, event, entry) {\n            let map = this._delegated.get(element);\n            if (!map) {\n                map = new Map();\n                this._delegated.set(element, map);\n            }\n            let list = map.get(event);\n            if (!list) {\n                list = [];\n                map.set(event, list);\n            }\n            list.push(entry);\n            return () => {\n                try {\n                    const m = this._delegated.get(element);\n                    const l = m?.get(event);\n                    if (!l)\n                        return;\n                    const idx = l.indexOf(entry);\n                    if (idx > -1)\n                        l.splice(idx, 1);\n                }\n                catch { }\n            };\n        }\n    }\n    class ReactiveComponent {\n        attachToParent(parent) {\n            this._parent = parent;\n            parent._addChild(this);\n        }\n        get id() { return this._id; }\n        get framework() { return this._framework; }\n        get element() { return this._element; }\n        set element(el) { this._element = el; }\n        get isBound() { return this._isBound; }\n        set isBound(v) { this._isBound = v; }\n        get isMounted() { return this._isMounted; }\n        set isMounted(v) { this._isMounted = v; }\n        get isDestroyed() { return this._isDestroyed; }\n        set isDestroyed(v) { this._isDestroyed = v; }\n        _addDirective(element, directive) {\n            const existing = this._directives.get(element) || [];\n            existing.push(directive);\n            this._directives.set(element, existing);\n        }\n        constructor(id, def, framework) {\n            this._propUpdateActive = false;\n            this._runningPropEffect = false;\n            this._element = null;\n            this._isBound = false;\n            this._isMounted = false;\n            this._isDestroyed = false;\n            this._beforeMountCalled = false;\n            this._children = [];\n            this._parent = null;\n            this._computed = {};\n            this._propEffects = {};\n            this._computedCache = new Map();\n            this._computedDeps = new Map();\n            this._inverseComputedDeps = new Map();\n            this._isInComputedEvaluation = false;\n            this._isInMethodExecution = false;\n            this._allEffects = new Set();\n            this._hasComputed = false;\n            this._directives = new Map();\n            this._cleanupFunctions = new Set();\n            this._currentInvoker = null;\n            this._lastTimeoutByInvoker = new Map();\n            this._lastIntervalByInvoker = new Map();\n            this._lastRafByInvoker = new Map();\n            this._lastObserverByInvoker = {\n                mutation: new Map(),\n                resize: new Map(),\n                intersection: new Map()\n            };\n            this._eventListeners = [];\n            this._loopScopes = new WkMap();\n            this._expressionCache = new Map();\n            this._propertyDependencies = new Map();\n            this._activeEffect = null;\n            this._renderScheduled = false;\n            this._nextTickQueue = [];\n            this._initialClassSets = new WkMap();\n            this._propParent = null;\n            this._callLifecycleHook = (hookName) => {\n                const hook = this._lifecycle[hookName];\n                if (typeof hook === 'function') {\n                    this._safeExecute(() => this._runWithGlobalInterception(hook, []));\n                }\n            };\n            this._addCleanupFunction = (fn) => {\n                if (typeof fn !== 'function')\n                    return undefined;\n                const wrapper = () => {\n                    try {\n                        fn();\n                    }\n                    catch {\n                        _logErr();\n                    }\n                    try {\n                        this._cleanupFunctions.delete(wrapper);\n                    }\n                    catch { }\n                };\n                this._cleanupFunctions.add(wrapper);\n                return () => { try {\n                    this._cleanupFunctions.delete(wrapper);\n                }\n                catch { } };\n            };\n            this._addEventListenerWithCleanup = (element, event, handler, options) => {\n                element.addEventListener(event, handler, options);\n                this._eventListeners.push({ element, event, handler, options });\n            };\n            this._id = id;\n            this._framework = framework;\n            this._originalMethods = def.methods || {};\n            this._computed = def.computed || {};\n            this._propEffects = def.propEffects || {};\n            this._hasComputed = !!(def.computed && Object.keys(def.computed).length);\n            this._lifecycle = {\n                mounted: def.mounted,\n                unmounted: def.unmounted || def.destroyed,\n                updated: def.updated,\n                beforeMount: def.beforeMount,\n                beforeUnmount: def.beforeUnmount || def.beforeDestroy\n            };\n            this._data = this._createReactiveData(def.data || {});\n            this._methods = this._bindMethods();\n        }\n        callBeforeMount() {\n            if (!this._beforeMountCalled) {\n                this._callLifecycleHook('beforeMount');\n                this._beforeMountCalled = true;\n            }\n        }\n        _onDataChange(_property) {\n            if (this.isBound) {\n                if (FT_C)\n                    this._computedCache.clear();\n                const effectsToRun = new Set();\n                const directDeps = this._propertyDependencies.get(_property);\n                if (directDeps)\n                    for (let i = 0; i < directDeps.length; i++)\n                        effectsToRun.add(directDeps[i]);\n                for (const effect of effectsToRun)\n                    this._safeExecute(effect);\n                if (this._hasComputed || !XTOOL_ENABLE_STATIC_DIRECTIVES) {\n                    this._scheduleRender();\n                }\n                this._callLifecycleHook('updated');\n            }\n        }\n        _bindMethods() {\n            const boundMethods = {};\n            for (const methodName in this._originalMethods) {\n                const originalMethod = this._originalMethods[methodName];\n                boundMethods[methodName] = (...args) => {\n                    const prev = this._isInMethodExecution;\n                    const prevInv = this._currentInvoker;\n                    this._isInMethodExecution = true;\n                    this._currentInvoker = methodName;\n                    try {\n                        return this._safeExecute(() => this._runWithGlobalInterception(originalMethod, args));\n                    }\n                    finally {\n                        this._isInMethodExecution = prev;\n                        this._currentInvoker = prevInv;\n                    }\n                };\n            }\n            return boundMethods;\n        }\n        _getComputedValue(key) {\n            if (!FT_C)\n                return undefined;\n            this._trackDependency(key);\n            if (this._computedCache.has(key))\n                return this._computedCache.get(key);\n            try {\n                const computeFn = this._computed[key];\n                this._isInComputedEvaluation = true;\n                const prev = this._computedDeps.get(key);\n                if (prev) {\n                    for (const dep of prev) {\n                        const set = this._inverseComputedDeps.get(dep);\n                        if (set)\n                            set.delete(key);\n                    }\n                }\n                this._computedDeps.set(key, new Set());\n                const value = computeFn.call(this._createMethodContext());\n                this._isInComputedEvaluation = false;\n                this._computedCache.set(key, value);\n                return value;\n            }\n            catch {\n                this._isInComputedEvaluation = false;\n                return undefined;\n            }\n        }\n        _trackDependency(propKey) {\n            if (!this._activeEffect)\n                return;\n            let deps = this._propertyDependencies.get(propKey);\n            if (!deps) {\n                deps = [];\n                this._propertyDependencies.set(propKey, deps);\n            }\n            if (!deps.includes(this._activeEffect))\n                deps.push(this._activeEffect);\n        }\n        _scheduleRender() {\n            if (this._renderScheduled)\n                return;\n            this._renderScheduled = true;\n            requestAnimationFrame(() => {\n                this._renderScheduled = false;\n                this._render();\n                if (this._nextTickQueue && this._nextTickQueue.length) {\n                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                    for (const fn of q) {\n                        try {\n                            fn();\n                        }\n                        catch { }\n                    }\n                }\n            });\n        }\n        _safeExecute(fn, fallback) {\n            try {\n                return fn();\n            }\n            catch (error) {\n                console.error(error);\n                return fallback;\n            }\n        }\n        bindToElement(element) {\n            if (this._isBound)\n                return;\n            this._element = element;\n            if (!this._beforeMountCalled) {\n                this.callBeforeMount();\n            }\n            this.completeBinding();\n        }\n        getContext(includeComputed = true) {\n            return this._createMethodContext(includeComputed);\n        }\n        _applyAsyncTemplateResolved() {\n            if (!this._element)\n                return;\n            try {\n                this._parseDirectives(this._element);\n            }\n            catch { }\n            this._scheduleRender();\n        }\n        completeBinding() {\n            if (this._isBound || !this._element)\n                return;\n            if (!this._framework._getComponentByElement(this._element))\n                this._framework._registerElement(this._element, this);\n            this._isBound = true;\n            this._isMounted = true;\n            this._parseDirectives(this._element);\n            this._render();\n            this._callLifecycleHook('mounted');\n        }\n        _addChild(child) {\n            if (!this._children.includes(child)) {\n                this._children.push(child);\n            }\n        }\n        _removeChild(child) {\n            const index = this._children.indexOf(child);\n            if (index > -1) {\n                this._children.splice(index, 1);\n            }\n        }\n        _runWithGlobalInterception(fn, args) {\n            try {\n                const src = String(fn);\n                if (!/\\[native code\\]/.test(src)) {\n                    let body = src.trim();\n                    if (!/^function[\\s\\(]/.test(body) && !/^[\\w\\$_][\\w\\d\\$_]*\\s*=>/.test(body) && !/^\\(.*?\\)\\s*=>/.test(body)) {\n                        body = 'function ' + body;\n                    }\n                    const trySrc = 'with(ctx){ const f = (' + body + '); return f.apply(thisArg, argsArray); }';\n                    const wrapper = new Function('thisArg', 'argsArray', 'ctx', trySrc);\n                    return wrapper.call(undefined, this._createMethodContext(), args, this._createContextProxy(undefined, undefined));\n                }\n            }\n            catch {\n            }\n            return fn.apply(this._createMethodContext(), args);\n        }\n        destroy() {\n            const self = this;\n            if (self._isDestroyed)\n                return;\n            self._callLifecycleHook('beforeUnmount');\n            for (const child of self._children) {\n                if (!child.isDestroyed)\n                    child.destroy();\n            }\n            if (self._parent) {\n                self._parent._removeChild(self);\n            }\n            for (const [element, directives] of self._directives) {\n                for (const directive of directives) {\n                    if (directive.type === 'custom' && directive.customDirective?.unbind) {\n                        try {\n                            directive.customDirective.unbind(element, self);\n                        }\n                        catch {\n                            _logErr();\n                        }\n                    }\n                }\n            }\n            self._directives.clear();\n            for (const { element, event, handler, options } of self._eventListeners) {\n                element.removeEventListener(event, handler, options);\n            }\n            self._eventListeners = [];\n            for (const cleanup of Array.from(self._cleanupFunctions)) {\n                try {\n                    cleanup();\n                }\n                catch {\n                    _logErr();\n                }\n            }\n            self._cleanupFunctions.clear();\n            self._computedCache.clear();\n            self._expressionCache.clear();\n            self._propertyDependencies.clear();\n            if (self._propParent && self._propEffect) {\n                for (const deps of self._propParent._propertyDependencies.values()) {\n                    const idx = deps.indexOf(self._propEffect);\n                    if (idx > -1)\n                        deps.splice(idx, 1);\n                }\n            }\n            if (self._element)\n                self._framework._unregisterElement(self._element);\n            self._callLifecycleHook('unmounted');\n            self._isDestroyed = true;\n            self._isMounted = false;\n            self._isBound = false;\n            self._children = [];\n            self._parent = null;\n            this._deepReactiveCache = new WkMap;\n            self._element = null;\n            queueMicrotask(() => self._framework._unregisterComponent(self._id));\n        }\n        _initReactiveProps(expr, parent) {\n            if (!expr || !parent)\n                return;\n            this._propParent = parent;\n            let evalFn;\n            try {\n                evalFn = new Function('ctx', 'with(ctx){return (' + expr + ')}');\n            }\n            catch {\n                return;\n            }\n            const update = () => {\n                parent._activeEffect = update;\n                let obj;\n                try {\n                    const ctx = parent.getContext(true);\n                    obj = evalFn(ctx);\n                }\n                catch {\n                    obj = null;\n                }\n                parent._activeEffect = null;\n                if (obj && typeof obj === 'object') {\n                    this._data.$props = this._data.$props || {};\n                    this._propUpdateActive = true;\n                    for (const k in obj) {\n                        const v = obj[k];\n                        if (this._data[k] !== v)\n                            this._data[k] = v;\n                    }\n                    this._propUpdateActive = false;\n                }\n            };\n            this._propEffect = update;\n            update();\n        }\n        _parseDirectives(element) {\n            const self = this;\n            let processedElements = 0;\n            const processElement = (el, isRoot = false) => {\n                if (!isRoot && (el.hasAttribute(attrName('data')) || this._framework._getComponentByElement(el))) {\n                    return false;\n                }\n                const isComponentTag = el[STR_TAGNAME] === 'COMPONENT';\n                const directives = [];\n                let hasTextOrHtml = false;\n                let forAttr = null;\n                for (const a of el.attributes) {\n                    const n = a.name;\n                    if (n.startsWith(PFX + '-') || n.startsWith(PFX + ':')) {\n                        directives.push(a);\n                        if (!hasTextOrHtml && (n === attrName('text') || n === attrName('html')))\n                            hasTextOrHtml = true;\n                        if (!forAttr && n === attrName('for'))\n                            forAttr = a;\n                    }\n                }\n                if (directives.length > 0) {\n                    processedElements++;\n                    if (forAttr) {\n                        self._bindDirective(el, forAttr.name, forAttr.value);\n                        return false;\n                    }\n                    for (const attr of directives)\n                        self._bindDirective(el, attr.name, attr.value);\n                }\n                if (FT_TI && !hasTextOrHtml)\n                    self._bindTextInterpolationsIn(el);\n                return isRoot || !isComponentTag;\n            };\n            processElement(element, true);\n            self._walkElements(element, processElement);\n        }\n        _bindTextInterpolationsIn(el) {\n            const nodes = Array.from(el.childNodes);\n            for (const node of nodes) {\n                if (node.nodeType !== Node.TEXT_NODE)\n                    continue;\n                const textNode = node;\n                const raw = textNode.nodeValue || '';\n                if (textNode.__x_tool_ti || raw.indexOf('{{') === -1)\n                    continue;\n                const parentTag = (textNode.parentElement?.tagName || '').toLowerCase();\n                const inCode = parentTag === 'code' || parentTag === 'pre';\n                const segs = [];\n                let i = 0;\n                while (i < raw.length) {\n                    const open = raw.indexOf('{{', i);\n                    if (open === -1) {\n                        segs.push({ literal: raw.slice(i) });\n                        break;\n                    }\n                    let bs = 0;\n                    for (let p = open - 1; p >= 0 && raw.charCodeAt(p) === 92; p--)\n                        bs++;\n                    if (bs > 0) {\n                        const prefixStart = i;\n                        const prefixEnd = open - bs;\n                        if (prefixEnd > prefixStart)\n                            segs.push({ literal: raw.slice(prefixStart, prefixEnd) });\n                        if (bs > 1)\n                            segs.push({ literal: '\\\\'.repeat(bs - 1) });\n                        const close = raw.indexOf('}}', open + 2);\n                        if (close === -1) {\n                            segs.push({ literal: raw.slice(open, raw.length) });\n                            i = raw.length;\n                            break;\n                        }\n                        segs.push({ literal: raw.slice(open, close + 2) });\n                        i = close + 2;\n                        continue;\n                    }\n                    else {\n                        if (open > i)\n                            segs.push({ literal: raw.slice(i, open) });\n                        const close = raw.indexOf('}}', open + 2);\n                        if (close === -1) {\n                            segs.push({ literal: raw.slice(open) });\n                            i = raw.length;\n                            break;\n                        }\n                        const expr = raw.slice(open + 2, close).trim();\n                        if (expr)\n                            segs.push({ expr });\n                        else\n                            segs.push({ literal: '' });\n                        i = close + 2;\n                        continue;\n                    }\n                }\n                const hasExpr = segs.some(s => s.expr);\n                const hasEscaped = segs.some(s => s.literal && s.literal.includes('{{'));\n                if (!hasExpr && !hasEscaped)\n                    continue;\n                textNode.__x_tool_ti = true;\n                const evaluators = hasExpr && !inCode ? segs.filter(s => s.expr).map(s => this._createElementEvaluator(s.expr, el)) : [];\n                let exprIndex = 0;\n                const update = () => {\n                    exprIndex = 0;\n                    let out = '';\n                    for (const s of segs) {\n                        if (s.literal != null) {\n                            out += s.literal;\n                        }\n                        else if (s.expr) {\n                            if (inCode) {\n                                out += '{{ ' + s.expr + ' }}';\n                            }\n                            else {\n                                const val = evaluators[exprIndex++]();\n                                out += (val == null ? '' : String(val));\n                            }\n                        }\n                    }\n                    if (textNode.textContent !== out)\n                        textNode.textContent = out;\n                };\n                const dirInfo = { type: 'text-interpolation', expression: raw, update: undefined };\n                this._addDirective(el, dirInfo);\n                const effect = this._createEffect(update, dirInfo);\n                dirInfo.update = effect;\n            }\n        }\n        _walkElements(parent, processor) {\n            let child = parent.firstElementChild;\n            while (child) {\n                const next = child.nextElementSibling;\n                if (processor(child))\n                    this._walkElements(child, processor);\n                child = next;\n            }\n        }\n        _bindDirective(element, directiveName, expression) {\n            const self = this;\n            const isShortBind = directiveName.startsWith(PFX + ':');\n            const type = directiveName.slice(PFX.length + 1);\n            if (isShortBind || type === 'class' || type === STR_STYLE) {\n                element.removeAttribute(directiveName);\n                return self._bindAttributeDirective(element, type, expression);\n            }\n            if (type === 'text' || type === 'html' || type === 'show') {\n                element.removeAttribute(directiveName);\n                return self._bindSimpleDirective(element, expression, type);\n            }\n            const handled = type === 'model' ? (element.removeAttribute(directiveName), self._bindModelDirective(element, expression), true)\n                : type === 'if' ? (element.removeAttribute(directiveName), self._bindIfDirective(element, expression), true)\n                    : type === 'for' ? (element.removeAttribute(directiveName), self._bindForDirective(element, expression), true)\n                        : false;\n            if (handled)\n                return;\n            if (type.indexOf(':') > -1) {\n                const [prefix, rest] = type.split(':', 2);\n                const [suffix, ...mods] = rest.split('.');\n                const modifiers = mods.reduce((acc, m) => { if (m)\n                    acc[m] = true; return acc; }, {});\n                if (prefix === 'on') {\n                    element.removeAttribute(directiveName);\n                    const customDirective = self.framework._getCustomDirective(suffix);\n                    return customDirective\n                        ? self._bindCustomDirective(element, suffix, expression, customDirective, modifiers)\n                        : self._bindEventDirective(element, suffix, expression, modifiers);\n                }\n                element.removeAttribute(directiveName);\n                return self._bindAttributeDirective(element, suffix, expression);\n            }\n        }\n        _createEffect(updateFn, directiveRef) {\n            const effect = () => {\n                this._activeEffect = effect;\n                try {\n                    updateFn();\n                }\n                finally {\n                    this._activeEffect = null;\n                }\n            };\n            effect();\n            this._allEffects.add(effect);\n            if (XTOOL_ENABLE_STATIC_DIRECTIVES && directiveRef && directiveRef._static === undefined) {\n                let found = false;\n                for (const deps of this._propertyDependencies.values()) {\n                    if (deps.includes(effect)) {\n                        found = true;\n                        break;\n                    }\n                }\n                directiveRef._static = !found;\n            }\n            return effect;\n        }\n        _bindSimpleDirective(element, expression, type) {\n            if (type === 'class' || type === STR_STYLE) {\n                return this._bindAttributeDirective(element, type, expression);\n            }\n            const evaluator = this._createElementEvaluator(expression, element);\n            let originalDisplay;\n            if (type === 'show') {\n                const el = element;\n                originalDisplay = el.style[STR_DISPLAY] !== STR_NONE ? el.style[STR_DISPLAY] : undefined;\n            }\n            let _prevShown = undefined;\n            const update = () => {\n                const value = evaluator();\n                const el = element;\n                switch (type) {\n                    case 'text':\n                        el.textContent = String(value);\n                        break;\n                    case 'html':\n                        el.innerHTML = String(value || '');\n                        break;\n                    case 'show':\n                        const next = !!value;\n                        if (_prevShown === next)\n                            return;\n                        _prevShown = next;\n                        el.style[STR_DISPLAY] = next ? (originalDisplay || '') : STR_NONE;\n                        break;\n                }\n            };\n            const dirInfo = { type, expression, update: undefined, originalDisplay };\n            this._addDirective(element, dirInfo);\n            const effect = this._createEffect(update, dirInfo);\n            dirInfo.update = effect;\n        }\n        _bindModelDirective(element, property) {\n            const isCheckbox = element.type === 'checkbox';\n            const isNumeric = element.type === 'number' || element.type === 'range';\n            const isMultiSelect = element.tagName === 'SELECT' && element.multiple === true;\n            if (!Reflect.has(this._data, property)) {\n                Reflect.defineProperty(this._data, property, {\n                    'configurable': true,\n                    'enumerable': true,\n                    'writable': true\n                });\n            }\n            const getValueEvaluator = this._createElementEvaluator(property, element);\n            const setValueEvaluator = this._createEvaluator(`${property} = $value`, true);\n            const inferCheckboxValue = () => {\n                if (element.hasAttribute('value'))\n                    return element.value;\n                const loopScope = this._collectLoopScope(element);\n                if (loopScope) {\n                    const keys = Object.keys(loopScope);\n                    if (keys.length === 1)\n                        return loopScope[keys[0]];\n                }\n                return element.value;\n            };\n            const checkboxValue = isCheckbox ? inferCheckboxValue() : undefined;\n            const getInputValue = () => {\n                if (isCheckbox) {\n                    if (Array.isArray(getValueEvaluator()) && checkboxValue !== undefined) {\n                        return element.checked ? checkboxValue : undefined;\n                    }\n                    if (element.hasAttribute('value'))\n                        return element.checked ? element.value : undefined;\n                    return element.checked;\n                }\n                if (isMultiSelect) {\n                    const sel = element;\n                    const values = [];\n                    for (let i = 0; i < sel.options.length; i++) {\n                        const opt = sel.options[i];\n                        if (opt.selected)\n                            values.push(opt.value);\n                    }\n                    return values;\n                }\n                return isNumeric ? parseFloat(element.value) || 0 : element.value;\n            };\n            const setInputValue = (value) => {\n                if (isCheckbox) {\n                    if (Array.isArray(value)) {\n                        const member = element.hasAttribute('value') ? element.value : checkboxValue;\n                        element.checked = member != null ? value.includes(member) : false;\n                    }\n                    else {\n                        element.checked = !!value;\n                    }\n                    return;\n                }\n                if (isMultiSelect) {\n                    const sel = element;\n                    const arr = Array.isArray(value) ? value : [];\n                    for (let i = 0; i < sel.options.length; i++) {\n                        const opt = sel.options[i];\n                        opt.selected = arr.includes(opt.value);\n                    }\n                    return;\n                }\n                element.value = String(value ?? (isNumeric ? 0 : ''));\n            };\n            this._createEffect(() => setInputValue(getValueEvaluator()));\n            const ctx = this._createContextProxy(undefined, element);\n            const updateData = () => {\n                const raw = getInputValue();\n                const currentVal = this._safeExecute(() => getValueEvaluator());\n                if (isCheckbox && Array.isArray(currentVal)) {\n                    const arr = currentVal;\n                    const member = element.hasAttribute('value') ? element.value : checkboxValue;\n                    if (member !== undefined) {\n                        const idx = arr.indexOf(member);\n                        if (element.checked) {\n                            if (idx === -1)\n                                arr.push(member);\n                        }\n                        else if (idx > -1) {\n                            arr.splice(idx, 1);\n                        }\n                    }\n                }\n                else if (isMultiSelect && Array.isArray(currentVal)) {\n                    const arr = currentVal;\n                    arr.splice(0, arr.length);\n                    raw.forEach(v => arr.push(v));\n                }\n                else {\n                    ctx.$value = raw;\n                    this._safeExecute(() => { setValueEvaluator.call(this._createMethodContext(), ctx); });\n                }\n            };\n            const t = element.type;\n            const eventType = (element[STR_TAGNAME] === 'SELECT' || t === 'checkbox' || t === 'radio' || t === 'file') ? 'change' : 'input';\n            this._addEventListenerWithCleanup(element, eventType, updateData);\n            this._addDirective(element, { type: 'model', property });\n        }\n        _bindIfDirective(element, expression) {\n            const self = this;\n            const placeholder = d.createComment('x-if');\n            element.parentNode?.insertBefore(placeholder, element);\n            element.__x_if_anchorParent = placeholder.parentElement || null;\n            const branches = [];\n            const makeActualElement = (el) => {\n                if (el[STR_TAGNAME] === STR_TEMPLATE) {\n                    const wrapper = d.createElement('div');\n                    wrapper.style[STR_DISPLAY] = STR_CONTENTS;\n                    wrapper.appendChild(el.content.cloneNode(true));\n                    return { el: wrapper, isTemplate: true };\n                }\n                return { el: el, isTemplate: false };\n            };\n            const first = makeActualElement(element);\n            const firstEval = self._createElementEvaluator(expression, element);\n            branches.push({ el: first.el, test: firstEval, isTemplate: first.isTemplate });\n            if (!first.isTemplate)\n                first.el.__x_tool_bound = true;\n            const originalNodes = [element];\n            if (FT_IFB) {\n                if (FT_IFB) {\n                    let sib = element.nextElementSibling;\n                    while (sib) {\n                        const isElse = sib.hasAttribute('x-else');\n                        const isElseIf = sib.hasAttribute('x-else-if');\n                        if (!isElse && !isElseIf)\n                            break;\n                        if (sib.hasAttribute('x-else-if')) {\n                            const attr = sib.getAttribute('x-else-if') || '';\n                            const branch = makeActualElement(sib);\n                            const evalFn = self._createElementEvaluator((attr || '').trim(), sib);\n                            branches.push({ el: branch.el, test: evalFn, isTemplate: branch.isTemplate });\n                            if (!branch.isTemplate)\n                                branch.el.__x_tool_bound = true;\n                        }\n                        else {\n                            const branch = makeActualElement(sib);\n                            branches.push({ el: branch.el, test: null, isTemplate: branch.isTemplate });\n                            if (!branch.isTemplate)\n                                branch.el.__x_tool_bound = true;\n                        }\n                        sib.removeAttribute('x-else');\n                        sib.removeAttribute('x-else-if');\n                        originalNodes.push(sib);\n                        sib = sib.nextElementSibling;\n                    }\n                }\n            }\n            let active = -1;\n            for (const orig of originalNodes) {\n                if (orig.parentNode)\n                    orig.parentNode.removeChild(orig);\n            }\n            const mountBranch = (idx) => {\n                if (idx < 0)\n                    return;\n                const b = branches[idx];\n                if (!b.el.__x_tool_bound) {\n                    self._parseDirectives(b.el);\n                    b.el.__x_tool_bound = true;\n                }\n                element.__x_if_current?.parentNode?.removeChild(element.__x_if_current);\n                if (!b.el.parentNode) {\n                    placeholder.parentNode?.insertBefore(b.el, placeholder.nextSibling);\n                }\n                element.__x_if_current = b.el;\n                active = idx;\n            };\n            const unmountBranch = (idx, cb) => {\n                if (idx < 0) {\n                    if (cb)\n                        cb();\n                    return;\n                }\n                const b = branches[idx];\n                if (b.el.parentNode) {\n                    if (b.el.parentNode)\n                        b.el.parentNode.removeChild(b.el);\n                    if (cb)\n                        cb();\n                }\n                else if (cb)\n                    cb();\n                active = -1;\n            };\n            const update = () => {\n                let next = -1;\n                for (let i = 0; i < branches[STR_LENGTH]; i++) {\n                    const b = branches[i];\n                    const pass = b.test ? !!b.test() : true;\n                    if (pass) {\n                        next = i;\n                        break;\n                    }\n                }\n                if (next === active)\n                    return;\n                if (active !== -1) {\n                    unmountBranch(active, () => mountBranch(next));\n                }\n                else {\n                    mountBranch(next);\n                }\n            };\n            const effect = self._createEffect(update);\n            self._addDirective(element, { type: 'if', expression, update: effect });\n        }\n        _bindEventDirective(element, eventName, expression, modifiers) {\n            const self = this;\n            const trimmed = (expression || '').trim();\n            const arrow = self._extractArrowFunction(trimmed);\n            const opts = modifiers ? {\n                once: !!modifiers.once,\n                passive: !!modifiers.passive,\n                capture: !!modifiers.capture,\n            } : undefined;\n            const onlySelf = !!modifiers?.self;\n            const shouldPrevent = !!modifiers?.prevent;\n            const shouldStop = !!modifiers?.stop;\n            const isOutside = !!modifiers?.outside;\n            const deferExec = !!modifiers?.defer;\n            const keyAliasMap = {\n                enter: ['enter'],\n                esc: ['escape', 'esc'],\n                escape: ['escape', 'esc'],\n                space: [' ', 'space', 'spacebar'],\n                tab: ['tab'],\n                backspace: ['backspace'],\n                delete: ['delete', 'del'],\n                del: ['delete', 'del'],\n                arrowup: ['arrowup', 'up'],\n                arrowdown: ['arrowdown', 'down'],\n                arrowleft: ['arrowleft', 'left'],\n                arrowright: ['arrowright', 'right'],\n                home: ['home'],\n                end: ['end'],\n                pageup: ['pageup'],\n                pagedown: ['pagedown']\n            };\n            const comboRequirements = {\n                ctrl: !!modifiers?.ctrl,\n                alt: !!modifiers?.alt,\n                shift: !!modifiers?.shift,\n                meta: !!modifiers?.meta,\n            };\n            const buttonMap = { left: 0, middle: 1, right: 2 };\n            const touchSingle = !!modifiers?.single;\n            const touchMulti = !!modifiers?.multi;\n            const modifierKeys = modifiers ? _Okeys(modifiers) : [];\n            const allowedKeys = [];\n            for (const m of modifierKeys) {\n                const aliases = keyAliasMap[m.toLowerCase()];\n                if (aliases)\n                    allowedKeys.push(...aliases);\n            }\n            const allowedButtons = [];\n            for (const m of modifierKeys) {\n                const btn = buttonMap[m.toLowerCase()];\n                if (btn !== undefined)\n                    allowedButtons.push(btn);\n            }\n            const needKeyCheck = allowedKeys.length > 0 || comboRequirements.ctrl || comboRequirements.alt || comboRequirements.shift || comboRequirements.meta;\n            const needButtonCheck = allowedButtons.length > 0;\n            const needTouchCheck = touchSingle || touchMulti;\n            const passesFilters = (event) => {\n                const path = event.composedPath ? event.composedPath() : null;\n                const tgt = (path && path.length ? path[0] : event.target);\n                if (isOutside) {\n                    if (!tgt)\n                        return false;\n                    if (element instanceof Node && (element === tgt || element.contains(tgt)))\n                        return false;\n                }\n                if (onlySelf && event.target !== element)\n                    return false;\n                if (needTouchCheck) {\n                    if (event instanceof TouchEvent) {\n                        const tCount = event.touches.length;\n                        if (touchSingle && tCount !== 1)\n                            return false;\n                        if (touchMulti && tCount < 2)\n                            return false;\n                    }\n                    else\n                        return false;\n                }\n                if (needButtonCheck) {\n                    if (event instanceof MouseEvent) {\n                        if (!allowedButtons.includes(event.button))\n                            return false;\n                    }\n                    else\n                        return false;\n                }\n                if (needKeyCheck) {\n                    if (!(event instanceof KeyboardEvent))\n                        return false;\n                    const k = (event.key || '').toLowerCase();\n                    if (allowedKeys.length > 0 && !allowedKeys.includes(k))\n                        return false;\n                    if (comboRequirements.ctrl && !event.ctrlKey)\n                        return false;\n                    if (comboRequirements.alt && !event.altKey)\n                        return false;\n                    if (comboRequirements.shift && !event.shiftKey)\n                        return false;\n                    if (comboRequirements.meta && !event.metaKey)\n                        return false;\n                }\n                return true;\n            };\n            const hasExpr = !!trimmed;\n            let runExpr = null;\n            const thisCtx = self._createMethodContext();\n            if (arrow) {\n                const compiledArrow = self._compileArrowForEvent(arrow.paramsList, arrow.body, arrow.isBlock);\n                const mapArgs = arrow.paramsList.length\n                    ? (event) => arrow.paramsList.map((_, idx) => (idx === 0 ? event : idx === 1 ? element : undefined))\n                    : () => [];\n                runExpr = (event) => {\n                    const ctx = self._createContextProxy(event, element);\n                    compiledArrow.call(thisCtx, ctx, ...mapArgs(event));\n                };\n            }\n            else if (hasExpr) {\n                const isStatement = trimmed.includes(';');\n                const executor = self._createEvaluator(trimmed, isStatement);\n                runExpr = (event) => {\n                    const ctx = self._createContextProxy(event, element);\n                    const result = executor.call(thisCtx, ctx);\n                    if (typeof result === 'function')\n                        result.call(thisCtx, event);\n                };\n            }\n            const createEventHandler = (event) => {\n                if (!passesFilters(event))\n                    return;\n                if (shouldPrevent && typeof event.preventDefault === 'function')\n                    event.preventDefault();\n                if (shouldStop && typeof event.stopPropagation === 'function')\n                    event.stopPropagation();\n                if (!runExpr)\n                    return;\n                if (deferExec && typeof queueMicrotask === 'function') {\n                    const ev = event;\n                    queueMicrotask(() => self._safeExecute(() => runExpr(ev)));\n                    return;\n                }\n                self._safeExecute(() => runExpr(event));\n            };\n            const cfg = this.framework._getConfig();\n            const canDelegate = !!cfg.delegate && EV_DELEGATED.includes(eventName);\n            if (!isOutside && canDelegate) {\n                const remover = this.framework._registerDelegated(element, eventName, { filter: (e) => passesFilters(e), run: (e) => createEventHandler(e), once: !!modifiers?.once, comp: this });\n                this._addCleanupFunction(remover);\n            }\n            else {\n                const target = isOutside ? (element?.ownerDocument || d || document) : element;\n                self._addEventListenerWithCleanup(target, eventName, createEventHandler, opts);\n            }\n        }\n        _createEvaluator(expression, isStatement = false) {\n            const key = `${isStatement ? 's' : 'r'}:${expression}`;\n            let fn = this._expressionCache.get(key);\n            if (!fn) {\n                fn = new Function('ctx', `with(ctx){${isStatement ? expression : `return (${expression})`}}`);\n                this._expressionCache.set(key, fn);\n            }\n            return fn;\n        }\n        _createElementEvaluator(expression, element) {\n            const self = this;\n            const compiled = self._createEvaluator(expression);\n            return () => this._safeExecute(() => compiled.call(self._createMethodContext(), self._createContextProxy(undefined, element)));\n        }\n        _extractArrowFunction(expression) {\n            let m = expression.match(/^\\s*\\(\\s*([^)]*?)\\s*\\)\\s*=>\\s*([\\s\\S]+)$/);\n            if (!m)\n                m = expression.match(/^\\s*([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*=>\\s*([\\s\\S]+)$/);\n            if (!m)\n                return null;\n            const params = (m[1] || '')\n                .split(',')\n                .map(p => p.trim())\n                .filter(Boolean);\n            const body = (m[2] || '').trim();\n            const isBlock = body.startsWith('{') && body.endsWith('}');\n            const finalBody = isBlock ? body.slice(1, -1) : body;\n            return { paramsList: params, body: finalBody, isBlock };\n        }\n        _compileArrowForEvent(params, body, isBlock) {\n            const content = isBlock ? body : 'return ( ' + body + ' );';\n            return new Function('ctx', ...params, 'with(ctx){ ' + content + ' }');\n        }\n        _wrapData(data, parentKey) {\n            if (!(Object.getPrototypeOf(data) === Object.prototype || ARRAY_ISARRAY(data)))\n                return data;\n            const self = this;\n            if (!this._deepReactiveCache)\n                this._deepReactiveCache = new WkMap();\n            if (this._deepReactiveCache.has(data))\n                return this._deepReactiveCache.get(data);\n            const proxy = new Proxy(data, {\n                get: (target, p, receiver) => {\n                    if (ARRAY_ISARRAY(target)) {\n                        if (p === Symbol.iterator) {\n                            self._trackDependency(parentKey);\n                            return Reflect.get(target, p, receiver);\n                        }\n                        if (p === 'length' || (typeof p === 'string' && /^\\d+$/.test(p))) {\n                            self._trackDependency(parentKey);\n                        }\n                    }\n                    else {\n                        self._trackDependency(parentKey);\n                    }\n                    const value = Reflect.get(target, p, receiver);\n                    if (ARRAY_ISARRAY(target) && typeof value === 'function' && ['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse', 'copyWithin', 'fill'].includes(p)) {\n                        return function (...args) {\n                            if (self._isInComputedEvaluation) {\n                                const name = String(p);\n                                throw new Error(`[x-tool] Mutation via '${String(parentKey)}.${name}()' is not allowed during computed evaluation.`);\n                            }\n                            const arr = target;\n                            const beforeLen = arr.length;\n                            const beforeFirst = arr[0];\n                            const beforeLast = arr[beforeLen - 1];\n                            const result = value.apply(target, args);\n                            if (arr.length !== beforeLen || arr[0] !== beforeFirst || arr[arr.length - 1] !== beforeLast) {\n                                self._onDataChange(parentKey);\n                            }\n                            return result;\n                        };\n                    }\n                    const type = typeof value;\n                    if (value && type === 'object') {\n                        return self._wrapData(value, parentKey);\n                    }\n                    return value;\n                },\n                ownKeys: (target) => { return Reflect.ownKeys(target); },\n                has: (target, key) => { return Reflect.has(target, key); },\n                set: (target, p, value) => {\n                    if (self._isDestroyed)\n                        return true;\n                    if (self._isInComputedEvaluation) {\n                        const key = String(parentKey) + (typeof p === 'symbol' ? '' : '.' + String(p));\n                        throw new Error(`[x-tool] Mutation of '${key}' is not allowed during computed evaluation.`);\n                    }\n                    if (typeof p === 'symbol')\n                        return true;\n                    const had = Reflect.has(target, p);\n                    const oldValue = had ? Reflect.get(target, p) : undefined;\n                    if (value && typeof value === 'object') {\n                        value = self._wrapData(value, typeof p === 'symbol' ? parentKey : (String(parentKey) + '.' + String(p)));\n                    }\n                    if (!had) {\n                        try {\n                            Reflect.defineProperty(target, p, {\n                                configurable: true,\n                                enumerable: true,\n                                writable: true,\n                                value\n                            });\n                        }\n                        catch {\n                            Reflect.set(target, p, value);\n                        }\n                        self._onDataChange(parentKey);\n                        return true;\n                    }\n                    if (oldValue === value)\n                        return true;\n                    Reflect.set(target, p, value);\n                    self._onDataChange(parentKey);\n                    return true;\n                },\n                deleteProperty: (target, p) => {\n                    if (self._isInComputedEvaluation) {\n                        const key = String(parentKey) + (typeof p === 'symbol' ? '' : '.' + String(p));\n                        throw new Error(`[x-tool] Deletion of '${key}' is not allowed during computed evaluation.`);\n                    }\n                    return Reflect.deleteProperty(target, p);\n                }\n            });\n            this._deepReactiveCache.set(data, proxy);\n            return proxy;\n        }\n        _createReactiveData(data) {\n            const self = this;\n            return new Proxy(data, {\n                get: (target, property, receiver) => {\n                    const value = Reflect.get(target, property, receiver);\n                    if (property === Symbol.iterator)\n                        return value;\n                    if (typeof property !== 'symbol') {\n                        self._trackDependency(property);\n                    }\n                    if (value && typeof value === 'object') {\n                        return self._wrapData(value, property);\n                    }\n                    return value;\n                },\n                ownKeys: (target) => Reflect.ownKeys(target),\n                has: (target, key) => Reflect.has(target, key),\n                set: (target, property, value, receiver) => {\n                    if (self._isDestroyed)\n                        return true;\n                    if (self._isInComputedEvaluation) {\n                        throw new Error(`[x-tool] Mutation of '${String(property)}' is not allowed during computed evaluation.`);\n                    }\n                    if (property === Symbol.iterator && ARRAY_ISARRAY(target))\n                        return value;\n                    const oldValue = Reflect.get(target, property);\n                    if (value && typeof value === 'object') {\n                        value = self._wrapData(value, property);\n                    }\n                    if (oldValue === value)\n                        return true;\n                    const had = Reflect.has(target, property);\n                    if (!had) {\n                        try {\n                            Reflect.defineProperty(target, property, {\n                                configurable: true,\n                                enumerable: true,\n                                writable: true,\n                                value\n                            });\n                        }\n                        catch {\n                            Reflect.set(target, property, value, receiver);\n                        }\n                    }\n                    else {\n                        Reflect.set(target, property, value, receiver);\n                    }\n                    this._onDataChange(property);\n                    if (this._propUpdateActive && property !== '$props') {\n                        const pc = target.$props;\n                        if (pc)\n                            pc[property] = value;\n                        const eff = this._propEffects[property];\n                        if (eff && !this._runningPropEffect) {\n                            this._runningPropEffect = true;\n                            this._safeExecute(() => eff.call(this._createMethodContext(), value, oldValue));\n                            this._runningPropEffect = false;\n                        }\n                    }\n                    return true;\n                }\n            });\n        }\n        _createMethodContext(_includeComputed = true) {\n            const specials = {\n                '$log': (..._args) => { },\n                '$destroy': () => this.destroy(),\n                '$forceUpdate': () => this._scheduleRender(),\n                '$addCleanupFunction': (fn) => this._addCleanupFunction(fn),\n                '$nextTick': (cb) => {\n                    if (cb) {\n                        this._nextTickQueue.push(cb);\n                        if (!this._renderScheduled)\n                            queueMicrotask(() => {\n                                if (!this._renderScheduled && this._nextTickQueue.length) {\n                                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                                    for (const fn of q) {\n                                        this._safeExecute(() => fn());\n                                    }\n                                }\n                            });\n                        return;\n                    }\n                    return new Promise(resolve => {\n                        this._nextTickQueue.push(() => resolve());\n                        if (!this._renderScheduled)\n                            queueMicrotask(() => {\n                                if (!this._renderScheduled && this._nextTickQueue.length) {\n                                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                                    for (const fn of q) {\n                                        this._safeExecute(() => fn());\n                                    }\n                                }\n                            });\n                    });\n                },\n                '$el': this._element,\n                '$id': this._id,\n                '$isMounted': this._isMounted,\n                '$isDestroyed': this._isDestroyed,\n                '$parent': this._parent,\n                '$children': this._children,\n                '$mutate': (fn) => {\n                    const prevMethod = this._isInMethodExecution;\n                    if (this._isInComputedEvaluation) {\n                        throw new Error('[x-tool] $mutate cannot be used inside computed evaluation; computed getters must be pure.');\n                    }\n                    this._isInMethodExecution = false;\n                    try {\n                        return typeof fn === 'function' ? fn() : undefined;\n                    }\n                    finally {\n                        this._isInMethodExecution = prevMethod;\n                        this._scheduleRender();\n                    }\n                }\n            };\n            return new Proxy(this._data, {\n                get: (target, propStr) => {\n                    if (propStr in target) {\n                        this._trackDependency(propStr);\n                        const v = target[propStr];\n                        return v;\n                    }\n                    if (FT_C && (propStr in this._computed))\n                        return this._getComputedValue(propStr);\n                    if (propStr in specials)\n                        return specials[propStr];\n                    return this._methods[propStr];\n                },\n                set: (_target, propStr, value) => {\n                    if (this._isInComputedEvaluation) {\n                        throw new Error(`[x-tool] Mutation of '${String(propStr)}' is not allowed during computed evaluation.`);\n                    }\n                    this._data[propStr] = value;\n                    return true;\n                }\n            });\n        }\n        _createContextProxy(event, targetElement) {\n            const component = this;\n            const mergedScope = targetElement ? this._collectLoopScope(targetElement) : null;\n            const scopeKeys = mergedScope ? new Set(_Okeys(mergedScope)) : new Set();\n            const gWindow = (typeof window !== 'undefined' ? window : undefined);\n            const gDocument = (typeof document !== 'undefined' ? document : undefined);\n            const cfg = this.framework._getConfig();\n            const sandbox = !!cfg.sandboxExpressions;\n            const allow = new Set((cfg.allowGlobals || []).map(s => String(s)));\n            const _lastListenerByTarget = new WkMap();\n            const wrapTarget = (t) => {\n                if (!t)\n                    return t;\n                const hasAdd = typeof t.addEventListener === 'function';\n                if (!hasAdd)\n                    return t;\n                const handlerMap = new WkMap();\n                const makeKey = (event, options) => {\n                    try {\n                        return event + '|' + (options === undefined ? '' : (typeof options === 'object' ? JSON.stringify(options) : String(options)));\n                    }\n                    catch {\n                        return event + '|';\n                    }\n                };\n                return new Proxy(t, {\n                    get(target, prop, _receiver) {\n                        if (prop === 'addEventListener') {\n                            return function (event, handler, options) {\n                                const inv = component._currentInvoker || '__anonymous__';\n                                const eKey = makeKey(event, options);\n                                let invMap = _lastListenerByTarget.get(target);\n                                if (!invMap) {\n                                    invMap = new Map();\n                                    _lastListenerByTarget.set(target, invMap);\n                                }\n                                let evMap = invMap.get(inv);\n                                if (!evMap) {\n                                    evMap = new Map();\n                                    invMap.set(inv, evMap);\n                                }\n                                const prev = evMap.get(eKey);\n                                if (prev) {\n                                    try {\n                                        target.removeEventListener(event, prev.handler, prev.options);\n                                    }\n                                    catch { }\n                                    try {\n                                        prev.remover && prev.remover();\n                                    }\n                                    catch { }\n                                    evMap.delete(eKey);\n                                }\n                                target.addEventListener(event, handler, options);\n                                const remover = component._addCleanupFunction(() => {\n                                    try {\n                                        target.removeEventListener(event, handler, options);\n                                    }\n                                    catch { }\n                                });\n                                try {\n                                    if (typeof handler === 'function' && remover) {\n                                        let m = handlerMap.get(handler);\n                                        if (!m) {\n                                            m = new Map();\n                                            handlerMap.set(handler, m);\n                                        }\n                                        m.set(eKey, remover);\n                                    }\n                                }\n                                catch { }\n                                evMap.set(eKey, { handler, options, remover });\n                            };\n                        }\n                        if (prop === 'removeEventListener') {\n                            return function (event, handler, options) {\n                                try {\n                                    target.removeEventListener(event, handler, options);\n                                }\n                                catch { }\n                                const key = makeKey(event, options);\n                                try {\n                                    if (typeof handler === 'function') {\n                                        const m = handlerMap.get(handler);\n                                        if (m) {\n                                            const rem = m.get(key);\n                                            if (rem) {\n                                                try {\n                                                    rem();\n                                                }\n                                                catch { }\n                                                ;\n                                                m.delete(key);\n                                            }\n                                            if (m.size === 0)\n                                                handlerMap.delete(handler);\n                                        }\n                                    }\n                                }\n                                catch { }\n                                const invMap = _lastListenerByTarget.get(target);\n                                if (invMap) {\n                                    for (const [invKey, evMap] of invMap) {\n                                        const rec = evMap.get(key);\n                                        if (rec && rec.handler === handler) {\n                                            try {\n                                                rec.remover && rec.remover();\n                                            }\n                                            catch { }\n                                            evMap.delete(key);\n                                            if (evMap.size === 0)\n                                                invMap.delete(invKey);\n                                            break;\n                                        }\n                                    }\n                                }\n                            };\n                        }\n                        if (prop === 'querySelector') {\n                            return function (sel) { const res = target.querySelector(sel); return wrapTarget(res); };\n                        }\n                        if (prop === 'querySelectorAll') {\n                            return function (sel) { const list = target.querySelectorAll(sel); return Array.from(list).map(wrapTarget); };\n                        }\n                        if (prop === 'getElementById') {\n                            return function (id) { const res = target.getElementById(id); return wrapTarget(res); };\n                        }\n                        if (prop === 'document') {\n                            const doc = target.document;\n                            return wrapTarget(doc) || doc;\n                        }\n                        if (prop === 'body' && target === gDocument) {\n                            const b = target.body;\n                            return wrapTarget(b) || b;\n                        }\n                        if (prop === 'defaultView' && target === gDocument) {\n                            const w = target.defaultView;\n                            return wrapTarget(w) || w;\n                        }\n                        const val = target[prop];\n                        if (typeof val === 'function') {\n                            try {\n                                return val.bind(target);\n                            }\n                            catch { }\n                        }\n                        return val;\n                    }\n                });\n            };\n            const _timeoutRemovers = new Map();\n            const _intervalRemovers = new Map();\n            const _rafRemovers = new Map();\n            const ctxSetTimeout = (fn, ms, ...args) => {\n                const key = component._currentInvoker || '__anonymous__';\n                const prev = component._lastTimeoutByInvoker.get(key);\n                if (prev) {\n                    try {\n                        gWindow?.clearTimeout?.(prev.id);\n                    }\n                    catch { }\n                    ;\n                    try {\n                        prev.remover && prev.remover();\n                    }\n                    catch { }\n                }\n                const id = gWindow?.setTimeout?.(fn, ms, ...args);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.clearTimeout?.(id);\n                    }\n                    catch { } });\n                    _timeoutRemovers.set(id, remover);\n                    component._lastTimeoutByInvoker.set(key, { id, remover });\n                }\n                return id;\n            };\n            const ctxSetInterval = (fn, ms, ...args) => {\n                const key = component._currentInvoker || '__anonymous__';\n                const prev = component._lastIntervalByInvoker.get(key);\n                if (prev) {\n                    try {\n                        gWindow?.clearInterval?.(prev.id);\n                    }\n                    catch { }\n                    ;\n                    try {\n                        prev.remover && prev.remover();\n                    }\n                    catch { }\n                }\n                const id = gWindow?.setInterval?.(fn, ms, ...args);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.clearInterval?.(id);\n                    }\n                    catch { } });\n                    _intervalRemovers.set(id, remover);\n                    component._lastIntervalByInvoker.set(key, { id, remover });\n                }\n                return id;\n            };\n            const ctxRequestAnimationFrame = (cb) => {\n                const key = component._currentInvoker || '__anonymous__';\n                const prev = component._lastRafByInvoker.get(key);\n                if (prev) {\n                    try {\n                        gWindow?.cancelAnimationFrame?.(prev.id);\n                    }\n                    catch { }\n                    ;\n                    try {\n                        prev.remover && prev.remover();\n                    }\n                    catch { }\n                }\n                const id = gWindow?.requestAnimationFrame?.(cb);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.cancelAnimationFrame?.(id);\n                    }\n                    catch { } });\n                    _rafRemovers.set(id, remover);\n                    component._lastRafByInvoker.set(key, { id, remover });\n                }\n                return id;\n            };\n            const wrapObserverCtor = (Orig, kind) => {\n                if (!Orig)\n                    return undefined;\n                const Wrapped = function (...args) {\n                    const inst = new Orig(...args);\n                    const key = component._currentInvoker || '__anonymous__';\n                    let store = kind === 'mutation' ? component._lastObserverByInvoker.mutation : kind === 'resize' ? component._lastObserverByInvoker.resize : component._lastObserverByInvoker.intersection;\n                    const prev = store.get(key);\n                    if (prev) {\n                        try {\n                            prev.inst.disconnect();\n                        }\n                        catch { }\n                        ;\n                        try {\n                            prev.remover && prev.remover();\n                        }\n                        catch { }\n                    }\n                    const remover = component._addCleanupFunction(() => { try {\n                        inst.disconnect();\n                    }\n                    catch { } });\n                    store.set(key, { inst, remover });\n                    return inst;\n                };\n                Wrapped.prototype = Orig.prototype;\n                return Wrapped;\n            };\n            const specials = {\n                '$target': targetElement || null,\n                '$event': event || null,\n                ...(sandbox && !allow.has('setTimeout') ? {} : { 'setTimeout': ctxSetTimeout }),\n                ...(sandbox && !allow.has('clearTimeout') ? {} : { 'clearTimeout': (id) => { try {\n                        gWindow?.clearTimeout?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _timeoutRemovers.get(id);\n                            if (r) {\n                                r();\n                                _timeoutRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('setInterval') ? {} : { 'setInterval': ctxSetInterval }),\n                ...(sandbox && !allow.has('clearInterval') ? {} : { 'clearInterval': (id) => { try {\n                        gWindow?.clearInterval?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _intervalRemovers.get(id);\n                            if (r) {\n                                r();\n                                _intervalRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('requestAnimationFrame') ? {} : { 'requestAnimationFrame': ctxRequestAnimationFrame }),\n                ...(sandbox && !allow.has('cancelAnimationFrame') ? {} : { 'cancelAnimationFrame': (id) => { try {\n                        gWindow?.cancelAnimationFrame?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _rafRemovers.get(id);\n                            if (r) {\n                                r();\n                                _rafRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('MutationObserver') ? {} : { 'MutationObserver': wrapObserverCtor(gWindow?.MutationObserver, 'mutation') }),\n                ...(sandbox && !allow.has('ResizeObserver') ? {} : { 'ResizeObserver': wrapObserverCtor(gWindow?.ResizeObserver, 'resize') }),\n                ...(sandbox && !allow.has('IntersectionObserver') ? {} : { 'IntersectionObserver': wrapObserverCtor(gWindow?.IntersectionObserver, 'intersection') }),\n                ...(sandbox && !allow.has('window') ? {} : { 'window': wrapTarget(gWindow) }),\n                ...(sandbox && !allow.has('document') ? {} : { 'document': wrapTarget(gDocument) })\n            };\n            return new Proxy({}, {\n                get: (_t, propStr) => {\n                    if (mergedScope && propStr in mergedScope)\n                        return mergedScope[propStr];\n                    if (propStr in component._data)\n                        return component._data[propStr];\n                    if (propStr in component._computed)\n                        return component._getComputedValue(propStr);\n                    if (propStr in component._methods)\n                        return component._methods[propStr];\n                    if (propStr in specials)\n                        return specials[propStr];\n                    return undefined;\n                },\n                set: (_t, propStr, value) => {\n                    if (mergedScope && scopeKeys.has(propStr)) {\n                        mergedScope[propStr] = value;\n                    }\n                    else {\n                        component._data[propStr] = value;\n                    }\n                    return true;\n                },\n                has: (_t, propStr) => !!(mergedScope && propStr in mergedScope) ||\n                    propStr in component._data ||\n                    propStr in component._computed ||\n                    propStr in component._methods ||\n                    propStr in specials\n            });\n        }\n        _bindCustomDirective(element, _name, expression, directive, modifiers) {\n            const self = this;\n            const evaluator = self._createElementEvaluator(expression, element);\n            const directiveInfo = { type: 'custom', expression, customDirective: directive };\n            if (directive.bind) {\n                self._safeExecute(() => directive.bind(element, evaluator(), expression, self, modifiers, evaluator));\n            }\n            const update = () => {\n                if (directive.update)\n                    self._safeExecute(() => directive.update(element, evaluator(), expression, self, modifiers, evaluator));\n            };\n            const effect = self._createEffect(update);\n            directiveInfo.update = effect;\n            self._addDirective(element, directiveInfo);\n        }\n        _bindAttributeDirective(element, attributeName, expression) {\n            const self = this;\n            const evaluator = self._createElementEvaluator(expression, element);\n            if (attributeName === 'class') {\n                const el = element;\n                if (!self._initialClassSets.get(el)) {\n                    const baseSet = new Set();\n                    const oc = el.className || '';\n                    if (oc)\n                        for (const cls of oc.split(/\\s+/)) {\n                            if (cls)\n                                baseSet.add(cls);\n                        }\n                    self._initialClassSets.set(el, baseSet);\n                }\n            }\n            const elAny = element;\n            let propName = null;\n            if (attributeName in elAny)\n                propName = attributeName;\n            else {\n                const camel = attributeName.replace(/-([a-z])/g, (_, c) => c.toUpperCase());\n                if (camel in elAny)\n                    propName = camel;\n                else if (attributeName.toLowerCase() === 'readonly' && 'readOnly' in elAny)\n                    propName = 'readOnly';\n            }\n            const isBooleanProp = !!(propName && typeof elAny[propName] === 'boolean');\n            const hasNonFunctionProp = !!(propName && (propName in elAny) && typeof elAny[propName] !== 'function');\n            const isKnownBooleanAttr = !!ReactiveComponent._BA[attributeName.toLowerCase()];\n            const update = () => {\n                const value = evaluator();\n                if (attributeName === 'class') {\n                    const el = element;\n                    const base = self._initialClassSets.get(el);\n                    if (typeof value === 'string') {\n                        el.className = base && base.size ? [...base].join(' ') + (value ? ' ' + value : '') : value || '';\n                    }\n                    else if (ARRAY_ISARRAY(value)) {\n                        if (base && base.size)\n                            el.className = [...base, ...value.filter(Boolean)].join(' ');\n                        else\n                            el.className = value.filter(Boolean).join(' ');\n                    }\n                    else if (value && typeof value === 'object') {\n                        if (base && base.size)\n                            el.className = [...base].join(' ');\n                        for (const raw in value) {\n                            const on = !!value[raw];\n                            if (!raw)\n                                continue;\n                            const tokens = raw.split(/\\s+/);\n                            for (let i = 0; i < tokens.length; i++) {\n                                const tk = tokens[i];\n                                if (!tk)\n                                    continue;\n                                el.classList.toggle(tk, on);\n                            }\n                        }\n                    }\n                    else if (value == null && base && base.size) {\n                        el.className = [...base].join(' ');\n                    }\n                    else if (value == null) {\n                        el.removeAttribute('class');\n                    }\n                    return;\n                }\n                if (attributeName === STR_STYLE) {\n                    const el = element;\n                    if (typeof value === 'string') {\n                        el.style.cssText = value;\n                        return;\n                    }\n                    if (value && typeof value === 'object') {\n                        Object.assign(el.style, value);\n                        return;\n                    }\n                    if (value == null)\n                        el.removeAttribute('style');\n                    return;\n                }\n                if ((isBooleanProp && propName) || isKnownBooleanAttr) {\n                    const boolVal = !!value;\n                    if (propName && isBooleanProp)\n                        elAny[propName] = boolVal;\n                    if (boolVal)\n                        element.setAttribute(attributeName, '');\n                    else\n                        element.removeAttribute(attributeName);\n                    return;\n                }\n                let normalized = null;\n                if (value && typeof value === 'object') {\n                    const parts = [];\n                    for (const k in value) {\n                        if (value[k])\n                            parts.push(k);\n                    }\n                    normalized = parts.length ? parts.join(' ') : null;\n                }\n                else if (value !== null && value !== undefined) {\n                    normalized = String(value);\n                }\n                if (hasNonFunctionProp && propName) {\n                    if (normalized !== null) {\n                        try {\n                            elAny[propName] = normalized;\n                        }\n                        catch (e) {\n                            try {\n                                element.setAttribute(attributeName, normalized);\n                            }\n                            catch { }\n                        }\n                    }\n                    else {\n                        element.removeAttribute(attributeName);\n                    }\n                    return;\n                }\n                if (normalized !== null) {\n                    const cur = element.getAttribute(attributeName);\n                    if (cur !== normalized)\n                        element.setAttribute(attributeName, normalized);\n                }\n                else {\n                    if (element.hasAttribute(attributeName))\n                        element.removeAttribute(attributeName);\n                }\n            };\n            const effect = self._createEffect(update);\n            self._addDirective(element, { type: 'bind', expression, update: effect });\n        }\n        _collectLoopScope(el) {\n            if (!el)\n                return null;\n            if (!el.parentElement) {\n                const cur = el.__x_if_current;\n                if (cur && cur.parentElement) {\n                    el = cur;\n                }\n                else {\n                    const anchorParent = el.__x_if_anchorParent;\n                    if (anchorParent)\n                        el = anchorParent;\n                }\n            }\n            const merged = {};\n            let node = el;\n            while (node) {\n                const scope = this._loopScopes.get(node);\n                if (scope)\n                    Object.assign(merged, scope);\n                if (node === this.element)\n                    break;\n                node = node.parentElement;\n            }\n            return _Okeys(merged).length ? merged : null;\n        }\n        _updateElementDirectives(root) {\n            for (const [element, directives] of this._directives) {\n                for (const directive of directives) {\n                    if ((root === element || (element instanceof Element && root.contains(element))) && directive.update) {\n                        directive.update();\n                    }\n                }\n            }\n        }\n        _bindForDirective(element, expression) {\n            const self = this;\n            const match = expression.trim().match(/^(?:\\(\\s*([^,\\s]+)\\s*(?:,\\s*([^\\)]+))?\\s*\\)|([^,\\s]+))\\s+(in|of)\\s+(.+)$/);\n            if (!match) {\n                return;\n            }\n            const itemVar = match[1] || match[3];\n            const indexVar = match[2];\n            const listCode = match[5];\n            const placeholder = d.createComment('x-for');\n            element.parentNode?.insertBefore(placeholder, element);\n            let templateToClone;\n            if (element[STR_TAGNAME] === STR_TEMPLATE) {\n                templateToClone = d.createElement('div');\n                templateToClone.style[STR_DISPLAY] = STR_CONTENTS;\n                templateToClone.appendChild(element.content.cloneNode(true));\n                element.parentNode?.removeChild(element);\n            }\n            else {\n                templateToClone = element;\n                element.parentNode?.removeChild(element);\n            }\n            const contextAnchor = placeholder.parentElement || self.element;\n            const listEval = self._createElementEvaluator(listCode.trim(), contextAnchor);\n            const instances = [];\n            const createScope = (item, idxOrKey) => {\n                const scope = { [itemVar]: item };\n                if (indexVar)\n                    scope[indexVar] = idxOrKey;\n                return scope;\n            };\n            const update = () => {\n                const norm = self._safeExecute(() => {\n                    const result = listEval();\n                    if (_AisArr(result))\n                        return { list: result, keys: null };\n                    if (typeof Map !== 'undefined' && result instanceof Map) {\n                        return { list: _Afrom(result.values()), keys: _Afrom(result.keys()) };\n                    }\n                    if (typeof Set !== 'undefined' && result instanceof Set) {\n                        return { list: _Afrom(result.values()), keys: null };\n                    }\n                    if (result && typeof result[Symbol.iterator] === 'function') {\n                        return { list: _Afrom(result), keys: null };\n                    }\n                    if (result && typeof result === 'object') {\n                        const keys = Object.keys(result);\n                        const list = keys.map(k => result[k]);\n                        return { list, keys };\n                    }\n                    return { list: [], keys: null };\n                }, { list: [], keys: null });\n                const list = norm.list;\n                const keysArr = norm.keys;\n                if (instances.length > list.length) {\n                    while (instances.length > list.length) {\n                        const inst = instances.pop();\n                        if (inst.parentNode)\n                            inst.parentNode.removeChild(inst);\n                    }\n                }\n                const minLen = Math.min(instances.length, list.length);\n                for (let i = 0; i < minLen; i++) {\n                    const inst = instances[i];\n                    const keyVal = keysArr ? keysArr[i] : i;\n                    self._loopScopes.set(inst, createScope(list[i], keyVal));\n                    self._updateElementDirectives(inst);\n                }\n                if (list.length > instances.length) {\n                    const frag = d.createDocumentFragment();\n                    const start = instances.length;\n                    for (let i = start; i < list.length; i++) {\n                        const clone = templateToClone.cloneNode(true);\n                        clone.removeAttribute('x-for');\n                        const keyVal = keysArr ? keysArr[i] : i;\n                        self._loopScopes.set(clone, createScope(list[i], keyVal));\n                        try {\n                            self._parseDirectives(clone);\n                        }\n                        catch { }\n                        frag.appendChild(clone);\n                        instances.push(clone);\n                    }\n                    const ref = instances[start - 1] || placeholder;\n                    if (ref.parentNode)\n                        ref.parentNode.insertBefore(frag, ref.nextSibling);\n                }\n            };\n            const dir = { type: 'for', expression };\n            const effect = self._createEffect(update, dir);\n            dir.update = effect;\n            self._addDirective(placeholder, dir);\n        }\n        _render() {\n            const self = this;\n            for (const directives of self._directives.values()) {\n                for (const dr of directives) {\n                    if (XTOOL_ENABLE_STATIC_DIRECTIVES && dr._static)\n                        continue;\n                    if (dr.update) {\n                        try {\n                            dr.update();\n                        }\n                        catch (error) {\n                            if (!(error instanceof ReferenceError)) { }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    ReactiveComponent._BA = {\n        itemscope: 1, formnovalidate: 1, novalidate: 1, default: 1\n    };\n    const xTool = new XToolFramework();\n    return xTool;\n}();\nif (typeof window !== 'undefined') {\n    const w = window;\n    w.XTool = XToolFramework;\n    w.FyneJS = XToolFramework;\n}\n//# sourceMappingURL=x-tool.js.map"],"mappings":"AAAA,aACA,MAAMA,EAAgBC,MAAMC,QACtBC,EAAQC,QAKRC,EAAiB,WACnB,MAAMC,EAASL,MAAMM,KACfC,EAAUR,EACVS,EAASC,OAAOC,KAChBC,EAAU,OACVC,EAAY,QACZC,EAAc,UACdC,EAAW,OACXC,EAAc,UACdC,EAAe,WACfC,EAAa,SACnB,IAAIC,EAAiC,EACrC,MAAMC,EAAyB,oBAAbC,SAA2BA,SAAW,KAClDC,EAAe,WAEfC,EAAe,CADJ,QAAoB,QAAqB,SAAuB,UAAsB,SAEvG,IACI,GAAIH,GAAKA,EAAEI,OAASJ,EAAEK,eAAe,sBAAuB,CACxD,MAAMC,EAAQN,EAAEO,cAAcd,GAC9Ba,EAAME,GAAK,qBACXF,EAAMG,YAAc,mGACpBT,EAAEI,KAAKM,YAAYJ,EACvB,CACJ,CACA,MAAQ,CACR,IAAIK,EAAM,IACV,MAAMC,EAAYC,GAAS,GAAGF,KAAOE,IAuhBrC,MAAMC,EACF,cAAAC,CAAeC,GACXC,KAAKC,EAAUF,EACfA,EAAOG,EAAUF,KACrB,CACA,MAAIT,GAAO,OAAOS,KAAKG,CAAK,CAC5B,aAAIC,GAAc,OAAOJ,KAAKK,CAAY,CAC1C,WAAIC,GAAY,OAAON,KAAKO,CAAU,CACtC,WAAID,CAAQE,GAAMR,KAAKO,EAAWC,CAAI,CACtC,WAAIC,GAAY,OAAOT,KAAKU,CAAU,CACtC,WAAID,CAAQE,GAAKX,KAAKU,EAAWC,CAAG,CACpC,aAAIC,GAAc,OAAOZ,KAAKa,CAAY,CAC1C,aAAID,CAAUD,GAAKX,KAAKa,EAAaF,CAAG,CACxC,eAAIG,GAAgB,OAAOd,KAAKe,CAAc,CAC9C,eAAID,CAAYH,GAAKX,KAAKe,EAAeJ,CAAG,CAC5C,CAAAK,CAAcV,EAASW,GACnB,MAAMC,EAAWlB,KAAKmB,EAAYC,IAAId,IAAY,GAClDY,EAASG,KAAKJ,GACdjB,KAAKmB,EAAYG,IAAIhB,EAASY,EAClC,CACA,WAAAK,CAAYhC,EAAIiC,EAAKpB,GACjBJ,KAAKyB,EAAoB,EACzBzB,KAAK0B,EAAqB,EAC1B1B,KAAKO,EAAW,KAChBP,KAAKU,EAAW,EAChBV,KAAKa,EAAa,EAClBb,KAAKe,EAAe,EACpBf,KAAK2B,EAAqB,EAC1B3B,KAAK4B,EAAY,GACjB5B,KAAKC,EAAU,KACfD,KAAK6B,EAAY,CAAC,EAClB7B,KAAK8B,EAAe,CAAC,EACrB9B,KAAK+B,EAAiB,IAAIC,IAC1BhC,KAAKiC,EAAgB,IAAID,IACzBhC,KAAKkC,EAAuB,IAAIF,IAChChC,KAAKmC,EAA0B,EAC/BnC,KAAKoC,EAAuB,EAC5BpC,KAAKqC,EAAc,IAAIC,IACvBtC,KAAKuC,EAAe,EACpBvC,KAAKmB,EAAc,IAAIa,IACvBhC,KAAKwC,EAAoB,IAAIF,IAC7BtC,KAAKyC,EAAkB,KACvBzC,KAAK0C,EAAwB,IAAIV,IACjChC,KAAK2C,EAAyB,IAAIX,IAClChC,KAAK4C,EAAoB,IAAIZ,IAC7BhC,KAAK6C,EAAyB,CAC1BC,SAAU,IAAId,IACde,OAAQ,IAAIf,IACZgB,aAAc,IAAIhB,KAEtBhC,KAAKiD,EAAkB,GACvBjD,KAAKkD,EAAc,IAAIpF,EACvBkC,KAAKmD,EAAmB,IAAInB,IAC5BhC,KAAKoD,EAAwB,IAAIpB,IACjChC,KAAKqD,EAAgB,KACrBrD,KAAKsD,EAAmB,EACxBtD,KAAKuD,EAAiB,GACtBvD,KAAKwD,EAAoB,IAAI1F,EAC7BkC,KAAKyD,EAAc,KACnBzD,KAAK0D,EAAsBC,IACvB,MAAMC,EAAO5D,KAAK6D,EAAWF,GACT,mBAATC,GACP5D,KAAK8D,EAAa,IAAM9D,KAAK+D,EAA2BH,EAAM,MAGtE5D,KAAKgE,EAAuBC,IACxB,GAAkB,mBAAPA,EACP,OACJ,MAAMC,EAAU,KACZ,IACID,GACJ,CACA,MAEA,CACA,IACIjE,KAAKwC,EAAkB2B,OAAOD,EAClC,CACA,MAAQ,GAGZ,OADAlE,KAAKwC,EAAkB4B,IAAIF,GACpB,KAAQ,IACXlE,KAAKwC,EAAkB2B,OAAOD,EAClC,CACA,MAAQ,IAEZlE,KAAKqE,EAA+B,CAAC/D,EAASgE,EAAOC,EAASC,KAC1DlE,EAAQmE,iBAAiBH,EAAOC,EAASC,GACzCxE,KAAKiD,EAAgB5B,KAAK,CAAEf,UAASgE,QAAOC,UAASC,aAEzDxE,KAAKG,EAAMZ,EACXS,KAAKK,EAAaD,EAClBJ,KAAK0E,EAAmBlD,EAAImD,SAAW,CAAC,EACxC3E,KAAK6B,EAAYL,EAAIoD,UAAY,CAAC,EAClC5E,KAAK8B,EAAeN,EAAIqD,aAAe,CAAC,EACxC7E,KAAKuC,KAAkBf,EAAIoD,WAAYvG,OAAOC,KAAKkD,EAAIoD,UAAUE,QACjE9E,KAAK6D,EAAa,CACdkB,QAASvD,EAAIuD,QACbC,UAAWxD,EAAIwD,WAAaxD,EAAIyD,UAChCC,QAAS1D,EAAI0D,QACbC,YAAa3D,EAAI2D,YACjBC,cAAe5D,EAAI4D,eAAiB5D,EAAI6D,eAE5CrF,KAAKsF,EAAQtF,KAAKuF,EAAoB/D,EAAIgE,MAAQ,CAAC,GACnDxF,KAAKyF,EAAWzF,KAAK0F,GACzB,CACA,eAAAC,GACS3F,KAAK2B,IACN3B,KAAK0D,EAAmB,eACxB1D,KAAK2B,EAAqB,EAElC,CACA,CAAAiE,CAAcC,GACV,GAAI7F,KAAKS,QAAS,CAEVT,KAAK+B,EAAe+D,QACxB,MAAMC,EAAe,IAAIzD,IACnB0D,EAAahG,KAAKoD,EAAsBhC,IAAIyE,GAClD,GAAIG,EACA,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAWlB,OAAQmB,IACnCF,EAAa3B,IAAI4B,EAAWC,IACpC,IAAK,MAAMC,KAAUH,EACjB/F,KAAK8D,EAAaoC,IAClBlG,KAAKuC,GAAiBzD,GACtBkB,KAAKmG,IAETnG,KAAK0D,EAAmB,UAC5B,CACJ,CACA,CAAAgC,GACI,MAAMU,EAAe,CAAC,EACtB,IAAK,MAAMC,KAAcrG,KAAK0E,EAAkB,CAC5C,MAAM4B,EAAiBtG,KAAK0E,EAAiB2B,GAC7CD,EAAaC,GAAc,IAAIE,KAC3B,MAAMC,EAAOxG,KAAKoC,EACZqE,EAAUzG,KAAKyC,EACrBzC,KAAKoC,EAAuB,EAC5BpC,KAAKyC,EAAkB4D,EACvB,IACI,OAAOrG,KAAK8D,EAAa,IAAM9D,KAAK+D,EAA2BuC,EAAgBC,GACnF,CACA,QACIvG,KAAKoC,EAAuBoE,EAC5BxG,KAAKyC,EAAkBgE,CAC3B,EAER,CACA,OAAOL,CACX,CACA,CAAAM,CAAkBC,GAId,GADA3G,KAAK4G,EAAiBD,GAClB3G,KAAK+B,EAAe8E,IAAIF,GACxB,OAAO3G,KAAK+B,EAAeX,IAAIuF,GACnC,IACI,MAAMG,EAAY9G,KAAK6B,EAAU8E,GACjC3G,KAAKmC,EAA0B,EAC/B,MAAMqE,EAAOxG,KAAKiC,EAAcb,IAAIuF,GACpC,GAAIH,EACA,IAAK,MAAMO,KAAOP,EAAM,CACpB,MAAMlF,EAAMtB,KAAKkC,EAAqBd,IAAI2F,GACtCzF,GACAA,EAAI6C,OAAOwC,EACnB,CAEJ3G,KAAKiC,EAAcX,IAAIqF,EAAK,IAAIrE,KAChC,MAAM0E,EAAQF,EAAUG,KAAKjH,KAAKkH,KAGlC,OAFAlH,KAAKmC,EAA0B,EAC/BnC,KAAK+B,EAAeT,IAAIqF,EAAKK,GACtBA,CACX,CACA,MAEI,YADAhH,KAAKmC,EAA0B,EAEnC,CACJ,CACA,CAAAyE,CAAiBO,GACb,IAAKnH,KAAKqD,EACN,OACJ,IAAI+D,EAAOpH,KAAKoD,EAAsBhC,IAAI+F,GACrCC,IACDA,EAAO,GACPpH,KAAKoD,EAAsB9B,IAAI6F,EAASC,IAEvCA,EAAKC,SAASrH,KAAKqD,IACpB+D,EAAK/F,KAAKrB,KAAKqD,EACvB,CACA,CAAA8C,GACQnG,KAAKsD,IAETtD,KAAKsD,EAAmB,EACxBgE,sBAAsB,KAGlB,GAFAtH,KAAKsD,EAAmB,EACxBtD,KAAKuH,KACDvH,KAAKuD,GAAkBvD,KAAKuD,EAAeuB,OAAQ,CACnD,MAAM0C,EAAIxH,KAAKuD,EAAekE,OAAO,EAAGzH,KAAKuD,EAAeuB,QAC5D,IAAK,MAAMb,KAAMuD,EACb,IACIvD,GACJ,CACA,MAAQ,CAEhB,IAER,CACA,CAAAH,CAAaG,EAAIyD,GACb,IACI,OAAOzD,GACX,CACA,MAAO0D,GAEH,OADAC,QAAQD,MAAMA,GACPD,CACX,CACJ,CACA,aAAAG,CAAcvH,GACNN,KAAKU,IAETV,KAAKO,EAAWD,EACXN,KAAK2B,GACN3B,KAAK2F,kBAET3F,KAAK8H,kBACT,CACA,UAAAC,CAAWC,EAAkB,GACzB,OAAOhI,KAAKkH,EAAqBc,EACrC,CACA,EAAAC,GACI,GAAKjI,KAAKO,EAAV,CAEA,IACIP,KAAKkI,GAAiBlI,KAAKO,EAC/B,CACA,MAAQ,CACRP,KAAKmG,GALK,CAMd,CACA,eAAA2B,IACQ9H,KAAKU,GAAaV,KAAKO,IAEtBP,KAAKK,EAAW8H,GAAuBnI,KAAKO,IAC7CP,KAAKK,EAAW+H,GAAiBpI,KAAKO,EAAUP,MACpDA,KAAKU,EAAW,EAChBV,KAAKa,EAAa,EAClBb,KAAKkI,GAAiBlI,KAAKO,GAC3BP,KAAKuH,KACLvH,KAAK0D,EAAmB,WAC5B,CACA,CAAAxD,CAAUmI,GACDrI,KAAK4B,EAAUyF,SAASgB,IACzBrI,KAAK4B,EAAUP,KAAKgH,EAE5B,CACA,EAAAC,CAAaD,GACT,MAAME,EAAQvI,KAAK4B,EAAU4G,QAAQH,GACjCE,GAAS,GACTvI,KAAK4B,EAAU6F,OAAOc,EAAO,EAErC,CACA,CAAAxE,CAA2BE,EAAIsC,GAC3B,IACI,MAAMkC,EAAaxE,EAAPyE,GACZ,IAAK,kBAAkBC,KAAKF,GAAM,CAC9B,IAAIG,EAAOH,EAAII,OAMf,MALK,kBAAkBF,KAAKC,IAAU,0BAA0BD,KAAKC,IAAU,gBAAgBD,KAAKC,KAChGA,EAAO,YAAcA,GAGLE,SAAS,UAAW,YAAa,MADtC,yBAA2BF,EAAO,4CAElC3B,UAAK8B,EAAW/I,KAAKkH,IAAwBX,EAAMvG,KAAKgJ,QAAoBD,OAAWA,GAC1G,CACJ,CACA,MACA,CACA,OAAO9E,EAAGgF,MAAMjJ,KAAKkH,IAAwBX,EACjD,CACA,OAAA2C,GACI,MAAMC,EAAOnJ,KACb,IAAImJ,EAAKpI,EAAT,CAEAoI,EAAKzF,EAAmB,iBACxB,IAAK,MAAM2E,KAASc,EAAKvH,EAChByG,EAAMvH,aACPuH,EAAMa,UAEVC,EAAKlJ,GACLkJ,EAAKlJ,EAAQqI,GAAaa,GAE9B,IAAK,MAAO7I,EAAS8I,KAAeD,EAAKhI,EACrC,IAAK,MAAMF,KAAamI,EACpB,GAAuB,WAAnBnI,EAAUoI,MAAqBpI,EAAUqI,iBAAiBC,OAC1D,IACItI,EAAUqI,gBAAgBC,OAAOjJ,EAAS6I,EAC9C,CACA,MACI5K,GACJ,CAIZ4K,EAAKhI,EAAY2E,QACjB,IAAK,MAAMxF,QAAEA,EAAOgE,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,KAAa2E,EAAKlG,EACpD3C,EAAQkJ,oBAAoBlF,EAAOC,EAASC,GAEhD2E,EAAKlG,EAAkB,GACvB,IAAK,MAAMwG,KAAW7L,MAAMM,KAAKiL,EAAK3G,GAClC,IACIiH,GACJ,CACA,MACIlL,GACJ,CAMJ,GAJA4K,EAAK3G,EAAkBsD,QACvBqD,EAAKpH,EAAe+D,QACpBqD,EAAKhG,EAAiB2C,QACtBqD,EAAK/F,EAAsB0C,QACvBqD,EAAK1F,GAAe0F,EAAKO,GACzB,IAAK,MAAMtC,KAAQ+B,EAAK1F,EAAYL,EAAsBuG,SAAU,CAChE,MAAMC,EAAMxC,EAAKoB,QAAQW,EAAKO,IAC1BE,GAAO,GACPxC,EAAKK,OAAOmC,EAAK,EACzB,CAEAT,EAAK5I,GACL4I,EAAK9I,EAAWwJ,GAAmBV,EAAK5I,GAC5C4I,EAAKzF,EAAmB,aACxByF,EAAKpI,EAAe,EACpBoI,EAAKtI,EAAa,EAClBsI,EAAKzI,EAAW,EAChByI,EAAKvH,EAAY,GACjBuH,EAAKlJ,EAAU,KACfD,KAAK8J,GAAqB,IAAIhM,EAC9BqL,EAAK5I,EAAW,KAChBwJ,eAAe,IAAMZ,EAAK9I,EAAW2J,GAAqBb,EAAKhJ,GAvDrD,CAwDd,CACA,EAAA8J,CAAmBC,EAAMnK,GACrB,IAAKmK,IAASnK,EACV,OAEJ,IAAIoK,EADJnK,KAAKyD,EAAc1D,EAEnB,IACIoK,EAAarB,SAAS,MAAO,qBAAuBoB,EAAO,KAC/D,CACA,MACI,MACJ,CACA,MAAME,EAAS,KAEX,IAAIC,EADJtK,EAAOsD,EAAgB+G,EAEvB,IACI,MAAME,EAAMvK,EAAOgI,WAAW,GAC9BsC,EAAMF,EAAOG,EACjB,CACA,MACID,EAAM,IACV,CAEA,GADAtK,EAAOsD,EAAgB,KACnBgH,GAAsB,iBAARA,EAAkB,CAChCrK,KAAKsF,EAAMiF,OAASvK,KAAKsF,EAAMiF,QAAU,CAAC,EAC1CvK,KAAKyB,EAAoB,EACzB,IAAK,MAAM+I,KAAKH,EAAK,CACjB,MAAM1J,EAAI0J,EAAIG,GACVxK,KAAKsF,EAAMkF,KAAO7J,IAClBX,KAAKsF,EAAMkF,GAAK7J,EACxB,CACAX,KAAKyB,EAAoB,CAC7B,GAEJzB,KAAK0J,GAAcU,EACnBA,GACJ,CACA,EAAAlC,CAAiB5H,GACb,MAAM6I,EAAOnJ,KAEPyK,EAAiB,CAACjK,EAAIkK,EAAS,KACjC,IAAKA,IAAWlK,EAAGmK,aAAahL,EAAS,UAAYK,KAAKK,EAAW8H,GAAuB3H,IACxF,OAAO,EAEX,MAAMoK,EAAqC,cAApBpK,EAAG7B,GACpByK,EAAa,GACnB,IAAIyB,EAAgB,EAChBC,EAAU,KACd,IAAK,MAAMC,KAAKvK,EAAGwK,WAAY,CAC3B,MAAMC,EAAIF,EAAEnL,MACRqL,EAAEC,WAAWxL,EAAM,MAAQuL,EAAEC,WAAWxL,EAAM,QAC9C0J,EAAW/H,KAAK0J,GACXF,GAAkBI,IAAMtL,EAAS,SAAWsL,IAAMtL,EAAS,UAC5DkL,EAAgB,GACfC,GAAWG,IAAMtL,EAAS,SAC3BmL,EAAUC,GAEtB,CACA,GAAI3B,EAAWtE,OAAS,EAAG,CAEvB,GAAIgG,EAEA,OADA3B,EAAKgC,GAAe3K,EAAIsK,EAAQlL,KAAMkL,EAAQ9D,OACvC,EAEX,IAAK,MAAMoE,KAAQhC,EACfD,EAAKgC,GAAe3K,EAAI4K,EAAKxL,KAAMwL,EAAKpE,MAChD,CAGA,OAFc6D,GACV1B,EAAKkC,GAA0B7K,GAC5BkK,IAAWE,GAEtBH,EAAenK,EAAS,GACxB6I,EAAKmC,GAAchL,EAASmK,EAChC,CACA,EAAAY,CAA0B7K,GACtB,MAAM+K,EAAQ3N,MAAMM,KAAKsC,EAAGgL,YAC5B,IAAK,MAAMC,KAAQF,EAAO,CACtB,GAAIE,EAAKC,WAAaC,KAAKC,UACvB,SACJ,MAAMC,EAAWJ,EACXK,EAAMD,EAASE,WAAa,GAClC,GAAIF,EAASG,KAAsC,IAAvBF,EAAItD,QAAQ,MACpC,SACJ,MAAMyD,GAAaJ,EAASK,eAAeC,SAAW,IAAIC,cACpDC,EAAuB,SAAdJ,GAAsC,QAAdA,EACjCK,EAAO,GACb,IAAIrG,EAAI,EACR,KAAOA,EAAI6F,EAAIhH,QAAQ,CACnB,MAAMyH,EAAOT,EAAItD,QAAQ,KAAMvC,GAC/B,IAAc,IAAVsG,EAAa,CACbD,EAAKjL,KAAK,CAAEmL,QAASV,EAAIW,MAAMxG,KAC/B,KACJ,CACA,IAAIyG,EAAK,EACT,IAAK,IAAIC,EAAIJ,EAAO,EAAGI,GAAK,GAA2B,KAAtBb,EAAIc,WAAWD,GAAWA,IACvDD,IACJ,GAAIA,EAAK,EAAG,CACR,MACMG,EAAYN,EAAOG,EACrBG,EAFgB5G,GAGhBqG,EAAKjL,KAAK,CAAEmL,QAASV,EAAIW,MAHTxG,EAG4B4G,KAC5CH,EAAK,GACLJ,EAAKjL,KAAK,CAAEmL,QAAS,KAAKM,OAAOJ,EAAK,KAC1C,MAAMK,EAAQjB,EAAItD,QAAQ,KAAM+D,EAAO,GACvC,IAAe,IAAXQ,EAAc,CACdT,EAAKjL,KAAK,CAAEmL,QAASV,EAAIW,MAAMF,EAAMT,EAAIhH,UACzCmB,EAAI6F,EAAIhH,OACR,KACJ,CACAwH,EAAKjL,KAAK,CAAEmL,QAASV,EAAIW,MAAMF,EAAMQ,EAAQ,KAC7C9G,EAAI8G,EAAQ,EACZ,QACJ,CACK,CACGR,EAAOtG,GACPqG,EAAKjL,KAAK,CAAEmL,QAASV,EAAIW,MAAMxG,EAAGsG,KACtC,MAAMQ,EAAQjB,EAAItD,QAAQ,KAAM+D,EAAO,GACvC,IAAe,IAAXQ,EAAc,CACdT,EAAKjL,KAAK,CAAEmL,QAASV,EAAIW,MAAMF,KAC/BtG,EAAI6F,EAAIhH,OACR,KACJ,CACA,MAAMoF,EAAO4B,EAAIW,MAAMF,EAAO,EAAGQ,GAAOlE,OAEpCyD,EAAKjL,KADL6I,EACU,CAAEA,QAEF,CAAEsC,QAAS,KACzBvG,EAAI8G,EAAQ,EACZ,QACJ,CACJ,CACA,MAAMC,EAAUV,EAAKW,KAAKC,GAAKA,EAAEhD,MAC3BiD,EAAab,EAAKW,KAAKC,GAAKA,EAAEV,SAAWU,EAAEV,QAAQnF,SAAS,OAClE,IAAK2F,IAAYG,EACb,SACJtB,EAASG,GAAc,EACvB,MAAMoB,EAAaJ,IAAYX,EAASC,EAAKe,OAAOH,GAAKA,EAAEhD,MAAMoD,IAAIJ,GAAKlN,KAAKuN,GAAwBL,EAAEhD,KAAM1J,IAAO,GACtH,IAAIgN,EAAY,EAChB,MAAMpD,EAAS,KACXoD,EAAY,EACZ,IAAIC,EAAM,GACV,IAAK,MAAMP,KAAKZ,EACZ,GAAiB,MAAbY,EAAEV,QACFiB,GAAOP,EAAEV,aAER,GAAIU,EAAEhD,KACP,GAAImC,EACAoB,GAAO,MAAQP,EAAEhD,KAAO,UAEvB,CACD,MAAMwD,EAAMN,EAAWI,OACvBC,GAAe,MAAPC,EAAc,GAAYA,EAAPhF,EAC/B,CAGJmD,EAASrM,cAAgBiO,IACzB5B,EAASrM,YAAciO,IAEzBE,EAAU,CAAEtE,KAAM,qBAAsBuE,WAAY9B,EAAK1B,YAAQrB,GACvE/I,KAAKgB,EAAcR,EAAImN,GACvB,MAAMzH,EAASlG,KAAK6N,GAAczD,EAAQuD,GAC1CA,EAAQvD,OAASlE,CACrB,CACJ,CACA,EAAAoF,CAAcvL,EAAQ+N,GAClB,IAAIzF,EAAQtI,EAAOgO,kBACnB,KAAO1F,GAAO,CACV,MAAM2F,EAAO3F,EAAM4F,mBACfH,EAAUzF,IACVrI,KAAKsL,GAAcjD,EAAOyF,GAC9BzF,EAAQ2F,CACZ,CACJ,CACA,EAAA7C,CAAe7K,EAAS4N,EAAeN,GACnC,MAAMzE,EAAOnJ,KACPmO,EAAcD,EAAchD,WAAWxL,EAAM,KAC7C2J,EAAO6E,EAAczB,MAAM/M,EAAIoF,OAAS,GAC9C,GAAIqJ,GAAwB,UAAT9E,GAAoBA,IAAS7K,EAE5C,OADA8B,EAAQ8N,gBAAgBF,GACjB/E,EAAKkF,GAAwB/N,EAAS+I,EAAMuE,GAEvD,GAAa,SAATvE,GAA4B,SAATA,GAA4B,SAATA,EAEtC,OADA/I,EAAQ8N,gBAAgBF,GACjB/E,EAAKmF,GAAqBhO,EAASsN,EAAYvE,GAM1D,KAJyB,UAATA,GAAoB/I,EAAQ8N,gBAAgBF,GAAgB/E,EAAKoF,GAAoBjO,EAASsN,GAAa,GAC5G,OAATvE,GAAiB/I,EAAQ8N,gBAAgBF,GAAgB/E,EAAKqF,GAAiBlO,EAASsN,GAAa,GACxF,QAATvE,IAAkB/I,EAAQ8N,gBAAgBF,GAAgB/E,EAAKsF,GAAkBnO,EAASsN,GAAa,KAI7GvE,EAAKb,QAAQ,MAAQ,EAAG,CACxB,MAAOkG,EAAQC,GAAQtF,EAAKuF,MAAM,IAAK,IAChCC,KAAWC,GAAQH,EAAKC,MAAM,KAC/BG,EAAYD,EAAKE,OAAO,CAACC,EAAKC,KAAYA,IAC5CD,EAAIC,GAAK,GAAaD,GAAQ,CAAC,GACnC,GAAe,OAAXP,EAAiB,CACjBpO,EAAQ8N,gBAAgBF,GACxB,MAAM5E,EAAkBH,EAAK/I,UAAU+O,GAAoBN,GAC3D,OAAOvF,EACDH,EAAKiG,GAAqB9O,EAASuO,EAAQjB,EAAYtE,EAAiByF,GACxE5F,EAAKkG,GAAoB/O,EAASuO,EAAQjB,EAAYmB,EAChE,CAEA,OADAzO,EAAQ8N,gBAAgBF,GACjB/E,EAAKkF,GAAwB/N,EAASuO,EAAQjB,EACzD,CACJ,CACA,EAAAC,CAAcyB,EAAUC,GACpB,MAAMrJ,EAAS,KACXlG,KAAKqD,EAAgB6C,EACrB,IACIoJ,GACJ,CACA,QACItP,KAAKqD,EAAgB,IACzB,GAIJ,GAFA6C,IACAlG,KAAKqC,EAAY+B,IAAI8B,GACjBpH,GAAkCyQ,QAAyCxG,IAAzBwG,EAAaC,GAAuB,CACtF,IAAIC,EAAQ,EACZ,IAAK,MAAMrI,KAAQpH,KAAKoD,EAAsBuG,SAC1C,GAAIvC,EAAKC,SAASnB,GAAS,CACvBuJ,EAAQ,EACR,KACJ,CAEJF,EAAaC,IAAWC,CAC5B,CACA,OAAOvJ,CACX,CACA,EAAAoI,CAAqBhO,EAASsN,EAAYvE,GACtC,GAAa,UAATA,GAAoBA,IAAS7K,EAC7B,OAAOwB,KAAKqO,GAAwB/N,EAAS+I,EAAMuE,GAEvD,MAAM8B,EAAY1P,KAAKuN,GAAwBK,EAAYtN,GAC3D,IAAIqP,EAKAC,EAJS,SAATvG,IAEAsG,EADWrP,EACUjB,MAAMZ,KAAiBC,EADjC4B,EAC+CjB,MAAMZ,QAAesK,GAGnF,MAmBM4E,EAAU,CAAEtE,OAAMuE,aAAYxD,YAAQrB,EAAW4G,mBACvD3P,KAAKgB,EAAcV,EAASqN,GAC5B,MAAMzH,EAASlG,KAAK6N,GArBL,KACX,MAAM7G,EAAQ0I,IACRlP,EAAKF,EACX,OAAQ+I,GACJ,IAAK,OACD7I,EAAGhB,YAAqBwH,EAAP0B,GACjB,MACJ,IAAK,OACDlI,EAAGqP,WAAmB7I,GAAS,IAAhB0B,GACf,MACJ,IAAK,OACD,MAAMsF,IAAShH,EACf,GAAI4I,IAAe5B,EACf,OACJ4B,EAAa5B,EACbxN,EAAGnB,MAAMZ,GAAeuP,EAAQ2B,GAAmB,GAAMjR,IAM3BiP,GAC1CA,EAAQvD,OAASlE,CACrB,CACA,EAAAqI,CAAoBjO,EAASwP,GACzB,MAAMC,EAA8B,aAAjBzP,EAAQ+I,KACrB2G,EAA6B,WAAjB1P,EAAQ+I,MAAsC,UAAjB/I,EAAQ+I,KACjD4G,EAAoC,WAApB3P,EAAQ6L,SAA6C,GAArB7L,EAAQ4P,SACzDC,QAAQtJ,IAAI7G,KAAKsF,EAAOwK,IACzBK,QAAQC,eAAepQ,KAAKsF,EAAOwK,EAAU,CACzCO,aAAgB,EAChBC,WAAc,EACdC,SAAY,IAGpB,MAAMC,EAAoBxQ,KAAKuN,GAAwBuC,EAAUxP,GAC3DmQ,EAAoBzQ,KAAK0Q,GAAoBZ,EAAH,YAAwB,GAYlEa,EAAgBZ,EAXK,MACvB,GAAIzP,EAAQqK,aAAa,SACrB,OAAOrK,EAAQ0G,MACnB,MAAM4J,EAAY5Q,KAAK6Q,GAAkBvQ,GACzC,GAAIsQ,EAAW,CACX,MAAMtS,EAAOD,OAAOC,KAAKsS,GACzB,GAAoB,IAAhBtS,EAAKwG,OACL,OAAO8L,EAAUtS,EAAK,GAC9B,CACA,OAAOgC,EAAQ0G,OAEgB8J,QAAuB/H,EA4C1D/I,KAAK6N,GAAc,IAtBG,CAAC7G,IACnB,GAAI+I,EACA,GAAInS,MAAMC,QAAQmJ,GAAQ,CACtB,MAAM+J,EAASzQ,EAAQqK,aAAa,SAAWrK,EAAQ0G,MAAQ2J,EAC/DrQ,EAAQ0Q,QAAoB,MAAVD,EAAiB/J,EAAMK,SAAS0J,GAAU,CAChE,MAEIzQ,EAAQ0Q,UAAYhK,MAN5B,CAUA,GAAIiJ,EAAe,CACf,MAAMgB,EAAM3Q,EACN4Q,EAAMtT,MAAMC,QAAQmJ,GAASA,EAAQ,GAC3C,IAAK,IAAIf,EAAI,EAAGA,EAAIgL,EAAIzM,QAAQM,OAAQmB,IAAK,CACzC,MAAMkL,EAAMF,EAAIzM,QAAQyB,GACxBkL,EAAIC,SAAWF,EAAI7J,SAAS8J,EAAInK,MACpC,CACA,MACJ,CACA1G,EAAQ0G,OAAeA,IAAUgJ,EAAY,EAAI,KAAjCtH,EAVhB,GAYqB2I,CAAcb,MACvC,MAAMlG,EAAMtK,KAAKgJ,QAAoBD,EAAWzI,GA4B1CgR,EAAIhR,EAAQ+I,KAElBrJ,KAAKqE,EAA6B/D,EADU,WAAzBA,EAAQ3B,IAAmC,aAAN2S,GAA0B,UAANA,GAAuB,SAANA,EAAgB,SAAW,QA5BrG,KACf,MAAMxF,EA9CY,MAClB,GAAIiE,EACA,OAAInS,MAAMC,QAAQ2S,WAA0CzH,IAAlB4H,EAC/BrQ,EAAQ0Q,QAAUL,OAAgB5H,EAEzCzI,EAAQqK,aAAa,SACdrK,EAAQ0Q,QAAU1Q,EAAQ0G,WAAQ+B,EACtCzI,EAAQ0Q,QAEnB,GAAIf,EAAe,CACf,MAAMgB,EAAM3Q,EACNqJ,EAAS,GACf,IAAK,IAAI1D,EAAI,EAAGA,EAAIgL,EAAIzM,QAAQM,OAAQmB,IAAK,CACzC,MAAMkL,EAAMF,EAAIzM,QAAQyB,GACpBkL,EAAIC,UACJzH,EAAOtI,KAAK8P,EAAInK,MACxB,CACA,OAAO2C,CACX,CACA,OAAOqG,EAAYuB,WAAWjR,EAAQ0G,QAAU,EAAI1G,EAAQ0G,OA2BhDwK,GACNC,EAAazR,KAAK8D,EAAa,IAAM0M,KAC3C,GAAIT,GAAcnS,MAAMC,QAAQ4T,GAAa,CACzC,MAAMP,EAAMO,EACNV,EAASzQ,EAAQqK,aAAa,SAAWrK,EAAQ0G,MAAQ2J,EAC/D,QAAe5H,IAAXgI,EAAsB,CACtB,MAAMnH,EAAMsH,EAAI1I,QAAQuI,GACpBzQ,EAAQ0Q,SACK,IAATpH,GACAsH,EAAI7P,KAAK0P,GAERnH,GAAO,GACZsH,EAAIzJ,OAAOmC,EAAK,EAExB,CACJ,MACK,GAAIqG,GAAiBrS,MAAMC,QAAQ4T,GAAa,CACjD,MAAMP,EAAMO,EACZP,EAAIzJ,OAAO,EAAGyJ,EAAIpM,QAClBgH,EAAI4F,QAAQ/Q,GAAKuQ,EAAI7P,KAAKV,GAC9B,MAEI2J,EAAIqH,OAAS7F,EACb9L,KAAK8D,EAAa,KAAQ2M,EAAkBxJ,KAAKjH,KAAKkH,IAAwBoD,OAMtFtK,KAAKgB,EAAcV,EAAS,CAAE+I,KAAM,QAASyG,YACjD,CACA,EAAAtB,CAAiBlO,EAASsN,GACtB,MAAMzE,EAAOnJ,KACP4R,EAAc7S,EAAE8S,cAAc,QACpCvR,EAAQwR,YAAYC,aAAaH,EAAatR,GAC9CA,EAAQ0R,GAAsBJ,EAAY1F,eAAiB,KAC3D,MAAM+F,EAAW,GACXC,EAAqB1R,IACvB,GAAIA,EAAG7B,KAAiBC,EAAc,CAClC,MAAMsF,EAAUnF,EAAEO,cAAc,OAGhC,OAFA4E,EAAQ7E,MAAMZ,GAAeQ,EAC7BiF,EAAQzE,YAAYe,EAAG2R,QAAQC,UAAU,IAClC,CAAE5R,GAAI0D,EAASmO,WAAY,EACtC,CACA,MAAO,CAAE7R,GAAIA,EAAI6R,WAAY,IAE3BC,EAAQJ,EAAkB5R,GAC1BiS,EAAYpJ,EAAKoE,GAAwBK,EAAYtN,GAC3D2R,EAAS5Q,KAAK,CAAEb,GAAI8R,EAAM9R,GAAImI,KAAM4J,EAAWF,WAAYC,EAAMD,aAC5DC,EAAMD,aACPC,EAAM9R,GAAGgS,GAAiB,GAC9B,MAAMC,EAAgB,CAACnS,GAEP,CACR,IAAIoS,EAAMpS,EAAQ2N,mBAClB,KAAOyE,GAAK,CACR,MAAMC,EAASD,EAAI/H,aAAa,UAC1BiI,EAAWF,EAAI/H,aAAa,aAClC,IAAKgI,IAAWC,EACZ,MACJ,GAAIF,EAAI/H,aAAa,aAAc,CAC/B,MAAMS,EAAOsH,EAAIG,aAAa,cAAgB,GACxCC,EAASZ,EAAkBQ,GAC3BvI,EAAShB,EAAKoE,IAAyBnC,GAAQ,IAAIvC,OAAQ6J,GACjET,EAAS5Q,KAAK,CAAEb,GAAIsS,EAAOtS,GAAImI,KAAMwB,EAAQkI,WAAYS,EAAOT,aAC3DS,EAAOT,aACRS,EAAOtS,GAAGgS,GAAiB,EACnC,KACK,CACD,MAAMM,EAASZ,EAAkBQ,GACjCT,EAAS5Q,KAAK,CAAEb,GAAIsS,EAAOtS,GAAImI,KAAM,KAAM0J,WAAYS,EAAOT,aACzDS,EAAOT,aACRS,EAAOtS,GAAGgS,GAAiB,EACnC,CACAE,EAAItE,gBAAgB,UACpBsE,EAAItE,gBAAgB,aACpBqE,EAAcpR,KAAKqR,GACnBA,EAAMA,EAAIzE,kBACd,CACJ,CAEJ,IAAI8E,GAAU,EACd,IAAK,MAAMC,KAAQP,EACXO,EAAKlB,YACLkB,EAAKlB,WAAWmB,YAAYD,GAEpC,MAAME,EAAetJ,IACjB,GAAIA,EAAM,EACN,OACJ,MAAMuJ,EAAIlB,EAASrI,GACduJ,EAAE3S,GAAGgS,KACNrJ,EAAKjB,GAAiBiL,EAAE3S,IACxB2S,EAAE3S,GAAGgS,GAAiB,GAE1BlS,EAAQ8S,IAAgBtB,YAAYmB,YAAY3S,EAAQ8S,IACnDD,EAAE3S,GAAGsR,YACNF,EAAYE,YAAYC,aAAaoB,EAAE3S,GAAIoR,EAAYyB,aAE3D/S,EAAQ8S,GAAiBD,EAAE3S,GAC3BuS,EAASnJ,GAsCP1D,EAASiD,EAAK0E,GAnBL,KACX,IAAIG,GAAQ,EACZ,IAAK,IAAI/H,EAAI,EAAGA,EAAIgM,EAASpT,GAAaoH,IAAK,CAC3C,MAAMkN,EAAIlB,EAAShM,GAEnB,IADakN,EAAExK,MAASwK,EAAExK,OAChB,CACNqF,EAAO/H,EACP,KACJ,CACJ,CACI+H,IAAS+E,KAEG,IAAZA,EA7Bc,EAACnJ,EAAK0J,KACxB,GAAI1J,EAAM,EAGN,YAFI0J,GACAA,KAGR,MAAMH,EAAIlB,EAASrI,GACfuJ,EAAE3S,GAAGsR,YACDqB,EAAE3S,GAAGsR,YACLqB,EAAE3S,GAAGsR,WAAWmB,YAAYE,EAAE3S,IAC9B8S,GACAA,KAECA,GACLA,IACJP,GAAU,GAeNQ,CAAcR,EAAQ,IAAMG,EAAYlF,IAGxCkF,EAAYlF,MAIpB7E,EAAKnI,EAAcV,EAAS,CAAE+I,KAAM,KAAMuE,aAAYxD,OAAQlE,GAClE,CACA,EAAAmJ,CAAoB/O,EAASkT,EAAW5F,EAAYmB,GAChD,MAAM5F,EAAOnJ,KACPyT,GAAW7F,GAAc,IAAI/E,OAC7B6K,EAAQvK,EAAKwK,GAAsBF,GACnCG,EAAO7E,EAAY,CACrB8E,OAAQ9E,EAAU8E,KAClBC,UAAW/E,EAAU+E,QACrBC,UAAWhF,EAAUgF,cACrBhL,EACEiL,IAAajF,GAAW5F,KACxB8K,IAAkBlF,GAAWmF,QAC7BC,IAAepF,GAAWqF,KAC1BC,IAActF,GAAWuF,QACzBC,IAAcxF,GAAWyF,MACzBC,EAAc,CAChBC,MAAO,CAAC,SACRC,IAAK,CAAC,SAAU,OAChBC,OAAQ,CAAC,SAAU,OACnBC,MAAO,CAAC,IAAK,QAAS,YACtBC,IAAK,CAAC,OACNC,UAAW,CAAC,aACZ5Q,OAAQ,CAAC,SAAU,OACnB6Q,IAAK,CAAC,SAAU,OAChBC,QAAS,CAAC,UAAW,MACrBC,UAAW,CAAC,YAAa,QACzBC,UAAW,CAAC,YAAa,QACzBC,WAAY,CAAC,aAAc,SAC3BC,KAAM,CAAC,QACPC,IAAK,CAAC,OACNC,OAAQ,CAAC,UACTC,SAAU,CAAC,aAETC,EAAoB,CACtBC,OAAQ3G,GAAW2G,KACnBC,MAAO5G,GAAW4G,IAClBC,QAAS7G,GAAW6G,MACpBC,OAAQ9G,GAAW8G,MAEjBC,EAAY,CAAEC,KAAM,EAAGC,OAAQ,EAAGC,MAAO,GACzCC,IAAgBnH,GAAWoH,OAC3BC,IAAerH,GAAWsH,MAC1BC,EAAevH,EAAY3Q,EAAO2Q,GAAa,GAC/CwH,EAAc,GACpB,IAAK,MAAMrH,KAAKoH,EAAc,CAC1B,MAAME,EAAU/B,EAAYvF,EAAE9C,eAC1BoK,GACAD,EAAYlV,QAAQmV,EAC5B,CACA,MAAMC,EAAiB,GACvB,IAAK,MAAMvH,KAAKoH,EAAc,CAC1B,MAAMI,EAAMZ,EAAU5G,EAAE9C,oBACZrD,IAAR2N,GACAD,EAAepV,KAAKqV,EAC5B,CACA,MAAMC,EAAeJ,EAAYzR,OAAS,GAAK2Q,EAAkBC,MAAQD,EAAkBE,KAAOF,EAAkBG,OAASH,EAAkBI,KACzIe,EAAkBH,EAAe3R,OAAS,EAC1C+R,EAAiBX,GAAeE,EAChCU,EAAiBxS,IACnB,MAAMyS,EAAOzS,EAAM0S,aAAe1S,EAAM0S,eAAiB,KACnDC,EAAOF,GAAQA,EAAKjS,OAASiS,EAAK,GAAKzS,EAAM4S,OACnD,GAAI7C,EAAW,CACX,IAAK4C,EACD,OAAO,EACX,GAAI3W,aAAmBqL,OAASrL,IAAY2W,GAAO3W,EAAQ6W,SAASF,IAChE,OAAO,CACf,CACA,GAAIjD,GAAY1P,EAAM4S,SAAW5W,EAC7B,OAAO,EACX,GAAIuW,EAAgB,CAChB,KAAIvS,aAAiB8S,YAQjB,OAAO,EARsB,CAC7B,MAAMC,EAAS/S,EAAMgT,QAAQxS,OAC7B,GAAIoR,GAA0B,IAAXmB,EACf,OAAO,EACX,GAAIjB,GAAciB,EAAS,EACvB,OAAO,CACf,CAGJ,CACA,GAAIT,EAAiB,CACjB,KAAItS,aAAiBiT,YAKjB,OAAO,EAJP,IAAKd,EAAepP,SAAS/C,EAAMkT,QAC/B,OAAO,CAInB,CACA,GAAIb,EAAc,CACd,KAAMrS,aAAiBmT,eACnB,OAAO,EACX,MAAMjN,GAAKlG,EAAMqC,KAAO,IAAIyF,cAC5B,GAAImK,EAAYzR,OAAS,IAAMyR,EAAYlP,SAASmD,GAChD,OAAO,EACX,GAAIiL,EAAkBC,OAASpR,EAAMoT,QACjC,OAAO,EACX,GAAIjC,EAAkBE,MAAQrR,EAAMqT,OAChC,OAAO,EACX,GAAIlC,EAAkBG,QAAUtR,EAAMsT,SAClC,OAAO,EACX,GAAInC,EAAkBI,OAASvR,EAAMuT,QACjC,OAAO,CACf,CACA,OAAO,GAEL7K,IAAYyG,EAClB,IAAIqE,EAAU,KACd,MAAMC,EAAU5O,EAAKjC,IACrB,GAAIwM,EAAO,CACP,MAAMsE,EAAgB7O,EAAK8O,GAAsBvE,EAAMwE,WAAYxE,EAAM9K,KAAM8K,EAAMyE,SAC/EC,EAAU1E,EAAMwE,WAAWpT,OAC1BR,GAAUoP,EAAMwE,WAAW5K,IAAI,CAAC+K,EAAGzO,IAAiB,IAARA,EAAYtF,EAAgB,IAARsF,EAAYtJ,OAAUyI,GACvF,IAAM,GACZ+O,EAAWxT,IACP,MAAMgG,EAAMnB,EAAKH,GAAoB1E,EAAOhE,GAC5C0X,EAAc/Q,KAAK8Q,EAASzN,KAAQ8N,EAAQ9T,IAEpD,MACK,GAAI0I,EAAS,CACd,MAAMsL,EAAc7E,EAAQpM,SAAS,KAC/BkR,EAAWpP,EAAKuH,GAAiB+C,EAAS6E,GAChDR,EAAWxT,IACP,MAAMgG,EAAMnB,EAAKH,GAAoB1E,EAAOhE,GACtCkY,EAASD,EAAStR,KAAK8Q,EAASzN,GAChB,mBAAXkO,GACPA,EAAOvR,KAAK8Q,EAASzT,GAEjC,CACA,MAAMmU,EAAsBnU,IACxB,GAAKwS,EAAcxS,KAEf2P,GAAiD,mBAAzB3P,EAAMoU,gBAC9BpU,EAAMoU,iBACNvE,GAA+C,mBAA1B7P,EAAMqU,iBAC3BrU,EAAMqU,kBACLb,GAAL,CAEA,GAAIvD,GAAuC,mBAAnBxK,eAA+B,CACnD,MAAM6O,EAAKtU,EAEX,YADAyF,eAAe,IAAMZ,EAAKrF,EAAa,IAAMgU,EAAQc,IAEzD,CACAzP,EAAKrF,EAAa,IAAMgU,EAAQxT,GANtB,GASRuU,IADM7Y,KAAKI,UAAU0Y,KACDC,UAAY7Z,EAAamI,SAASmM,GAC5D,IAAKa,GAAawE,EAAa,CAC3B,MAAMG,EAAUhZ,KAAKI,UAAU6Y,GAAmB3Y,EAASkT,EAAW,CAAEnG,OAAS6L,GAAMpC,EAAcoC,GAAIC,IAAMD,GAAMT,EAAmBS,GAAIrF,OAAQ9E,GAAW8E,KAAMuF,KAAMpZ,OAC3KA,KAAKgE,EAAoBgV,EAC7B,KACK,CACD,MAAM9B,EAAS7C,EAAa/T,GAAS+Y,eAAiBta,GAAKC,SAAYsB,EACvE6I,EAAK9E,EAA6B6S,EAAQ1D,EAAWiF,EAAoB7E,EAC7E,CACJ,CACA,EAAAlD,CAAiB9C,EAAY0K,EAAc,GACvC,MAAM3R,EAAM,GAAG2R,EAAc,IAAM,OAAO1K,IAC1C,IAAI3J,EAAKjE,KAAKmD,EAAiB/B,IAAIuF,GAKnC,OAJK1C,IACDA,EAAS6E,SAAS,MAAO,aAAawP,EAAc1K,EAAa,WAAWA,SAC5E5N,KAAKmD,EAAiB7B,IAAIqF,EAAK1C,IAE5BA,CACX,CACA,EAAAsJ,CAAwBK,EAAYtN,GAChC,MAAM6I,EAAOnJ,KACPsZ,EAAWnQ,EAAKuH,GAAiB9C,GACvC,MAAO,IAAM5N,KAAK8D,EAAa,IAAMwV,EAASrS,KAAKkC,EAAKjC,IAAwBiC,EAAKH,QAAoBD,EAAWzI,IACxH,CACA,EAAAqT,CAAsB/F,GAClB,IAAIsB,EAAItB,EAAW2L,MAAM,4CAGzB,GAFKrK,IACDA,EAAItB,EAAW2L,MAAM,sDACpBrK,EACD,OAAO,KACX,MAAMsK,GAAUtK,EAAE,IAAM,IACnBN,MAAM,KACNtB,IAAIX,GAAKA,EAAE9D,QACXwE,OAAOoM,SACN7Q,GAAQsG,EAAE,IAAM,IAAIrG,OACpBsP,EAAUvP,EAAKsC,WAAW,MAAQtC,EAAK8Q,SAAS,KAEtD,MAAO,CAAExB,WAAYsB,EAAQ5Q,KADXuP,EAAUvP,EAAK6D,MAAM,GAAI,GAAK7D,EACFuP,UAClD,CACA,EAAAF,CAAsBuB,EAAQ5Q,EAAMuP,GAEhC,OAAWrP,SAAS,SAAU0Q,EAAQ,eADtBrB,EAAUvP,EAAO,YAAcA,EAAO,OACU,KACpE,CACA,EAAA+Q,CAAUnU,EAAMoU,GACZ,GAAMvb,OAAOwb,eAAerU,KAAUnH,OAAOyb,YAAanc,EAAc6H,GACpE,OAAOA,EACX,MAAM2D,EAAOnJ,KAGb,GAFKA,KAAK8J,KACN9J,KAAK8J,GAAqB,IAAIhM,GAC9BkC,KAAK8J,GAAmBjD,IAAIrB,GAC5B,OAAOxF,KAAK8J,GAAmB1I,IAAIoE,GACvC,MAAMuU,EAAQ,IAAIC,MAAMxU,EAAM,CAC1BpE,IAAK,CAAC8V,EAAQvK,EAAGsN,KACb,GAAItc,EAAcuZ,GAAS,CACvB,GAAIvK,IAAMuN,OAAOC,SAEb,OADAhR,EAAKvC,EAAiBgT,GACfzJ,QAAQ/O,IAAI8V,EAAQvK,EAAGsN,IAExB,WAANtN,GAAgC,iBAANA,GAAkB,QAAQhE,KAAKgE,KACzDxD,EAAKvC,EAAiBgT,EAE9B,MAEIzQ,EAAKvC,EAAiBgT,GAE1B,MAAM5S,EAAQmJ,QAAQ/O,IAAI8V,EAAQvK,EAAGsN,GACrC,OAAItc,EAAcuZ,IAA4B,mBAAVlQ,GAAwB,CAAC,OAAQ,MAAO,QAAS,UAAW,SAAU,OAAQ,UAAW,aAAc,QAAQK,SAASsF,GACjJ,YAAapG,GAChB,GAAI4C,EAAKhH,EAEL,MAAUiY,MAAM,0BAAiCR,EAAPlR,MADtBiE,EAAPjE,oDAGjB,MAAMwI,EAAMgG,EACNmD,EAAYnJ,EAAIpM,OAChBwV,EAAcpJ,EAAI,GAClBqJ,EAAarJ,EAAImJ,EAAY,GAC7B7B,EAASxR,EAAMiC,MAAMiO,EAAQ3Q,GAInC,OAHI2K,EAAIpM,SAAWuV,GAAanJ,EAAI,KAAOoJ,GAAepJ,EAAIA,EAAIpM,OAAS,KAAOyV,GAC9EpR,EAAKvD,EAAcgU,GAEhBpB,CACX,EAGAxR,GAAkB,iBADFA,EAETmC,EAAKwQ,GAAU3S,EAAO4S,GAE1B5S,GAEXwT,QAAUtD,GAAoB/G,QAAQqK,QAAQtD,GAC9CrQ,IAAK,CAACqQ,EAAQvQ,IAAiBwJ,QAAQtJ,IAAIqQ,EAAQvQ,GACnDrF,IAAK,CAAC4V,EAAQvK,EAAG3F,KACb,GAAImC,EAAKpI,EACL,OAAO,EACX,GAAIoI,EAAKhH,EAEL,MAAUiY,MAAM,yBADGR,EAAPlR,IAAkC,iBAANiE,EAAiB,GAAK,IAAaA,kDAG/E,GAAiB,iBAANA,EACP,OAAO,EACX,MAAM8N,EAAMtK,QAAQtJ,IAAIqQ,EAAQvK,GAC1B+N,EAAWD,EAAMtK,QAAQ/O,IAAI8V,EAAQvK,QAAK5D,EAIhD,GAHI/B,GAA0B,iBAAVA,IAChBA,EAAQmC,EAAKwQ,GAAU3S,EAAoB,iBAAN2F,EAAiBiN,EAAoBA,EAAa,IAAajN,KAEnG8N,EAAK,CACN,IACItK,QAAQC,eAAe8G,EAAQvK,EAAG,CAC9B0D,aAAc,EACdC,WAAY,EACZC,SAAU,EACVvJ,SAER,CACA,MACImJ,QAAQ7O,IAAI4V,EAAQvK,EAAG3F,EAC3B,CAEA,OADAmC,EAAKvD,EAAcgU,GACZ,CACX,CACA,OAAIc,IAAa1T,IAEjBmJ,QAAQ7O,IAAI4V,EAAQvK,EAAG3F,GACvBmC,EAAKvD,EAAcgU,IAFR,GAKfe,eAAgB,CAACzD,EAAQvK,KACrB,GAAIxD,EAAKhH,EAEL,MAAUiY,MAAM,yBADGR,EAAPlR,IAAkC,iBAANiE,EAAiB,GAAK,IAAaA,kDAG/E,OAAOwD,QAAQwK,eAAezD,EAAQvK,MAI9C,OADA3M,KAAK8J,GAAmBxI,IAAIkE,EAAMuU,GAC3BA,CACX,CACA,CAAAxU,CAAoBC,GAChB,MAAM2D,EAAOnJ,KACb,OAAO,IAAIga,MAAMxU,EAAM,CACnBpE,IAAK,CAAC8V,EAAQpH,EAAUmK,KACpB,MAAMjT,EAAQmJ,QAAQ/O,IAAI8V,EAAQpH,EAAUmK,GAC5C,OAAInK,IAAaoK,OAAOC,SACbnT,GACa,iBAAb8I,GACP3G,EAAKvC,EAAiBkJ,GAEtB9I,GAA0B,iBAAVA,EACTmC,EAAKwQ,GAAU3S,EAAO8I,GAE1B9I,IAEXwT,QAAUtD,GAAW/G,QAAQqK,QAAQtD,GACrCrQ,IAAK,CAACqQ,EAAQvQ,IAAQwJ,QAAQtJ,IAAIqQ,EAAQvQ,GAC1CrF,IAAK,CAAC4V,EAAQpH,EAAU9I,EAAOiT,KAC3B,GAAI9Q,EAAKpI,EACL,OAAO,EACX,GAAIoI,EAAKhH,EACL,MAAUiY,MAAM,yBAAgCtK,EAAPpH,kDAE7C,GAAIoH,IAAaoK,OAAOC,UAAYxc,EAAcuZ,GAC9C,OAAOlQ,EACX,MAAM0T,EAAWvK,QAAQ/O,IAAI8V,EAAQpH,GAIrC,GAHI9I,GAA0B,iBAAVA,IAChBA,EAAQmC,EAAKwQ,GAAU3S,EAAO8I,IAE9B4K,IAAa1T,EACb,OAAO,EAEX,GADYmJ,QAAQtJ,IAAIqQ,EAAQpH,GAe5BK,QAAQ7O,IAAI4V,EAAQpH,EAAU9I,EAAOiT,QAbrC,IACI9J,QAAQC,eAAe8G,EAAQpH,EAAU,CACrCO,aAAc,EACdC,WAAY,EACZC,SAAU,EACVvJ,SAER,CACA,MACImJ,QAAQ7O,IAAI4V,EAAQpH,EAAU9I,EAAOiT,EACzC,CAMJ,GADAja,KAAK4F,EAAckK,GACf9P,KAAKyB,GAAkC,WAAbqO,EAAuB,CACjD,MAAM8K,EAAK1D,EAAO3M,OACdqQ,IACAA,EAAG9K,GAAY9I,GACnB,MAAM6T,EAAM7a,KAAK8B,EAAagO,GAC1B+K,IAAQ7a,KAAK0B,IACb1B,KAAK0B,EAAqB,EAC1B1B,KAAK8D,EAAa,IAAM+W,EAAI5T,KAAKjH,KAAKkH,IAAwBF,EAAO0T,IACrE1a,KAAK0B,EAAqB,EAElC,CACA,OAAO,IAGnB,CACA,CAAAwF,CAAqB4T,EAAmB,GACpC,MAAMC,EAAW,CACbC,KAAQ,OACRC,SAAY,IAAMjb,KAAKkJ,UACvBgS,aAAgB,IAAMlb,KAAKmG,IAC3BgV,oBAAwBlX,GAAOjE,KAAKgE,EAAoBC,GACxDmX,UAAc9H,GACNA,GACAtT,KAAKuD,EAAelC,KAAKiS,QACpBtT,KAAKsD,GACNyG,eAAe,KACX,IAAK/J,KAAKsD,GAAoBtD,KAAKuD,EAAeuB,OAAQ,CACtD,MAAM0C,EAAIxH,KAAKuD,EAAekE,OAAO,EAAGzH,KAAKuD,EAAeuB,QAC5D,IAAK,MAAMb,KAAMuD,EACbxH,KAAK8D,EAAa,IAAMG,IAEhC,MAIL,IAAIoX,QAAQC,IACftb,KAAKuD,EAAelC,KAAK,IAAMia,KAC1Btb,KAAKsD,GACNyG,eAAe,KACX,IAAK/J,KAAKsD,GAAoBtD,KAAKuD,EAAeuB,OAAQ,CACtD,MAAM0C,EAAIxH,KAAKuD,EAAekE,OAAO,EAAGzH,KAAKuD,EAAeuB,QAC5D,IAAK,MAAMb,KAAMuD,EACbxH,KAAK8D,EAAa,IAAMG,IAEhC,MAIhBsX,IAAOvb,KAAKO,EACZib,IAAOxb,KAAKG,EACZsb,WAAczb,KAAKa,EACnB6a,aAAgB1b,KAAKe,EACrB4a,QAAW3b,KAAKC,EAChB2b,UAAa5b,KAAK4B,EAClBia,QAAY5X,IACR,MAAM6X,EAAa9b,KAAKoC,EACxB,GAAIpC,KAAKmC,EACL,MAAUiY,MAAM,8FAEpBpa,KAAKoC,EAAuB,EAC5B,IACI,MAAqB,mBAAP6B,EAAoBA,SAAO8E,CAC7C,CACA,QACI/I,KAAKoC,EAAuB0Z,EAC5B9b,KAAKmG,GACT,IAGR,OAAO,IAAI6T,MAAMha,KAAKsF,EAAO,CACzBlE,IAAK,CAAC8V,EAAQ6E,IACNA,KAAW7E,GACXlX,KAAK4G,EAAiBmV,GACZ7E,EAAO6E,IAGRA,KAAW/b,KAAK6B,EAClB7B,KAAK0G,EAAkBqV,GAC9BA,KAAWhB,EACJA,EAASgB,GACb/b,KAAKyF,EAASsW,GAEzBza,IAAK,CAAC0a,EAASD,EAAS/U,KACpB,GAAIhH,KAAKmC,EACL,MAAUiY,MAAM,yBAAgC2B,EAAPrT,kDAG7C,OADA1I,KAAKsF,EAAMyW,GAAW/U,EACf,IAGnB,CACA,EAAAgC,CAAoB1E,EAAO2X,GACvB,MAAMC,EAAYlc,KACZmc,EAAcF,EAAgBjc,KAAK6Q,GAAkBoL,GAAiB,KACtEG,EAAYD,EAAc,IAAI7Z,IAAIlE,EAAO+d,IAAgB,IAAI7Z,IAC7D+Z,EAA6B,oBAAXC,OAAyBA,YAASvT,EACpDwT,EAAiC,oBAAbvd,SAA2BA,cAAW+J,EAC1DyT,EAAMxc,KAAKI,UAAU0Y,KACrB2D,IAAYD,EAAIE,mBAChBC,EAAQ,IAAIra,KAAKka,EAAII,cAAgB,IAAItP,IAAIJ,GAAYA,EAAPxE,KAClDmU,EAAwB,IAAI/e,EAC5Bgf,EAAcxL,IAChB,IAAKA,EACD,OAAOA,EAEX,GAD6C,mBAAvBA,EAAE7M,iBAEpB,OAAO6M,EACX,MAAMyL,EAAa,IAAIjf,EACjBkf,EAAU,CAAC1Y,EAAOE,KACpB,IACI,OAAOF,EAAQ,UAAmByE,IAAZvE,EAAwB,GAAyB,iBAAZA,EAAuByY,KAAKC,UAAU1Y,GAAkBA,EAAPkE,GAChH,CACA,MACI,OAAOpE,EAAQ,GACnB,GAEJ,OAAO,IAAI0V,MAAM1I,EAAG,CAChB,GAAAlQ,CAAI8V,EAAQiG,EAAMC,GACd,GAAa,qBAATD,EACA,OAAO,SAAU7Y,EAAOC,EAASC,GAC7B,MAAM6Y,EAAMnB,EAAUzZ,GAAmB,gBACnC6a,EAAON,EAAQ1Y,EAAOE,GAC5B,IAAI+Y,EAASV,EAAsBzb,IAAI8V,GAClCqG,IACDA,EAAS,IAAIvb,IACb6a,EAAsBvb,IAAI4V,EAAQqG,IAEtC,IAAIC,EAAQD,EAAOnc,IAAIic,GAClBG,IACDA,EAAQ,IAAIxb,IACZub,EAAOjc,IAAI+b,EAAKG,IAEpB,MAAMhX,EAAOgX,EAAMpc,IAAIkc,GACvB,GAAI9W,EAAM,CACN,IACI0Q,EAAO1N,oBAAoBlF,EAAOkC,EAAKjC,QAASiC,EAAKhC,QACzD,CACA,MAAQ,CACR,IACIgC,EAAKwS,SAAWxS,EAAKwS,SACzB,CACA,MAAQ,CACRwE,EAAMrZ,OAAOmZ,EACjB,CACApG,EAAOzS,iBAAiBH,EAAOC,EAASC,GACxC,MAAMwU,EAAUkD,EAAUlY,EAAoB,KAC1C,IACIkT,EAAO1N,oBAAoBlF,EAAOC,EAASC,EAC/C,CACA,MAAQ,IAEZ,IACI,GAAuB,mBAAZD,GAA0ByU,EAAS,CAC1C,IAAI9J,EAAI6N,EAAW3b,IAAImD,GAClB2K,IACDA,EAAI,IAAIlN,IACR+a,EAAWzb,IAAIiD,EAAS2K,IAE5BA,EAAE5N,IAAIgc,EAAMtE,EAChB,CACJ,CACA,MAAQ,CACRwE,EAAMlc,IAAIgc,EAAM,CAAE/Y,UAASC,UAASwU,WACxC,EAEJ,GAAa,wBAATmE,EACA,OAAO,SAAU7Y,EAAOC,EAASC,GAC7B,IACI0S,EAAO1N,oBAAoBlF,EAAOC,EAASC,EAC/C,CACA,MAAQ,CACR,MAAMmC,EAAMqW,EAAQ1Y,EAAOE,GAC3B,IACI,GAAuB,mBAAZD,EAAwB,CAC/B,MAAM2K,EAAI6N,EAAW3b,IAAImD,GACzB,GAAI2K,EAAG,CACH,MAAMuO,EAAMvO,EAAE9N,IAAIuF,GAClB,GAAI8W,EAAK,CACL,IACIA,GACJ,CACA,MAAQ,CAERvO,EAAE/K,OAAOwC,EACb,CACe,IAAXuI,EAAEwO,MACFX,EAAW5Y,OAAOI,EAC1B,CACJ,CACJ,CACA,MAAQ,CACR,MAAMgZ,EAASV,EAAsBzb,IAAI8V,GACzC,GAAIqG,EACA,IAAK,MAAOI,EAAQH,KAAUD,EAAQ,CAClC,MAAMK,EAAMJ,EAAMpc,IAAIuF,GACtB,GAAIiX,GAAOA,EAAIrZ,UAAYA,EAAS,CAChC,IACIqZ,EAAI5E,SAAW4E,EAAI5E,SACvB,CACA,MAAQ,CACRwE,EAAMrZ,OAAOwC,GACM,IAAf6W,EAAME,MACNH,EAAOpZ,OAAOwZ,GAClB,KACJ,CACJ,CAER,EAEJ,GAAa,kBAATR,EACA,OAAO,SAAUlM,GAAO,MAAM4M,EAAM3G,EAAO4G,cAAc7M,GAAM,OAAO6L,EAAWe,EAAM,EAE3F,GAAa,qBAATV,EACA,OAAO,SAAUlM,GAAO,MAAM8M,EAAO7G,EAAO8G,iBAAiB/M,GAAM,OAAOrT,MAAMM,KAAK6f,GAAMzQ,IAAIwP,EAAa,EAEhH,GAAa,mBAATK,EACA,OAAO,SAAU5d,GAAM,MAAMse,EAAM3G,EAAO9X,eAAeG,GAAK,OAAOud,EAAWe,EAAM,EAE1F,GAAa,aAATV,EAAqB,CACrB,MAAMc,EAAM/G,EAAOlY,SACnB,OAAO8d,EAAWmB,IAAQA,CAC9B,CACA,GAAa,SAATd,GAAmBjG,IAAWqF,EAAW,CACzC,MAAMpJ,EAAI+D,EAAOtO,KACjB,OAAOkU,EAAW3J,IAAMA,CAC5B,CACA,GAAa,gBAATgK,GAA0BjG,IAAWqF,EAAW,CAChD,MAAM2B,EAAIhH,EAAOiH,YACjB,OAAOrB,EAAWoB,IAAMA,CAC5B,CACA,MAAMxQ,EAAMwJ,EAAOiG,GACnB,GAAmB,mBAARzP,EACP,IACI,OAAOA,EAAI0Q,KAAKlH,EACpB,CACA,MAAQ,CAEZ,OAAOxJ,CACX,KAGF2Q,EAAmB,IAAIrc,IACvBsc,EAAoB,IAAItc,IACxBuc,EAAe,IAAIvc,IA4EnBwc,EAAmB,CAACC,EAAMC,KAC5B,IAAKD,EACD,OACJ,MAAME,EAAU,YAAapY,GACzB,MAAMqY,EAAO,IAAIH,KAAQlY,GACnBI,EAAMuV,EAAUzZ,GAAmB,gBACzC,IAAIoc,EAAiB,aAATH,EAAsBxC,EAAUrZ,EAAuBC,SAAoB,WAAT4b,EAAoBxC,EAAUrZ,EAAuBE,OAASmZ,EAAUrZ,EAAuBG,aAC7K,MAAMwD,EAAOqY,EAAMzd,IAAIuF,GACvB,GAAIH,EAAM,CACN,IACIA,EAAKoY,KAAKE,YACd,CACA,MAAQ,CAER,IACItY,EAAKwS,SAAWxS,EAAKwS,SACzB,CACA,MAAQ,CACZ,CACA,MAAMA,EAAUkD,EAAUlY,EAAoB,KAAQ,IAClD4a,EAAKE,YACT,CACA,MAAQ,IAER,OADAD,EAAMvd,IAAIqF,EAAK,CAAEiY,OAAM5F,YAChB4F,CACX,EAEA,OADAD,EAAQ7E,UAAY2E,EAAK3E,UAClB6E,GAEL5D,EAAW,CACbgE,QAAW9C,GAAiB,KAC5B+C,OAAU1a,GAAS,QACfmY,IAAYE,EAAM9V,IAAI,cAAgB,CAAC,EAAI,CAAEoY,WA3G/B,CAAChb,EAAIib,KAAO3Y,KAC9B,MAAMI,EAAMuV,EAAUzZ,GAAmB,gBACnC+D,EAAO0V,EAAUxZ,EAAsBtB,IAAIuF,GACjD,GAAIH,EAAM,CACN,IACI6V,GAAS8C,eAAe3Y,EAAKjH,GACjC,CACA,MAAQ,CAER,IACIiH,EAAKwS,SAAWxS,EAAKwS,SACzB,CACA,MAAQ,CACZ,CACA,MAAMzZ,EAAK8c,GAAS4C,aAAahb,EAAIib,KAAO3Y,GAC5C,GAAU,MAANhH,EAAY,CACZ,MAAMyZ,EAAUkD,EAAUlY,EAAoB,KAAQ,IAClDqY,GAAS8C,eAAe5f,EAC5B,CACA,MAAQ,IACR8e,EAAiB/c,IAAI/B,EAAIyZ,GACzBkD,EAAUxZ,EAAsBpB,IAAIqF,EAAK,CAAEpH,KAAIyZ,WACnD,CACA,OAAOzZ,OAqFHkd,IAAYE,EAAM9V,IAAI,gBAAkB,CAAC,EAAI,CAAEsY,aAAiB5f,IAAS,IACrE8c,GAAS8C,eAAe5f,EAC5B,CACA,MAAQ,CACR,QACI,IACI,MAAM6f,EAAIf,EAAiBjd,IAAI7B,GAC3B6f,IACAA,IACAf,EAAiBla,OAAO5E,GAEhC,CACA,MAAQ,CACZ,OACAkd,IAAYE,EAAM9V,IAAI,eAAiB,CAAC,EAAI,CAAEwY,YAjG/B,CAACpb,EAAIib,KAAO3Y,KAC/B,MAAMI,EAAMuV,EAAUzZ,GAAmB,gBACnC+D,EAAO0V,EAAUvZ,EAAuBvB,IAAIuF,GAClD,GAAIH,EAAM,CACN,IACI6V,GAASiD,gBAAgB9Y,EAAKjH,GAClC,CACA,MAAQ,CAER,IACIiH,EAAKwS,SAAWxS,EAAKwS,SACzB,CACA,MAAQ,CACZ,CACA,MAAMzZ,EAAK8c,GAASgD,cAAcpb,EAAIib,KAAO3Y,GAC7C,GAAU,MAANhH,EAAY,CACZ,MAAMyZ,EAAUkD,EAAUlY,EAAoB,KAAQ,IAClDqY,GAASiD,gBAAgB/f,EAC7B,CACA,MAAQ,IACR+e,EAAkBhd,IAAI/B,EAAIyZ,GAC1BkD,EAAUvZ,EAAuBrB,IAAIqF,EAAK,CAAEpH,KAAIyZ,WACpD,CACA,OAAOzZ,OA2EHkd,IAAYE,EAAM9V,IAAI,iBAAmB,CAAC,EAAI,CAAEyY,cAAkB/f,IAAS,IACvE8c,GAASiD,gBAAgB/f,EAC7B,CACA,MAAQ,CACR,QACI,IACI,MAAM6f,EAAId,EAAkBld,IAAI7B,GAC5B6f,IACAA,IACAd,EAAkBna,OAAO5E,GAEjC,CACA,MAAQ,CACZ,OACAkd,IAAYE,EAAM9V,IAAI,yBAA2B,CAAC,EAAI,CAAES,sBAvF9BgM,IAC9B,MAAM3M,EAAMuV,EAAUzZ,GAAmB,gBACnC+D,EAAO0V,EAAUtZ,EAAkBxB,IAAIuF,GAC7C,GAAIH,EAAM,CACN,IACI6V,GAASkD,uBAAuB/Y,EAAKjH,GACzC,CACA,MAAQ,CAER,IACIiH,EAAKwS,SAAWxS,EAAKwS,SACzB,CACA,MAAQ,CACZ,CACA,MAAMzZ,EAAK8c,GAAS/U,wBAAwBgM,GAC5C,GAAU,MAAN/T,EAAY,CACZ,MAAMyZ,EAAUkD,EAAUlY,EAAoB,KAAQ,IAClDqY,GAASkD,uBAAuBhgB,EACpC,CACA,MAAQ,IACRgf,EAAajd,IAAI/B,EAAIyZ,GACrBkD,EAAUtZ,EAAkBtB,IAAIqF,EAAK,CAAEpH,KAAIyZ,WAC/C,CACA,OAAOzZ,OAiEHkd,IAAYE,EAAM9V,IAAI,wBAA0B,CAAC,EAAI,CAAE0Y,qBAAyBhgB,IAAS,IACrF8c,GAASkD,uBAAuBhgB,EACpC,CACA,MAAQ,CACR,QACI,IACI,MAAM6f,EAAIb,EAAand,IAAI7B,GACvB6f,IACAA,IACAb,EAAapa,OAAO5E,GAE5B,CACA,MAAQ,CACZ,OACAkd,IAAYE,EAAM9V,IAAI,oBAAsB,CAAC,EAAI,CAAE2Y,iBAAoBhB,EAAiBnC,GAASmD,iBAAkB,gBACnH/C,IAAYE,EAAM9V,IAAI,kBAAoB,CAAC,EAAI,CAAE4Y,eAAkBjB,EAAiBnC,GAASoD,eAAgB,cAC7GhD,IAAYE,EAAM9V,IAAI,wBAA0B,CAAC,EAAI,CAAE6Y,qBAAwBlB,EAAiBnC,GAASqD,qBAAsB,oBAC/HjD,IAAYE,EAAM9V,IAAI,UAAY,CAAC,EAAI,CAAEyV,OAAUQ,EAAWT,OAC9DI,IAAYE,EAAM9V,IAAI,YAAc,CAAC,EAAI,CAAE7H,SAAY8d,EAAWP,KAE1E,OAAO,IAAIvC,MAAM,CAAC,EAAG,CACjB5Y,IAAK,CAACue,EAAI5D,IACFI,GAAeJ,KAAWI,EACnBA,EAAYJ,GACnBA,KAAWG,EAAU5W,EACd4W,EAAU5W,EAAMyW,GACvBA,KAAWG,EAAUra,EACdqa,EAAUxV,EAAkBqV,GACnCA,KAAWG,EAAUzW,EACdyW,EAAUzW,EAASsW,GAC1BA,KAAWhB,EACJA,EAASgB,QADpB,EAIJza,IAAK,CAACqe,EAAI5D,EAAS/U,KACXmV,GAAeC,EAAUvV,IAAIkV,GAC7BI,EAAYJ,GAAW/U,EAGvBkV,EAAU5W,EAAMyW,GAAW/U,EAExB,GAEXH,IAAK,CAAC8Y,EAAI5D,OAAeI,KAAeJ,KAAWI,KAC/CJ,KAAWG,EAAU5W,GACrByW,KAAWG,EAAUra,GACrBka,KAAWG,EAAUzW,GACrBsW,KAAWhB,GAEvB,CACA,EAAA3L,CAAqB9O,EAASsf,EAAOhS,EAAY3M,EAAW8N,GACxD,MAAM5F,EAAOnJ,KACP0P,EAAYvG,EAAKoE,GAAwBK,EAAYtN,GACrDuf,EAAgB,CAAExW,KAAM,SAAUuE,aAAYtE,gBAAiBrI,GACjEA,EAAUmd,MACVjV,EAAKrF,EAAa,IAAM7C,EAAUmd,KAAK9d,EAASoP,IAAa9B,EAAYzE,EAAM4F,EAAWW,IAE9F,MAIMxJ,EAASiD,EAAK0E,GAJL,KACP5M,EAAUmJ,QACVjB,EAAKrF,EAAa,IAAM7C,EAAUmJ,OAAO9J,EAASoP,IAAa9B,EAAYzE,EAAM4F,EAAWW,MAGpGmQ,EAAczV,OAASlE,EACvBiD,EAAKnI,EAAcV,EAASuf,EAChC,CACA,EAAAxR,CAAwB/N,EAASwf,EAAelS,GAC5C,MAAMzE,EAAOnJ,KACP0P,EAAYvG,EAAKoE,GAAwBK,EAAYtN,GAC3D,GAAsB,UAAlBwf,EAA2B,CAC3B,MAAMtf,EAAKF,EACX,IAAK6I,EAAK3F,EAAkBpC,IAAIZ,GAAK,CACjC,MAAMuf,EAAU,IAAIzd,IACd0d,EAAKxf,EAAGyf,WAAa,GAC3B,GAAID,EACA,IAAK,MAAME,KAAOF,EAAGpR,MAAM,OACnBsR,GACAH,EAAQ3b,IAAI8b,GAExB/W,EAAK3F,EAAkBlC,IAAId,EAAIuf,EACnC,CACJ,CACA,MAAMI,EAAQ7f,EACd,IAAI8f,EAAW,KACf,GAAIN,KAAiBK,EACjBC,EAAWN,MACV,CACD,MAAMO,EAAQP,EAAcQ,QAAQ,YAAa,CAACjI,EAAGkI,IAAMA,EAAEC,eACzDH,KAASF,EACTC,EAAWC,EAC0B,aAAhCP,EAAc1T,eAAgC,aAAc+T,IACjEC,EAAW,WACnB,CACA,MAAMK,KAAmBL,GAAuC,kBAApBD,EAAMC,IAC5CM,KAAwBN,KAAaA,KAAYD,IAAqC,mBAApBA,EAAMC,IACxEO,IAAuB9gB,EAAkB+gB,GAAId,EAAc1T,eAsG3DlG,EAASiD,EAAK0E,GArGL,KACX,MAAM7G,EAAQ0I,IACd,GAAsB,UAAlBoQ,EAA2B,CAC3B,MAAMtf,EAAKF,EACLugB,EAAO1X,EAAK3F,EAAkBpC,IAAIZ,GACxC,GAAqB,iBAAVwG,EACPxG,EAAGyf,UAAYY,GAAQA,EAAKnD,KAAO,IAAImD,GAAMC,KAAK,MAAQ9Z,EAAQ,IAAMA,EAAQ,IAAMA,GAAS,QAE9F,GAAIrJ,EAAcqJ,GAEfxG,EAAGyf,UADHY,GAAQA,EAAKnD,KACE,IAAImD,KAAS7Z,EAAMqG,OAAOoM,UAAUqH,KAAK,KAEzC9Z,EAAMqG,OAAOoM,SAASqH,KAAK,UAE7C,GAAI9Z,GAA0B,iBAAVA,EAAoB,CACrC6Z,GAAQA,EAAKnD,OACbld,EAAGyf,UAAY,IAAIY,GAAMC,KAAK,MAClC,IAAK,MAAMhV,KAAO9E,EAAO,CACrB,MAAM+Z,IAAO/Z,EAAM8E,GACnB,IAAKA,EACD,SACJ,MAAMkV,EAASlV,EAAI8C,MAAM,OACzB,IAAK,IAAI3I,EAAI,EAAGA,EAAI+a,EAAOlc,OAAQmB,IAAK,CACpC,MAAMgb,EAAKD,EAAO/a,GACbgb,GAELzgB,EAAG0gB,UAAUC,OAAOF,EAAIF,EAC5B,CACJ,CACJ,MACkB,MAAT/Z,GAAiB6Z,GAAQA,EAAKnD,KACnCld,EAAGyf,UAAY,IAAIY,GAAMC,KAAK,KAEhB,MAAT9Z,GACLxG,EAAG4N,gBAAgB,SAEvB,MACJ,CACA,GAAI0R,IAAkBthB,EAAW,CAC7B,MAAMgC,EAAKF,EACX,MAAqB,iBAAV0G,OACPxG,EAAGnB,MAAM+hB,QAAUpa,GAGnBA,GAA0B,iBAAVA,OAChB3I,OAAOgjB,OAAO7gB,EAAGnB,MAAO2H,QAGf,MAATA,GACAxG,EAAG4N,gBAAgB,SAE3B,CACA,GAAKqS,GAAiBL,GAAaO,EAAoB,CACnD,MAAMW,IAAYta,EAOlB,OANIoZ,GAAYK,IACZN,EAAMC,GAAYkB,QAClBA,EACAhhB,EAAQihB,aAAazB,EAAe,IAEpCxf,EAAQ8N,gBAAgB0R,GAEhC,CACA,IAAI0B,EAAa,KACjB,GAAIxa,GAA0B,iBAAVA,EAAoB,CACpC,MAAMya,EAAQ,GACd,IAAK,MAAMjX,KAAKxD,EACRA,EAAMwD,IACNiX,EAAMpgB,KAAKmJ,GAEnBgX,EAAaC,EAAM3c,OAAS2c,EAAMX,KAAK,KAAO,IAClD,MACS9Z,UACLwa,EAAoBxa,EAAP0B,IAEjB,GAAIgY,GAAsBN,EACtB,GAAmB,OAAfoB,EACA,IACIrB,EAAMC,GAAYoB,CACtB,CACA,MAAOtI,GACH,IACI5Y,EAAQihB,aAAazB,EAAe0B,EACxC,CACA,MAAQ,CACZ,MAGAlhB,EAAQ8N,gBAAgB0R,QAIb,OAAf0B,EACYlhB,EAAQuS,aAAaiN,KACrB0B,GACRlhB,EAAQihB,aAAazB,EAAe0B,GAGpClhB,EAAQqK,aAAamV,IACrBxf,EAAQ8N,gBAAgB0R,KAIpC3W,EAAKnI,EAAcV,EAAS,CAAE+I,KAAM,OAAQuE,aAAYxD,OAAQlE,GACpE,CACA,EAAA2K,CAAkBrQ,GACd,IAAKA,EACD,OAAO,KACX,IAAKA,EAAG0L,cAAe,CACnB,MAAMwV,EAAMlhB,EAAG4S,GACf,GAAIsO,GAAOA,EAAIxV,cACX1L,EAAKkhB,MAEJ,CACD,MAAMC,EAAenhB,EAAGwR,GACpB2P,IACAnhB,EAAKmhB,EACb,CACJ,CACA,MAAMC,EAAS,CAAC,EAChB,IAAInW,EAAOjL,EACX,KAAOiL,GAAM,CACT,MAAMoW,EAAQ7hB,KAAKkD,EAAY9B,IAAIqK,GAGnC,GAFIoW,GACAxjB,OAAOgjB,OAAOO,EAAQC,GACtBpW,IAASzL,KAAKM,QACd,MACJmL,EAAOA,EAAKS,aAChB,CACA,OAAO9N,EAAOwjB,GAAQ9c,OAAS8c,EAAS,IAC5C,CACA,EAAAE,CAAyBC,GACrB,IAAK,MAAOzhB,EAAS8I,KAAepJ,KAAKmB,EACrC,IAAK,MAAMF,KAAamI,GACf2Y,IAASzhB,GAAYA,aAAmB0hB,SAAWD,EAAK5K,SAAS7W,KAAcW,EAAUmJ,QAC1FnJ,EAAUmJ,QAI1B,CACA,EAAAqE,CAAkBnO,EAASsN,GACvB,MAAMzE,EAAOnJ,KACPuZ,EAAQ3L,EAAW/E,OAAO0Q,MAAM,4EACtC,IAAKA,EACD,OAEJ,MAAM0I,EAAU1I,EAAM,IAAMA,EAAM,GAC5B2I,EAAW3I,EAAM,GACjB4I,EAAW5I,EAAM,GACjB3H,EAAc7S,EAAE8S,cAAc,SAEpC,IAAIuQ,EADJ9hB,EAAQwR,YAAYC,aAAaH,EAAatR,GAE1CA,EAAQ3B,KAAiBC,GACzBwjB,EAAkBrjB,EAAEO,cAAc,OAClC8iB,EAAgB/iB,MAAMZ,GAAeQ,EACrCmjB,EAAgB3iB,YAAYa,EAAQ6R,QAAQC,UAAU,IACtD9R,EAAQwR,YAAYmB,YAAY3S,KAGhC8hB,EAAkB9hB,EAClBA,EAAQwR,YAAYmB,YAAY3S,IAEpC,MAAM+hB,EAAgBzQ,EAAY1F,eAAiB/C,EAAK7I,QAClDgiB,EAAWnZ,EAAKoE,GAAwB4U,EAAStZ,OAAQwZ,GACzDE,EAAY,GACZC,EAAc,CAACC,EAAMC,KACvB,MAAMb,EAAQ,CAAEI,CAACA,GAAUQ,GAG3B,OAFIP,IACAL,EAAMK,GAAYQ,GACfb,GA2DLc,EAAM,CAAEtZ,KAAM,MAAOuE,cACrB1H,EAASiD,EAAK0E,GA1DL,KACX,MAAM+U,EAAOzZ,EAAKrF,EAAa,KAC3B,MAAM0U,EAAS8J,IACf,GAAInkB,EAAQqa,GACR,MAAO,CAAEuF,KAAMvF,EAAQla,KAAM,MACjC,GAAmB,oBAAR0D,KAAuBwW,aAAkBxW,IAChD,MAAO,CAAE+b,KAAM9f,EAAOua,EAAO7O,UAAWrL,KAAML,EAAOua,EAAOla,SAEhE,GAAmB,oBAARgE,KAAuBkW,aAAkBlW,IAChD,MAAO,CAAEyb,KAAM9f,EAAOua,EAAO7O,UAAWrL,KAAM,MAElD,GAAIka,GAA6C,mBAA5BA,EAAO0B,OAAOC,UAC/B,MAAO,CAAE4D,KAAM9f,EAAOua,GAASla,KAAM,MAEzC,GAAIka,GAA4B,iBAAXA,EAAqB,CACtC,MAAMla,EAAOD,OAAOC,KAAKka,GAEzB,MAAO,CAAEuF,KADIzf,EAAKgP,IAAI9C,GAAKgO,EAAOhO,IACnBlM,OACnB,CACA,MAAO,CAAEyf,KAAM,GAAIzf,KAAM,OAC1B,CAAEyf,KAAM,GAAIzf,KAAM,OACfyf,EAAO6E,EAAK7E,KACZ8E,EAAUD,EAAKtkB,KACrB,GAAIikB,EAAUzd,OAASiZ,EAAKjZ,OACxB,KAAOyd,EAAUzd,OAASiZ,EAAKjZ,QAAQ,CACnC,MAAM8Z,EAAO2D,EAAUO,MACnBlE,EAAK9M,YACL8M,EAAK9M,WAAWmB,YAAY2L,EACpC,CAEJ,MAAMmE,EAASC,KAAKC,IAAIV,EAAUzd,OAAQiZ,EAAKjZ,QAC/C,IAAK,IAAImB,EAAI,EAAGA,EAAI8c,EAAQ9c,IAAK,CAC7B,MAAM2Y,EAAO2D,EAAUtc,GAEvBkD,EAAKjG,EAAY5B,IAAIsd,EAAM4D,EAAYzE,EAAK9X,GAD7B4c,EAAUA,EAAQ5c,GAAKA,IAEtCkD,EAAK2Y,GAAyBlD,EAClC,CACA,GAAIb,EAAKjZ,OAASyd,EAAUzd,OAAQ,CAChC,MAAMoe,EAAOnkB,EAAEokB,yBACTC,EAAQb,EAAUzd,OACxB,IAAK,IAAImB,EAAImd,EAAOnd,EAAI8X,EAAKjZ,OAAQmB,IAAK,CACtC,MAAMod,EAAQjB,EAAgBhQ,UAAU,GACxCiR,EAAMjV,gBAAgB,SAEtBjF,EAAKjG,EAAY5B,IAAI+hB,EAAOb,EAAYzE,EAAK9X,GAD9B4c,EAAUA,EAAQ5c,GAAKA,IAEtC,IACIkD,EAAKjB,GAAiBmb,EAC1B,CACA,MAAQ,CACRH,EAAKzjB,YAAY4jB,GACjBd,EAAUlhB,KAAKgiB,EACnB,CACA,MAAMC,EAAMf,EAAUa,EAAQ,IAAMxR,EAChC0R,EAAIxR,YACJwR,EAAIxR,WAAWC,aAAamR,EAAMI,EAAIjQ,YAC9C,GAGsCsP,GAC1CA,EAAIvY,OAASlE,EACbiD,EAAKnI,EAAc4Q,EAAa+Q,EACpC,CACA,EAAApb,GACI,MAAM4B,EAAOnJ,KACb,IAAK,MAAMoJ,KAAcD,EAAKhI,EAAYwI,SACtC,IAAK,MAAM4Z,KAAMna,EACb,KAAItK,IAAkCykB,EAAG/T,KAErC+T,EAAGnZ,OACH,IACImZ,EAAGnZ,QACP,CACA,MAAOzC,GAEP,CAIhB,EAMJ,OAJA9H,EAAkB+gB,GAAM,CACpB4C,UAAW,EAAGC,eAAgB,EAAGC,WAAY,EAAGC,QAAS,GAE/C,IAr2Ed,MACI,WAAApiB,GACIvB,KAAK4jB,GAAc,IAAI5hB,IACvBhC,KAAK6jB,GAAQ,IAAI/lB,EACjBkC,KAAK8jB,GAAW,GAChB9jB,KAAK+jB,GAAU,CAAC,EAChB/jB,KAAKgkB,GAAoB,IAAIhiB,IAC7BhC,KAAKikB,GAAsB,IAAIjiB,IAC/BhC,KAAKkkB,GAAa,IAAIpmB,EACtBkC,KAAKmkB,GAAsB,EAC3BnkB,KAAKiB,UAAY,CAACrB,EAAMqB,KACpB,GAAIrB,EAAKsL,WAAWxL,EAAM,KACtB,MAAU0a,MAAM,iDAAiD1a,kDAGrE,OADAM,KAAKgkB,GAAkB1iB,IAAI1B,EAAMqB,GAC1BjB,MAEXA,KAAKokB,kBAAqBC,IACtB,IAAKA,IAAeA,EAAWzkB,KAC3B,MAAUwa,MAAM,qCACpB,MAAMxa,EAAOykB,EAAWzkB,KAAKwM,cAC7B,GAAIpM,KAAKikB,GAAoBpd,IAAIjH,GAC7B,MAAUwa,MAAM,mBAAmBxa,yBAEvC,OADAI,KAAKikB,GAAoB3iB,IAAI1B,EAAMykB,GAC5BrkB,MAEXA,KAAKskB,GAA8B1kB,GAASI,KAAKikB,GAAoB7iB,IAAIxB,EAAKwM,eAC9EpM,KAAKmP,GAAuBvP,GAASI,KAAKgkB,GAAkB5iB,IAAIxB,GAChEI,KAAK8Y,GAAa,IAAM9Y,KAAK+jB,GAC7B/jB,KAAKukB,KAAO,CAACC,EAAS,CAAC,KACnBxkB,KAAK+jB,GAAU,CAAEU,UAAW,OAAQC,MAAO,EAAOC,iBAAkB,KAASH,GAChC,kBAAlCxkB,KAAK+jB,GAAQY,mBACpB7lB,EAAiCkB,KAAK+jB,GAAQY,kBAElD,MAAMC,EAAO5kB,KAAK+jB,GAAQrV,OAO1B,GALIhP,EADAklB,GAAwB,iBAATA,GAAqBA,EAAK/lB,GAAc,EACjD+lB,EAGA,IAEN7lB,GAAsB,YAAjBA,EAAE8lB,WACP9lB,EAAE0F,iBAAiB,mBAAoB,KAAQzE,KAAK8kB,KAA0B9kB,KAAK+kB,KAA2B,MAAMxE,EAAIxhB,GAAG+e,cAAc9d,KAAK+jB,GAAQU,WAAgBlE,IAClKvgB,KAAKglB,GAAoBzE,GACrBvgB,KAAK+jB,GAAQhL,UACb/Y,KAAKilB,GAAkB1E,WAG9B,IAAKxhB,GAAsB,aAAjBA,EAAE8lB,YAA8C,gBAAjB9lB,EAAE8lB,WAA8B,CAC1E7kB,KAAK8kB,KACL9kB,KAAK+kB,KACL,MAAMxE,EAAIxhB,GAAG+e,cAAc9d,KAAK+jB,GAAQU,WACpClE,IACAvgB,KAAKglB,GAAoBzE,GACrBvgB,KAAK+jB,GAAQhL,UACb/Y,KAAKilB,GAAkB1E,GAEnC,CACA,OAAOvgB,MAEXA,KAAKklB,gBAAmBb,IACpB,MAAMnI,EAAY,IAAIrc,EAAkBG,KAAKmlB,KAAwBd,EAAYrkB,MAGjF,OAFAA,KAAK4jB,GAAYtiB,IAAI4a,EAAU3c,GAAI2c,GACnCA,EAAUvW,kBACHuW,GAEXlc,KAAK+kB,GAA0B,KAC3B,MAAMN,EAAY1lB,GAAG+e,cAAc9d,KAAK+jB,GAAQU,WAChD,IAAKA,EACD,OACJ,MAAMW,EAAoBX,EAAUzG,iBAAiB,IAAIre,EAAS,YAClE,IAAK,MAAMW,KAAW8kB,EACbplB,KAAKmI,GAAuB7H,IAC7BN,KAAKqlB,GAAwB/kB,GAErC,MAAMglB,EAAWb,EAAUzG,iBAAiB,qBAC5C,IAAK,MAAMxd,KAAM8kB,EACRtlB,KAAKmI,GAAuB3H,IAC7BR,KAAKulB,GAA2B/kB,GAGxC,GADAR,KAAKwlB,KACiC,IAAlCJ,EAAkBvmB,KAAsBmB,KAAKmI,GAAuBsc,GAAY,CAChF,MAAMgB,EAAaxnB,EAAO+B,KAAK4jB,GAAYja,UACrC+b,EAAgBD,EAAWA,EAAW5mB,GAAc,GACtD6mB,IAAkBA,EAAcjlB,SAChCilB,EAAc7d,cAAc4c,EAEpC,GAEJzkB,KAAKwlB,GAAkB,KACnB,GAAKxlB,KAAK8jB,GAASjlB,GAAnB,CAEA,IAAK,MAAM8N,KAAK3M,KAAK8jB,GAAU,CAC3B,IACI/jB,EADA2hB,EAAM/U,EAAEnM,GAAG0L,cAEf,KAAOwV,IAAQ3hB,GAAQ,CACnB,MAAM4lB,EAAQ3lB,KAAKmI,GAAuBuZ,GACtCiE,EACA5lB,EAAS4lB,EAETjE,EAAMA,EAAIxV,aAClB,CACInM,GACA4M,EAAEyM,KAAKtZ,eAAeC,EAE9B,CACA,IAAK,MAAM4M,KAAK3M,KAAK8jB,GACjBnX,EAAEyM,KAAKtR,kBACX9H,KAAK8jB,GAAW,EAjBN,GAmBd9jB,KAAKqlB,GAA0B,CAAC/kB,EAASslB,KACrC,MAAMC,EAAiBvlB,EAAQuS,aAAalT,EAAS,SACrD,IAAI6F,EAAO,CAAC,EACZ,GAAIqgB,EAAgB,CAChBvlB,EAAQ8N,gBAAgBzO,EAAS,SACjC,IACI,GAAIimB,EAAe,CACf,IAAIE,EAAY,CAAC,EACjB,IACIA,EAAYF,EAAc1e,OAA4B,CAAC,CAC3D,CACA,MACI4e,EAAY,CAAC,CACjB,CAEAtgB,EADmBsD,SAAS,SAAU,yBAAyB+c,OACxD1b,CAAO2b,EAClB,MAEItgB,EAAOxF,KAAK+lB,GAAqBF,GAGjCrgB,EADAA,EAAKb,QACE,CAAEA,QAASa,EAAKb,QAASa,KAAM,IAAKA,IAGpC,CAAEA,KAAM,IAAKA,IAEpBogB,IACApgB,EAAKA,KAAKmW,QAAUiK,EAE5B,CACA,MAAO1M,GACP,CACJ,CACA,MAAME,EAAOpZ,KAAKklB,gBAAgB1f,GAClC4T,EAAK9Y,QAAUA,EACf8Y,EAAKzT,kBACL3F,KAAKoI,GAAiBgR,EAAK9Y,QAAS8Y,GACpCpZ,KAAK8jB,GAASziB,KAAK,CAAEb,GAAIF,EAAS8Y,SAClC,MAAM4M,EAAW1lB,EAAQuS,aAAalT,EAAS,SAC/C,GAAIqmB,EAAU,CACV1lB,EAAQ8N,gBAAgBzO,EAAS,SACjC,MAAMsmB,EAAkB7M,EAAKvV,GAAYkB,QACzCqU,EAAKvV,EAAWkB,QAAU,WACtB,GAAIkhB,EACA,IACIA,EAAgBhf,KAAKjH,KACzB,CACA,MAAQ,CAEZ,MAAM0P,EAAgB5G,SAAS,MAAO,aAAekd,EAAW,MAChEjc,eAAe,KACX,IAAIqP,EAAKtY,aAAgBsY,EAAK9Y,SAAY8Y,EAAK9Y,QAAQ4lB,YAEvD,IACI,MAAM5b,EAAM8O,EAAKlS,OAA4BkS,EAAKrR,gBAAkB,CAAC,EAC/DyQ,EAAS9I,EAAUpF,GACzB,GAAsB,mBAAXkO,EACP,IACIA,GACJ,CACA,MAAQ,CAEhB,CACA,MAAQ,GAEhB,CACJ,GAEJxY,KAAKmlB,GAAuB,IAAM,aAAegB,KAAKC,MAAQ,IAAMpD,KAAKqD,SAASC,SAAS,IAAIC,UAAU,EAAG,GAC5GvmB,KAAK+lB,GAAwBnY,IACzB,IACI,OAAW9E,SAAS,UAAY8E,EAAW/E,OAApC,EACX,CACA,MACI,MAAO,CAAC,CACZ,GAEJ7I,KAAKgK,GAAwBwc,IAAkBxmB,KAAK4jB,GAAYzf,OAAOqiB,IACvExmB,KAAKymB,GAAO,OACZzmB,KAAKoI,GAAmB,CAAC9H,EAAS4b,KAC9Blc,KAAK6jB,GAAMviB,IAAIhB,EAAS4b,IAE5Blc,KAAK6J,GAAsBvJ,IAAc,IACrCN,KAAK6jB,GAAM1f,OAAO7D,EACtB,CACA,MAAQ,EACZ,CACA,EAAAwkB,GACI,IAAK/lB,EACD,OACJ,GAAY,MAARW,EACA,OACJ,MAAMH,EAAK,sBAAsBG,EACjC,GAAIX,EAAEI,OAASJ,EAAEK,eAAeG,GAAK,CACjC,MAAMF,EAAQN,EAAEO,cAAcd,GAC9Ba,EAAME,GAAKA,EACXF,EAAMG,YAAc,IAAIE,YAAcA,UAAYA,YAAcA,eAAiBA,cAAgBA,YAAcA,cAAgBA,8BAC/HX,EAAEI,KAAKM,YAAYJ,EACvB,CACJ,CACA,EAAA2lB,CAAoBP,GACZzkB,KAAK0mB,IAA6C,oBAArBlH,mBAEjCxf,KAAK0mB,GAAgB,IAAIlH,iBAAiBmH,IACtC,IAAK,MAAMvH,KAAKuH,EACZ,GAAe,cAAXvH,EAAE/V,KAAsB,CACxB,IAAK,IAAIpD,EAAI,EAAGA,EAAImZ,EAAEwH,WAAW9hB,OAAQmB,IAAK,CAC1C,MAAMgF,EAAImU,EAAEwH,WAAW3gB,GACvB,GAAmB,IAAfgF,EAAES,SACF,SACJ,MAAMlL,EAAKyK,EACa,cAApBzK,EAAG7B,IACS6B,EAAGqS,aAAa,YAChB7S,KAAKmI,GAAuB3H,IACpCR,KAAKulB,GAA2B/kB,EAE5C,CACA,IAAK,IAAIyF,EAAI,EAAGA,EAAImZ,EAAEyH,aAAa/hB,OAAQmB,IAAK,CAC5C,MAAMgF,EAAImU,EAAEyH,aAAa5gB,GACzB,GAAmB,IAAfgF,EAAES,SACF,SACJ,MAAMlL,EAAKyK,EACXlB,eAAe,KACX,GAAIvJ,EAAG0lB,YACH,OACJ,MAAMY,EAAQ,CAACtmB,GACf,KAAOsmB,EAAMhiB,QAAQ,CACjB,MAAM4c,EAAMoF,EAAMhE,MACZ1J,EAAOpZ,KAAKmI,GAAuBuZ,GACzC,GAAItI,IAASA,EAAKtY,YACd,IACIsY,EAAKlQ,SACT,CACA,MAAQ,CAEZ,IAAIb,EAAQqZ,EAAI3T,kBAChB,KAAO1F,GACHye,EAAMzlB,KAAKgH,GACXA,EAAQA,EAAM4F,kBAEtB,GAER,CACJ,MACK,GAAe,eAAXmR,EAAE/V,KAAuB,CAC9B,MAAM6N,EAASkI,EAAElI,OACbA,GAAkC,cAAxBA,EAAOvY,IAAoD,WAApBygB,EAAEU,eACnD9f,KAAK+mB,GAA0B7P,EAEvC,CAEJlX,KAAKwlB,OAETxlB,KAAK0mB,GAAcM,QAAQvC,EAAW,CAAEwC,UAAW,EAAMC,QAAS,EAAMlc,WAAY,EAAMmc,gBAAiB,CAAC,YAChH,CACA,EAAAJ,CAA0BvmB,GACtB,MAAMiI,GAAOjI,EAAGqS,aAAa,WAAa,IAAIhK,OACxC3H,EAAWlB,KAAKmI,GAAuB3H,GAC7C,GAAKiI,EAAL,CAUA,GAAIvH,IAAaA,EAASJ,YACtB,IACII,EAASgI,SACb,CACA,MAAQ,CAEZ1I,EAAGqP,UAAY,GACf7P,KAAKulB,GAA2B/kB,EARhC,KATA,CACI,GAAIU,IAAaA,EAASJ,YACtB,IACII,EAASgI,SACb,CACA,MAAQ,CAEZ1I,EAAGqP,UAAY,EAEnB,CASJ,CACA,EAAA0V,CAA2B/kB,GACvB,MAAM4mB,EAAS5mB,EAAGqS,aAAa,UAC/B,IAAKuU,EACD,OACJ,MAAM5lB,EAAMxB,KAAKskB,GAA2B8C,GAC5C,IAAK5lB,EACD,OAEJ,IAAI6lB,EACAC,EAAM9mB,EAAG0L,cACb,KAAOob,IAAQD,GAAY,CACvB,MAAM1B,EAAQ3lB,KAAKmI,GAAuBmf,GACtC3B,EACA0B,EAAa1B,EAEb2B,EAAMA,EAAIpb,aAClB,CACA,IAAIqb,EAAQ,KACRC,EAAiB,KACjBC,EAAoB,KACnBF,IACDA,EAAQ,CAAC,GACb,MAAMG,EAAWlnB,EAAGqS,aAAalT,EAAS,SAC1C,GAAI+nB,EAAU,CAEV,GADAD,EAAoBC,EAChBL,EACA,IAGIG,EAFe1e,SAAS,MAAO,qBAAuB4e,EAAW,KAEhDzjB,CADLojB,EAAWtf,WAAW,GAEtC,CACA,MACIyf,EAAiB,IACrB,MAGA,IACIA,EAAqB1e,SAAS,WAAa4e,EAAW,IAArC,EACrB,CACA,MACIF,EAAiB,IACrB,CAEJ,GAAIA,GAA4C,iBAAnBA,EACzB,IAAK,MAAMhd,KAAKgd,EACNhd,KAAK+c,IACPA,EAAM/c,GAAYgd,EAAehd,GAAtB9B,IACvBlI,EAAG4N,gBAAgBzO,EAAS,QAChC,CACA,IAmBIgoB,EAnBAC,EAAW,CAAC,EAChB,GAAIpmB,EAAIqmB,SACJ,IACID,EAAWpmB,EAAIqmB,SAASN,IAAU,CAAC,CACvC,CACA,MACIK,EAAW,CAAC,CAChB,CAEJ,GAAIpmB,EAAIgE,KACJ,IAAK,MAAMgF,KAAKhJ,EAAIgE,KAChBoiB,EAASpd,GAAKhJ,EAAIgE,KAAKgF,GAG/B,IAAK,MAAMA,KAAK+c,EACN/c,KAAKod,IACPA,EAASpd,GAAK+c,EAAM/c,IAI5B,GAFAod,EAASrd,OAASgd,EAEM,mBAAb/lB,EAAI+iB,KACX,IACI,MAAMoB,EAAQnkB,EAAI+iB,KAAKgD,GACvBI,EAAWhC,GAA0B,iBAAVA,EAAsBA,OAAQ5c,CAC7D,CACA,MACI4e,OAAU5e,CACd,CAEJ,MAAM+e,EAAU,CACZtiB,KAAMoiB,EACNjjB,QAAS,IAAMnD,EAAImD,SAAW,CAAC,KAAQgjB,GAAShjB,SAAW,CAAC,GAC5DC,SAAU,IAAMpD,EAAIoD,UAAY,CAAC,KAAQ+iB,GAAS/iB,UAAY,CAAC,GAC/DC,YAAa,IAAMrD,EAAIqD,aAAe,CAAC,KAAQ8iB,GAAS9iB,aAAe,CAAC,GACxEE,QAAS4iB,GAAS5iB,SAAWvD,EAAIuD,QACjCC,UAAW2iB,GAAS3iB,WAAaxD,EAAIwD,UACrCG,YAAawiB,GAASxiB,aAAe3D,EAAI2D,YACzCC,cAAeuiB,GAASviB,eAAiB5D,EAAI4D,cAC7CF,QAASyiB,GAASziB,SAAW1D,EAAI0D,QACjCD,UAAW0iB,GAAS1iB,WAAazD,EAAIyD,UACrCI,cAAesiB,GAAStiB,eAAiB7D,EAAI6D,eAE3C+T,EAAOpZ,KAAKklB,gBAAgB4C,GAClC1O,EAAK9Y,QAAUE,EACf,MAAMunB,EAAmB,GACzB,KAAOvnB,EAAGwnB,YAAY,CAClB,MAAM/c,EAAIzK,EAAGwnB,WACbD,EAAiB1mB,KAAK4J,GACtBzK,EAAGyS,YAAYhI,EACnB,CACA,GAAIzJ,EAAIymB,SAAU,CACd,MAAMC,EAAiBC,IACnB3nB,EAAGqP,UAAYsY,EACf,MAAMC,EAAQ5nB,EAAGwd,iBAAiB,QAClC,GAAIoK,EAAMtjB,OACN,IAAK,MAAMujB,KAAUD,EAAO,CACxB,MAAMxoB,EAAOyoB,EAAOxV,aAAa,QACjC,IAAIyV,EAAU,GAOd,GALIA,EAAUP,EAAiB1a,OAD3BzN,EACkCqL,GAAoB,IAAfA,EAAES,UAAkBT,EAAE4H,aAAa,UAAYjT,EAGpDqL,GAAoB,IAAfA,EAAES,WAAmBT,EAAEN,aAAa,SAE3E2d,EAAQxjB,OAAQ,CAChB,MAAMoe,EAAOnkB,EAAEokB,yBACf,IAAK,MAAMlY,KAAKqd,EACZpF,EAAKzjB,YAAYwL,GACrBod,EAAOvW,YAAYyW,aAAarF,EAAMmF,EAC1C,CACJ,GAGFG,EAAShnB,EAAIymB,SACnB,GAAsB,iBAAXO,EACPN,EAAcM,QAEb,GAAsB,mBAAXA,EACZ,IACI,MAAM3K,EAAM2K,IACR3K,GAA2B,mBAAbA,EAAI4K,MAClBjoB,EAAGqP,UAAY,GACfgO,EAAI4K,KAAKC,IAAUR,EAAcQ,GAAQ,IAAK,IAC1CtP,EAAKnR,IACT,CACA,MAAQ,KAGRigB,GAAqBrK,GAAO,IAAdnV,GAEtB,CACA,MACIlI,EAAGqP,UAAY,EACnB,MAEK2Y,GAAiC,mBAAhBA,EAAOC,OAC7BjoB,EAAGqP,UAAY,GACf2Y,EAAOC,KAAKC,IAAUR,EAAcQ,GAAQ,IAAK,IAC7CtP,EAAKnR,IACT,CACA,MAAQ,IAEhB,MAEI,IAAK,MAAMgD,KAAK8c,EACZvnB,EAAGf,YAAYwL,GAEvBjL,KAAKoI,GAAiB5H,EAAI4Y,GAC1B,IACI,MAAMuP,EAASnoB,EAAGwd,iBAAiB,IAAIre,EAAS,YAChD,IAAK,MAAM8L,KAAQkd,EACV3oB,KAAKmI,GAAuBsD,IAC7BzL,KAAKqlB,GAAwB5Z,EAAM2N,EAE/C,CACA,MAAQ,CAER,GADApZ,KAAK8jB,GAASziB,KAAK,CAAEb,KAAI4Y,SACrBqO,GAAqBJ,EACrB,IACIjO,EAAKnP,GAAmBwd,EAAmBJ,EAC/C,CACA,MAAQ,CAEZrnB,KAAKwlB,IACT,CACA,EAAArd,CAAuB7H,GAAW,OAAON,KAAK6jB,GAAMziB,IAAId,EAAU,CAClE,OAAA0mB,CAAQzmB,GAAY,CACpB,EAAA0kB,CAAkBR,GACd,GAAIzkB,KAAKmkB,GACL,OACJ,MAAMpC,EAAO0C,EACPlgB,EAAW2U,IACb,IAAIwI,EAAMxI,EAAEhC,OACZ,KAAOwK,GAAOA,IAAQK,EAAK7V,gBACnBgN,EAAE0P,cADgC,CAGtC,MAAMtb,EAAMtN,KAAKkkB,GAAW9iB,IAAIsgB,GAChC,GAAIpU,EAAK,CACL,MAAMyQ,EAAOzQ,EAAIlM,IAAI8X,EAAE7P,MACvB,GAAI0U,GAAQA,EAAKjZ,OACb,IAAK,MAAM+jB,IAAK,IAAI9K,GAChB,IACI,GAAI8K,EAAEzP,MAAQyP,EAAEzP,KAAKtY,YAAa,CAC9B,MAAMmF,EAAI8X,EAAKvV,QAAQqgB,GACnB5iB,GAAK,GACL8X,EAAKtW,OAAOxB,EAAG,GACnB,QACJ,CACA,KAAK4iB,EAAExb,QAAUwb,EAAExb,OAAO6L,MACtB2P,EAAE1P,IAAID,GACF2P,EAAEhV,MAAM,CACR,MAAMjK,EAAMmU,EAAKvV,QAAQqgB,GACrBjf,GAAO,GACPmU,EAAKtW,OAAOmC,EAAK,EACzB,CAER,CACA,MAAQ,CAGpB,CACA8X,EAAMA,EAAIxV,aACd,GAEE4c,EAAgB,CAAC,UAAW,SAC5BC,EAAe,CAAC,QAAS,QAAS,UACxC,IAAK,MAAMnQ,KAAMkQ,EACb/G,EAAKtd,iBAAiBmU,EAAIrU,EAAS,GACvC,IAAK,MAAMqU,KAAMmQ,EACbhH,EAAKtd,iBAAiBmU,EAAIrU,EAAS,GACvCvE,KAAKmkB,GAAsB,CAC/B,CACA,EAAAlL,CAAmB3Y,EAASgE,EAAO0kB,GAC/B,IAAI1b,EAAMtN,KAAKkkB,GAAW9iB,IAAId,GACzBgN,IACDA,EAAM,IAAItL,IACVhC,KAAKkkB,GAAW5iB,IAAIhB,EAASgN,IAEjC,IAAIyQ,EAAOzQ,EAAIlM,IAAIkD,GAMnB,OALKyZ,IACDA,EAAO,GACPzQ,EAAIhM,IAAIgD,EAAOyZ,IAEnBA,EAAK1c,KAAK2nB,GACH,KACH,IACI,MAAM9Z,EAAIlP,KAAKkkB,GAAW9iB,IAAId,GACxB2oB,EAAI/Z,GAAG9N,IAAIkD,GACjB,IAAK2kB,EACD,OACJ,MAAMrf,EAAMqf,EAAEzgB,QAAQwgB,GAClBpf,GAAO,GACPqf,EAAExhB,OAAOmC,EAAK,EACtB,CACA,MAAQ,EAEhB,EAm1DR,CAl4EuB,GAm4EvB,GAAsB,oBAAX0S,OAAwB,CAC/B,MAAM4B,EAAI5B,OACV4B,EAAEgL,MAAQlrB,EACVkgB,EAAEiL,OAASnrB,CACf","ignoreList":[]}