{"version":3,"file":"x-tool.min.js","names":["ARRAY_ISARRAY","Array","isArray","XToolFramework","_Afrom","from","_AisArr","_Okeys","Object","keys","_logErr","_args","STR_STYLE","STR_DISPLAY","STR_NONE","STR_TAGNAME","STR_TEMPLATE","STR_LENGTH","XTOOL_ENABLE_STATIC_DIRECTIVES","d","document","head","getElementById","style","createElement","id","textContent","appendChild","PFX","attrName","name","ReactiveComponent","attachToParent","parent","this","_parent","_addChild","_id","framework","_framework","element","_element","el","isBound","_isBound","v","isMounted","_isMounted","isDestroyed","_isDestroyed","_addDirective","directive","existing","_directives","get","push","set","constructor","def","_propUpdateActive","_runningPropEffect","_beforeMountCalled","_children","_computed","_propEffects","_computedCache","Map","_computedDeps","_inverseComputedDeps","_collectingComputedKey","_isInComputedEvaluation","_isInMethodExecution","_hasComputed","_cleanupFunctions","Set","_eventListeners","_loopScopes","WeakMap","_expressionCache","_propertyDependencies","_activeEffect","_renderScheduled","_nextTickQueue","_transitionConfigs","_initialClassSets","_propParent","_invalidateComputedCache","_prop","clear","affected","c","delete","_callLifecycleHook","hookName","hook","_lifecycle","_safeExecute","call","_createMethodContext","String","_addCleanupFunction","fn","wrapper","add","_addEventListenerWithCleanup","event","handler","options","addEventListener","_originalMethods","methods","computed","propEffects","length","mounted","unmounted","destroyed","updated","beforeMount","beforeUnmount","beforeDestroy","_data","_createReactiveData","data","_methods","_bindMethods","callBeforeMount","_onDataChange","property","effectsToRun","directDeps","i","effect","_scheduleRender","boundMethods","methodName","originalMethod","compiledWrapper","test","src","trim","trySrc","Function","e","args","currentContext","prev","ctx","_createContextProxy","undefined","err","_getComputedValue","key","_trackDependency","has","computeFn","dep","value","propKey","deps","includes","requestAnimationFrame","_render","q","splice","_errorMsg","fallback","console","error","bindToElement","completeBinding","getContext","includeComputed","_applyAsyncTemplateResolved","_parseDirectives","_getComponentByElement","_registerElement","_setupDOMRemovalDetection","child","_removeChild","index","indexOf","destroy","self","directives","type","customDirective","unbind","removeEventListener","cleanup","_propEffect","values","idx","_unregisterElement","_deepReactiveCache","queueMicrotask","_unregisterComponent","_initReactiveProps","expr","evalFn","update","obj","$props","k","processElement","isRoot","hasAttribute","isComponentTag","hasTextOrHtml","forAttr","a","attributes","n","startsWith","_bindDirective","attr","_bindTextInterpolationsIn","_walkElements","nodes","childNodes","node","nodeType","Node","TEXT_NODE","textNode","raw","nodeValue","__x_tool_ti","parentTag","parentElement","tagName","toLowerCase","inCode","segs","open","literal","slice","bs","p","charCodeAt","prefixStart","prefixEnd","repeat","close","hasExpr","some","s","hasEscaped","evaluators","filter","map","_createElementEvaluator","exprIndex","out","val","dirInfo","expression","_createEffect","processor","firstElementChild","next","nextElementSibling","directiveName","isShortBind","removeAttribute","_bindAttributeDirective","_bindTransitionDirective","_bindSimpleDirective","_bindModelDirective","_bindIfDirective","_bindForDirective","prefix","rest","split","suffix","mods","modifiers","reduce","acc","m","_getCustomDirective","_bindCustomDirective","_bindEventDirective","conf","final","assign","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","_transitionIn","done","end","classList","remove","offsetWidth","_onTransitionEnd","_transitionOut","cb","called","setTimeout","updateFn","directiveRef","_static","found","evaluator","originalDisplay","_prevShown","innerHTML","isCheckbox","isNumeric","isMultiSelect","multiple","Reflect","defineProperty","configurable","enumerable","writable","getValueEvaluator","setValueEvaluator","_createEvaluator","checkboxValue","loopScope","_collectLoopScope","inferCheckboxValue","member","checked","sel","arr","opt","selected","setInputValue","t","eventType","parseFloat","getInputValue","currentVal","forEach","$value","placeholder","createComment","parentNode","insertBefore","__x_if_anchorParent","branches","makeActualElement","content","cloneNode","isTemplate","first","firstEval","__x_tool_bound","originalNodes","sib","isElse","isElseIf","getAttribute","branch","active","orig","removeChild","mountBranch","b","__x_if_current","nextSibling","unmountBranch","eventName","trimmed","arrow","_extractArrowFunction","opts","once","passive","capture","onlySelf","shouldPrevent","prevent","shouldStop","stop","keyAliasMap","esc","escape","space","tab","backspace","del","arrowup","arrowdown","arrowleft","arrowright","home","pageup","pagedown","comboRequirements","ctrl","alt","shift","meta","buttonMap","left","middle","right","touchSingle","single","touchMulti","multi","modifierKeys","allowedKeys","aliases","allowedButtons","btn","needKeyCheck","needButtonCheck","needTouchCheck","passesFilters","target","TouchEvent","tCount","touches","MouseEvent","button","KeyboardEvent","ctrlKey","altKey","shiftKey","metaKey","runExpr","thisCtx","compiledArrow","_compileArrowForEvent","paramsList","body","isBlock","mapArgs","_","isStatement","executor","result","createEventHandler","preventDefault","stopPropagation","_getConfig","delegate","remover","_registerDelegated","run","comp","compiled","match","params","Boolean","endsWith","_wrapData","getPrototypeOf","prototype","proxy","Proxy","receiver","Symbol","iterator","beforeLen","beforeFirst","beforeLast","apply","ownKeys","had","oldValue","deleteProperty","pc","eff","_includeComputed","specials","$log","$destroy","$forceUpdate","$addCleanupFunction","$nextTick","Promise","resolve","$el","$id","$isMounted","$isDestroyed","$parent","$children","$mutate","prevMethod","prevComputed","propStr","inv","_target","warn","targetElement","component","mergedScope","scopeKeys","gWindow","window","gDocument","cfg","sandbox","sandboxExpressions","allow","allowGlobals","wrapTarget","handlerMap","makeKey","JSON","stringify","prop","rem","size","res","querySelector","list","querySelectorAll","doc","_timeoutRemovers","_intervalRemovers","_rafRemovers","wrapObserverCtor","Orig","Wrapped","inst","disconnect","$target","$event","ms","clearTimeout","r","setInterval","clearInterval","cancelAnimationFrame","MutationObserver","ResizeObserver","IntersectionObserver","_t","_name","directiveInfo","bind","attributeName","baseSet","oc","className","cls","elAny","propName","camel","replace","toUpperCase","isBooleanProp","hasNonFunctionProp","isKnownBooleanAttr","_BA","base","join","on","tokens","tk","toggle","cssText","boolVal","setAttribute","normalized","parts","cur","anchorParent","merged","scope","_updateElementDirectives","root","Element","contains","itemVar","indexVar","listCode","templateToClone","contextAnchor","listEval","instances","createScope","item","idxOrKey","dir","norm","keysArr","pop","minLen","Math","min","keyVal","frag","createDocumentFragment","start","clone","ref","dr","itemscope","formnovalidate","novalidate","default","_components","_byEl","_pending","_config","_customDirectives","_namedComponentDefs","_delegated","_delegatedRootBound","Error","registerComponent","definition","_getRegisteredComponentDef","init","config","container","debug","staticDirectives","_hpf","readyState","_applyPrefixInitialCSS","_autoDiscoverComponents","_ensureRootObserver","_ensureDelegation","createComponent","_generateComponentId","componentElements","_bindElementAsComponent","reusable","_instantiateNamedComponent","_processPending","components","lastComponent","maybe","parentForEval","dataExpression","parentCtx","_parseDataExpression","initExpr","existingMounted","isConnected","Date","now","random","toString","substring","componentId","_log","_rootObserver","records","addedNodes","removedNodes","stack","_onComponentSourceChanged","observe","childList","subtree","attributeFilter","source","parentComp","par","props","dynamicPropObj","rawPropExpression","propExpr","initDef","baseData","makeData","compDef","originalChildren","firstChild","template","applyTemplate","tpl","slots","slotEl","matched","replaceChild","tplVal","then","html","nested","cancelBubble","h","captureEvents","bubbleEvents","ev","entry","l","XTool"],"sourceRoot":"./dist","sources":["dist/x-tool.js"],"sourcesContent":["\"use strict\";\nconst ARRAY_ISARRAY = Array.isArray;\nconst FT_C = true;\nconst FT_TI = typeof __FEAT_TEXT_INTERP__ === 'boolean' ? __FEAT_TEXT_INTERP__ : true;\nconst _FT_DR = typeof __FEAT_DEEP_REACTIVE__ === 'boolean' ? __FEAT_DEEP_REACTIVE__ : true;\nconst FT_IFB = typeof __FEAT_IF_BRANCHES__ === 'boolean' ? __FEAT_IF_BRANCHES__ : true;\nconst FT_TR = typeof __FEAT_TRANSITION__ === 'boolean' ? __FEAT_TRANSITION__ : true;\nconst XToolFramework = function () {\n    const _Afrom = Array.from;\n    const _AisArr = ARRAY_ISARRAY;\n    const _Okeys = Object.keys;\n    const _logErr = (..._args) => { };\n    const STR_STYLE = 'style';\n    const STR_DISPLAY = 'display';\n    const STR_NONE = 'none';\n    const STR_TAGNAME = 'tagName';\n    const STR_TEMPLATE = 'TEMPLATE';\n    const STR_LENGTH = 'length';\n    let XTOOL_ENABLE_STATIC_DIRECTIVES = true;\n    const d = (typeof document !== 'undefined' ? document : null);\n    try {\n        if (d && d.head && !d.getElementById('x-tool-initial-css')) {\n            const style = d.createElement(STR_STYLE);\n            style.id = 'x-tool-initial-css';\n            style.textContent = '[x-show],[x-if],[x-else],[x-else-if],[x\\\\:show],[x\\\\:if],[x\\\\:else],[x\\\\:else-if]{display:none;}';\n            d.head.appendChild(style);\n        }\n    }\n    catch { }\n    let PFX = 'x';\n    const attrName = (name) => `${PFX}-${name}`;\n    class XToolFramework {\n        constructor() {\n            this._components = new Map();\n            this._byEl = new WeakMap();\n            this._pending = [];\n            this._config = {};\n            this._customDirectives = new Map();\n            this._namedComponentDefs = new Map();\n            this._delegated = new WeakMap();\n            this._delegatedRootBound = false;\n            this.directive = (name, directive) => {\n                if (name.startsWith(PFX + '-')) {\n                    throw new Error(`Custom directive names should not start with \"${PFX}-\". Use: XTool.directive(\"my-directive\", ...)`);\n                }\n                this._customDirectives.set(name, directive);\n                return this;\n            };\n            this.registerComponent = (definition) => {\n                if (!definition || !definition.name)\n                    throw new Error('registerComponent requires a name');\n                const name = definition.name.toLowerCase();\n                if (this._namedComponentDefs.has(name))\n                    throw new Error(`Component name \"${name}\" already registered`);\n                this._namedComponentDefs.set(name, definition);\n                return this;\n            };\n            this._getRegisteredComponentDef = (name) => this._namedComponentDefs.get(name.toLowerCase());\n            this._getCustomDirective = (name) => this._customDirectives.get(name);\n            this._getConfig = () => this._config;\n            this.init = (config = {}) => {\n                this._config = { container: 'body', debug: false, staticDirectives: true, ...config };\n                if (typeof this._config.staticDirectives === 'boolean') {\n                    XTOOL_ENABLE_STATIC_DIRECTIVES = this._config.staticDirectives;\n                }\n                const _hpf = this._config.prefix;\n                if (_hpf && typeof _hpf === 'string' && _hpf[STR_LENGTH] > 0) {\n                    PFX = _hpf;\n                }\n                else {\n                    PFX = 'x';\n                }\n                if (d && d.readyState === 'loading') {\n                    d.addEventListener('DOMContentLoaded', () => { this._applyPrefixInitialCSS(); this._autoDiscoverComponents(); const c = d?.querySelector(this._config.container); if (c) {\n                        this._ensureRootObserver(c);\n                        if (this._config.delegate)\n                            this._ensureDelegation(c);\n                    } });\n                }\n                else if (!d || d.readyState === 'complete' || d.readyState === 'interactive') {\n                    this._applyPrefixInitialCSS();\n                    this._autoDiscoverComponents();\n                    const c = d?.querySelector(this._config.container);\n                    if (c) {\n                        this._ensureRootObserver(c);\n                        if (this._config.delegate)\n                            this._ensureDelegation(c);\n                    }\n                }\n                return this;\n            };\n            this.createComponent = (definition) => {\n                const component = new ReactiveComponent(this._generateComponentId(), definition, this);\n                this._components.set(component.id, component);\n                component.callBeforeMount();\n                return component;\n            };\n            this._autoDiscoverComponents = () => {\n                const container = d?.querySelector(this._config.container);\n                if (!container)\n                    return;\n                const componentElements = container.querySelectorAll(`[${attrName('data')}]`);\n                for (const element of componentElements) {\n                    if (!this._getComponentByElement(element))\n                        this._bindElementAsComponent(element);\n                }\n                const reusable = container.querySelectorAll('component[source]');\n                for (const el of reusable) {\n                    if (!this._getComponentByElement(el))\n                        this._instantiateNamedComponent(el);\n                }\n                this._processPending();\n                if (componentElements[STR_LENGTH] === 0 && !this._getComponentByElement(container)) {\n                    const components = _Afrom(this._components.values());\n                    const lastComponent = components[components[STR_LENGTH] - 1];\n                    if (lastComponent && !lastComponent.isBound) {\n                        lastComponent.bindToElement(container);\n                    }\n                }\n            };\n            this._processPending = () => {\n                if (!this._pending[STR_LENGTH])\n                    return;\n                for (const p of this._pending) {\n                    let cur = p.el.parentElement;\n                    let parent;\n                    while (cur && !parent) {\n                        const maybe = this._getComponentByElement(cur);\n                        if (maybe)\n                            parent = maybe;\n                        else\n                            cur = cur.parentElement;\n                    }\n                    if (parent) {\n                        p.comp.attachToParent(parent);\n                    }\n                }\n                for (const p of this._pending)\n                    p.comp.completeBinding();\n                this._pending = [];\n            };\n            this._bindElementAsComponent = (element, parentForEval) => {\n                const dataExpression = element.getAttribute(attrName('data'));\n                let data = {};\n                if (dataExpression) {\n                    element.removeAttribute(attrName('data'));\n                    try {\n                        if (parentForEval) {\n                            let parentCtx = {};\n                            try {\n                                parentCtx = parentForEval._createMethodContext?.() || {};\n                            }\n                            catch {\n                                parentCtx = {};\n                            }\n                            const evalFn = new Function('parent', `with(parent){ return (${dataExpression}) }`);\n                            data = evalFn(parentCtx);\n                        }\n                        else {\n                            data = this._parseDataExpression(dataExpression);\n                        }\n                        if (data.methods) {\n                            data = { methods: data.methods, data: { ...data } };\n                        }\n                        else {\n                            data = { data: { ...data } };\n                        }\n                        if (parentForEval) {\n                            data.data.$parent = parentForEval;\n                        }\n                    }\n                    catch (e) {\n                    }\n                }\n                const comp = this.createComponent(data);\n                comp.element = element;\n                comp.callBeforeMount();\n                this._registerElement(comp.element, comp);\n                this._pending.push({ el: element, comp });\n                const initExpr = element.getAttribute(attrName('init'));\n                if (initExpr) {\n                    element.removeAttribute(attrName('init'));\n                    const existingMounted = comp._lifecycle?.mounted;\n                    comp._lifecycle.mounted = function () {\n                        if (existingMounted) {\n                            try {\n                                existingMounted.call(this);\n                            }\n                            catch { }\n                        }\n                        const evaluator = new Function('ctx', 'with(ctx){' + initExpr + '} ');\n                        queueMicrotask(() => {\n                            if (comp.isDestroyed || !comp.element || !comp.element.isConnected)\n                                return;\n                            try {\n                                const ctx = comp._createMethodContext?.() || comp.getContext?.() || {};\n                                const result = evaluator(ctx);\n                                if (typeof result === 'function') {\n                                    try {\n                                        result();\n                                    }\n                                    catch { }\n                                }\n                            }\n                            catch { }\n                        });\n                    };\n                }\n            };\n            this._generateComponentId = () => 'component_' + Date.now() + '_' + Math.random().toString(36).substring(2, 9);\n            this._parseDataExpression = (expression) => {\n                try {\n                    return new Function('return ' + expression.trim())();\n                }\n                catch {\n                    return {};\n                }\n            };\n            this._unregisterComponent = (componentId) => { this._components.delete(componentId); };\n            this._log = (..._args) => { };\n            this._registerElement = (element, component) => {\n                this._byEl.set(element, component);\n            };\n            this._unregisterElement = (element) => { try {\n                this._byEl.delete(element);\n            }\n            catch { } };\n        }\n        _applyPrefixInitialCSS() {\n            if (!d)\n                return;\n            if (PFX === 'x')\n                return;\n            const id = `x-tool-initial-css-${PFX}`;\n            if (d.head && !d.getElementById(id)) {\n                const style = d.createElement(STR_STYLE);\n                style.id = id;\n                style.textContent = `[${PFX}-show],[${PFX}-if],[${PFX}-else],[${PFX}-else-if],[${PFX}\\\\:show],[${PFX}\\\\:if],[${PFX}\\\\:else],[${PFX}\\\\:else-if]{display:none;}`;\n                d.head.appendChild(style);\n            }\n        }\n        _ensureRootObserver(container) {\n            if (this._rootObserver || typeof MutationObserver === 'undefined')\n                return;\n            this._rootObserver = new MutationObserver(records => {\n                for (const r of records) {\n                    if (r.type === 'childList') {\n                        for (let i = 0; i < r.addedNodes.length; i++) {\n                            const n = r.addedNodes[i];\n                            if (n.nodeType !== 1)\n                                continue;\n                            const el = n;\n                            if (el[STR_TAGNAME] === 'COMPONENT') {\n                                const src = el.getAttribute('source');\n                                if (src && !this._getComponentByElement(el))\n                                    this._instantiateNamedComponent(el);\n                            }\n                        }\n                        for (let i = 0; i < r.removedNodes.length; i++) {\n                            const n = r.removedNodes[i];\n                            if (n.nodeType !== 1)\n                                continue;\n                            const el = n;\n                            queueMicrotask(() => {\n                                if (el.isConnected)\n                                    return;\n                                const stack = [el];\n                                while (stack.length) {\n                                    const cur = stack.pop();\n                                    const comp = this._getComponentByElement(cur);\n                                    if (comp && !comp.isDestroyed) {\n                                        try {\n                                            comp.destroy();\n                                        }\n                                        catch { }\n                                    }\n                                    let child = cur.firstElementChild;\n                                    while (child) {\n                                        stack.push(child);\n                                        child = child.nextElementSibling;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else if (r.type === 'attributes') {\n                        const target = r.target;\n                        if (target && target[STR_TAGNAME] === 'COMPONENT' && r.attributeName === 'source') {\n                            this._onComponentSourceChanged(target);\n                        }\n                    }\n                }\n                this._processPending();\n            });\n            this._rootObserver.observe(container, { childList: true, subtree: true, attributes: true, attributeFilter: ['source'] });\n        }\n        _onComponentSourceChanged(el) {\n            const src = (el.getAttribute('source') || '').trim();\n            const existing = this._getComponentByElement(el);\n            if (!src) {\n                if (existing && !existing.isDestroyed) {\n                    try {\n                        existing.destroy();\n                    }\n                    catch { }\n                }\n                el.innerHTML = '';\n                return;\n            }\n            if (existing && !existing.isDestroyed) {\n                try {\n                    existing.destroy();\n                }\n                catch { }\n            }\n            el.innerHTML = '';\n            this._instantiateNamedComponent(el);\n        }\n        _instantiateNamedComponent(el) {\n            const source = el.getAttribute('source');\n            if (!source)\n                return;\n            const def = this._getRegisteredComponentDef(source);\n            if (!def) {\n                return;\n            }\n            let parentComp;\n            let par = el.parentElement;\n            while (par && !parentComp) {\n                const maybe = this._getComponentByElement(par);\n                if (maybe)\n                    parentComp = maybe;\n                else\n                    par = par.parentElement;\n            }\n            let props = null;\n            let dynamicPropObj = null;\n            let rawPropExpression = null;\n            if (!props)\n                props = {};\n            const propExpr = el.getAttribute(attrName('prop'));\n            if (propExpr) {\n                rawPropExpression = propExpr;\n                if (parentComp) {\n                    try {\n                        const fn = new Function('ctx', 'with(ctx){return (' + propExpr + ')}');\n                        const ctx = parentComp.getContext(true);\n                        dynamicPropObj = fn(ctx);\n                    }\n                    catch {\n                        dynamicPropObj = null;\n                    }\n                }\n                else {\n                    try {\n                        dynamicPropObj = new Function('return (' + propExpr + ')')();\n                    }\n                    catch {\n                        dynamicPropObj = null;\n                    }\n                }\n                if (dynamicPropObj && typeof dynamicPropObj === 'object')\n                    for (const k in dynamicPropObj)\n                        if (!(k in props))\n                            props[k] = String(dynamicPropObj[k]);\n                el.removeAttribute(attrName('prop'));\n            }\n            let baseData = {};\n            if (def.makeData) {\n                try {\n                    baseData = def.makeData(props) || {};\n                }\n                catch {\n                    baseData = {};\n                }\n            }\n            if (def.data) {\n                for (const k in def.data) {\n                    baseData[k] = def.data[k];\n                }\n            }\n            for (const k in props) {\n                if (!(k in baseData))\n                    baseData[k] = props[k];\n            }\n            baseData.$props = props;\n            let initDef;\n            if (typeof def.init === 'function') {\n                try {\n                    const maybe = def.init(props);\n                    initDef = (maybe && typeof maybe === 'object') ? maybe : undefined;\n                }\n                catch {\n                    initDef = undefined;\n                }\n            }\n            const compDef = {\n                data: baseData,\n                methods: { ...(def.methods || {}), ...(initDef?.methods || {}) },\n                computed: { ...(def.computed || {}), ...(initDef?.computed || {}) },\n                propEffects: { ...(def.propEffects || {}), ...(initDef?.propEffects || {}) },\n                mounted: initDef?.mounted || def.mounted,\n                unmounted: initDef?.unmounted || def.unmounted,\n                beforeMount: initDef?.beforeMount || def.beforeMount,\n                beforeUnmount: initDef?.beforeUnmount || def.beforeUnmount,\n                updated: initDef?.updated || def.updated,\n                destroyed: initDef?.destroyed || def.destroyed,\n                beforeDestroy: initDef?.beforeDestroy || def.beforeDestroy\n            };\n            const comp = this.createComponent(compDef);\n            comp.element = el;\n            const originalChildren = [];\n            while (el.firstChild) {\n                const n = el.firstChild;\n                originalChildren.push(n);\n                el.removeChild(n);\n            }\n            if (def.template) {\n                const applyTemplate = (tpl) => {\n                    el.innerHTML = tpl;\n                    const slots = el.querySelectorAll('slot');\n                    if (slots.length) {\n                        for (const slotEl of slots) {\n                            const name = slotEl.getAttribute('name');\n                            let matched = [];\n                            if (name) {\n                                matched = originalChildren.filter(n => n.nodeType === 1 && n.getAttribute('slot') === name);\n                            }\n                            else {\n                                matched = originalChildren.filter(n => n.nodeType !== 1 || !n.hasAttribute('slot'));\n                            }\n                            if (matched.length) {\n                                const frag = d.createDocumentFragment();\n                                for (const n of matched)\n                                    frag.appendChild(n);\n                                slotEl.parentNode?.replaceChild(frag, slotEl);\n                            }\n                        }\n                    }\n                };\n                const tplVal = def.template;\n                if (typeof tplVal === 'string') {\n                    applyTemplate(tplVal);\n                }\n                else if (typeof tplVal === 'function') {\n                    try {\n                        const res = tplVal();\n                        if (res && typeof res.then === 'function') {\n                            el.innerHTML = '';\n                            res.then(html => { applyTemplate(html || ''); try {\n                                comp._applyAsyncTemplateResolved();\n                            }\n                            catch { } });\n                        }\n                        else {\n                            applyTemplate(String(res || ''));\n                        }\n                    }\n                    catch {\n                        el.innerHTML = '';\n                    }\n                }\n                else if (tplVal && typeof tplVal.then === 'function') {\n                    el.innerHTML = '';\n                    tplVal.then(html => { applyTemplate(html || ''); try {\n                        comp._applyAsyncTemplateResolved();\n                    }\n                    catch { } });\n                }\n            }\n            else {\n                for (const n of originalChildren)\n                    el.appendChild(n);\n            }\n            this._registerElement(el, comp);\n            try {\n                const nested = el.querySelectorAll(`[${attrName('data')}]`);\n                for (const node of nested) {\n                    if (!this._getComponentByElement(node))\n                        this._bindElementAsComponent(node, comp);\n                }\n            }\n            catch { }\n            this._pending.push({ el, comp });\n            if (rawPropExpression && parentComp) {\n                try {\n                    comp._initReactiveProps(rawPropExpression, parentComp);\n                }\n                catch { }\n            }\n            this._processPending();\n        }\n        _getComponentByElement(element) { return this._byEl.get(element); }\n        observe(_element) { }\n        _ensureDelegation(container) {\n            if (this._delegatedRootBound)\n                return;\n            const root = container;\n            const handler = (e) => {\n                let cur = e.target;\n                while (cur && cur !== root.parentElement) {\n                    if (e.cancelBubble)\n                        break;\n                    const map = this._delegated.get(cur);\n                    if (map) {\n                        const list = map.get(e.type);\n                        if (list && list.length) {\n                            for (const h of [...list]) {\n                                try {\n                                    if (h.comp && h.comp.isDestroyed) {\n                                        const i = list.indexOf(h);\n                                        if (i > -1)\n                                            list.splice(i, 1);\n                                        continue;\n                                    }\n                                    if (!h.filter || h.filter(e)) {\n                                        h.run(e);\n                                        if (h.once) {\n                                            const idx = list.indexOf(h);\n                                            if (idx > -1)\n                                                list.splice(idx, 1);\n                                        }\n                                    }\n                                }\n                                catch { }\n                            }\n                        }\n                    }\n                    cur = cur.parentElement;\n                }\n            };\n            const captureEvents = ['keydown', 'keyup'];\n            const bubbleEvents = ['click', 'input', 'change'];\n            for (const ev of captureEvents)\n                root.addEventListener(ev, handler, true);\n            for (const ev of bubbleEvents)\n                root.addEventListener(ev, handler, false);\n            this._delegatedRootBound = true;\n        }\n        _registerDelegated(element, event, entry) {\n            let map = this._delegated.get(element);\n            if (!map) {\n                map = new Map();\n                this._delegated.set(element, map);\n            }\n            let list = map.get(event);\n            if (!list) {\n                list = [];\n                map.set(event, list);\n            }\n            list.push(entry);\n            return () => {\n                try {\n                    const m = this._delegated.get(element);\n                    const l = m?.get(event);\n                    if (!l)\n                        return;\n                    const idx = l.indexOf(entry);\n                    if (idx > -1)\n                        l.splice(idx, 1);\n                }\n                catch { }\n            };\n        }\n    }\n    class ReactiveComponent {\n        attachToParent(parent) {\n            this._parent = parent;\n            parent._addChild(this);\n        }\n        get id() { return this._id; }\n        get framework() { return this._framework; }\n        get element() { return this._element; }\n        set element(el) { this._element = el; }\n        get isBound() { return this._isBound; }\n        set isBound(v) { this._isBound = v; }\n        get isMounted() { return this._isMounted; }\n        set isMounted(v) { this._isMounted = v; }\n        get isDestroyed() { return this._isDestroyed; }\n        set isDestroyed(v) { this._isDestroyed = v; }\n        _addDirective(element, directive) {\n            const existing = this._directives.get(element) || [];\n            existing.push(directive);\n            this._directives.set(element, existing);\n        }\n        constructor(id, def, framework) {\n            this._propUpdateActive = false;\n            this._runningPropEffect = false;\n            this._element = null;\n            this._isBound = false;\n            this._isMounted = false;\n            this._isDestroyed = false;\n            this._beforeMountCalled = false;\n            this._children = [];\n            this._parent = null;\n            this._computed = {};\n            this._propEffects = {};\n            this._computedCache = new Map();\n            this._computedDeps = new Map();\n            this._inverseComputedDeps = new Map();\n            this._collectingComputedKey = null;\n            this._isInComputedEvaluation = false;\n            this._isInMethodExecution = false;\n            this._hasComputed = false;\n            this._directives = new Map();\n            this._cleanupFunctions = new Set();\n            this._eventListeners = [];\n            this._loopScopes = new WeakMap();\n            this._expressionCache = new Map();\n            this._propertyDependencies = new Map();\n            this._activeEffect = null;\n            this._renderScheduled = false;\n            this._nextTickQueue = [];\n            this._transitionConfigs = new WeakMap();\n            this._initialClassSets = new WeakMap();\n            this._propParent = null;\n            this._invalidateComputedCache = (_prop) => {\n                if (!FT_C)\n                    return;\n                if (!_prop) {\n                    this._computedCache.clear();\n                    return;\n                }\n                const affected = this._inverseComputedDeps.get(_prop);\n                if (affected) {\n                    for (const c of affected)\n                        this._computedCache.delete(c);\n                }\n            };\n            this._callLifecycleHook = (hookName) => {\n                const hook = this._lifecycle[hookName];\n                if (typeof hook === 'function') {\n                    this._safeExecute(() => hook.call(this._createMethodContext()), `Error in '${String(hookName)}'`);\n                }\n            };\n            this._addCleanupFunction = (fn) => {\n                if (typeof fn !== 'function')\n                    return undefined;\n                const wrapper = () => {\n                    try {\n                        fn();\n                    }\n                    catch {\n                        _logErr();\n                    }\n                    try {\n                        this._cleanupFunctions.delete(wrapper);\n                    }\n                    catch { }\n                };\n                this._cleanupFunctions.add(wrapper);\n                return () => { try {\n                    this._cleanupFunctions.delete(wrapper);\n                }\n                catch { } };\n            };\n            this._addEventListenerWithCleanup = (element, event, handler, options) => {\n                element.addEventListener(event, handler, options);\n                this._eventListeners.push({ element, event, handler, options });\n            };\n            this._id = id;\n            this._framework = framework;\n            this._originalMethods = def.methods || {};\n            this._computed = def.computed || {};\n            this._propEffects = def.propEffects || {};\n            this._hasComputed = !!(def.computed && Object.keys(def.computed).length);\n            this._lifecycle = {\n                mounted: def.mounted,\n                unmounted: def.unmounted || def.destroyed,\n                updated: def.updated,\n                beforeMount: def.beforeMount,\n                beforeUnmount: def.beforeUnmount || def.beforeDestroy\n            };\n            this._data = this._createReactiveData(def.data || {});\n            this._methods = this._bindMethods();\n        }\n        callBeforeMount() {\n            if (!this._beforeMountCalled) {\n                this._callLifecycleHook('beforeMount');\n                this._beforeMountCalled = true;\n            }\n        }\n        _onDataChange(property) {\n            if (this.isBound) {\n                if (FT_C)\n                    this._invalidateComputedCache(property);\n                const effectsToRun = new Set();\n                const directDeps = this._propertyDependencies.get(property);\n                if (directDeps)\n                    for (let i = 0; i < directDeps.length; i++)\n                        effectsToRun.add(directDeps[i]);\n                for (const effect of effectsToRun)\n                    this._safeExecute(effect, 'Error in reactive effect');\n                if (this._hasComputed || !XTOOL_ENABLE_STATIC_DIRECTIVES) {\n                    this._scheduleRender();\n                }\n                this._callLifecycleHook('updated');\n            }\n        }\n        _bindMethods() {\n            const boundMethods = {};\n            for (const methodName in this._originalMethods) {\n                const originalMethod = this._originalMethods[methodName];\n                let compiledWrapper = null;\n                try {\n                    const src = String(originalMethod);\n                    if (!/\\[native code\\]/.test(src)) {\n                        let src = String(originalMethod).trim();\n                        if (!/^function[\\s\\(]/.test(src) && !/^[\\w\\$_][\\w\\d\\$_]*\\s*=>/.test(src) && !/^\\(.*?\\)\\s*=>/.test(src)) {\n                            src = 'function ' + src;\n                        }\n                        const trySrc = 'with(ctx){ const fn = (' + src + '); return fn.apply(thisArg, argsArray); }';\n                        try {\n                            compiledWrapper = new Function('thisArg', 'argsArray', 'ctx', trySrc);\n                        }\n                        catch (e) {\n                            compiledWrapper = null;\n                        }\n                    }\n                }\n                catch {\n                    compiledWrapper = null;\n                }\n                boundMethods[methodName] = (...args) => {\n                    const currentContext = this._createMethodContext();\n                    const prev = this._isInMethodExecution;\n                    this._isInMethodExecution = true;\n                    try {\n                        const ctx = this._createContextProxy(undefined, undefined);\n                        if (compiledWrapper) {\n                            try {\n                                return this._safeExecute(() => compiledWrapper.call(undefined, currentContext, args, ctx), `Error in method '${methodName}'`);\n                            }\n                            catch (err) {\n                                throw err;\n                            }\n                        }\n                        return this._safeExecute(() => originalMethod.call(currentContext, ...args), `Error in method '${methodName}'`);\n                    }\n                    finally {\n                        this._isInMethodExecution = prev;\n                    }\n                };\n            }\n            return boundMethods;\n        }\n        _getComputedValue(key) {\n            if (!FT_C)\n                return undefined;\n            this._trackDependency(key);\n            if (this._computedCache.has(key))\n                return this._computedCache.get(key);\n            try {\n                const computeFn = this._computed[key];\n                this._isInComputedEvaluation = true;\n                this._collectingComputedKey = key;\n                const prev = this._computedDeps.get(key);\n                if (prev) {\n                    for (const dep of prev) {\n                        const set = this._inverseComputedDeps.get(dep);\n                        if (set)\n                            set.delete(key);\n                    }\n                }\n                this._computedDeps.set(key, new Set());\n                const value = computeFn.call(this._createMethodContext());\n                this._isInComputedEvaluation = false;\n                this._collectingComputedKey = null;\n                this._computedCache.set(key, value);\n                return value;\n            }\n            catch {\n                this._isInComputedEvaluation = false;\n                this._collectingComputedKey = null;\n                return undefined;\n            }\n        }\n        _trackDependency(propKey) {\n            if (!this._activeEffect)\n                return;\n            let deps = this._propertyDependencies.get(propKey);\n            if (!deps) {\n                deps = [];\n                this._propertyDependencies.set(propKey, deps);\n            }\n            if (!deps.includes(this._activeEffect))\n                deps.push(this._activeEffect);\n        }\n        _scheduleRender() {\n            if (this._renderScheduled)\n                return;\n            this._renderScheduled = true;\n            requestAnimationFrame(() => {\n                this._renderScheduled = false;\n                this._render();\n                if (this._nextTickQueue && this._nextTickQueue.length) {\n                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                    for (const fn of q) {\n                        try {\n                            fn();\n                        }\n                        catch { }\n                    }\n                }\n            });\n        }\n        _safeExecute(fn, _errorMsg, fallback) {\n            try {\n                return fn();\n            }\n            catch (e) {\n                console.error(e);\n                return fallback;\n            }\n        }\n        bindToElement(element) {\n            if (this._isBound)\n                return;\n            this._element = element;\n            if (!this._beforeMountCalled) {\n                this.callBeforeMount();\n            }\n            this.completeBinding();\n        }\n        getContext(includeComputed = true) {\n            return this._createMethodContext(includeComputed);\n        }\n        _applyAsyncTemplateResolved() {\n            if (!this._element)\n                return;\n            try {\n                this._parseDirectives(this._element);\n            }\n            catch { }\n            this._scheduleRender();\n        }\n        completeBinding() {\n            if (this._isBound || !this._element)\n                return;\n            if (!this._framework._getComponentByElement(this._element))\n                this._framework._registerElement(this._element, this);\n            this._isBound = true;\n            this._isMounted = true;\n            this._parseDirectives(this._element);\n            this._setupDOMRemovalDetection();\n            this._render();\n            this._callLifecycleHook('mounted');\n        }\n        _addChild(child) {\n            if (!this._children.includes(child)) {\n                this._children.push(child);\n            }\n        }\n        _removeChild(child) {\n            const index = this._children.indexOf(child);\n            if (index > -1) {\n                this._children.splice(index, 1);\n            }\n        }\n        _setupDOMRemovalDetection() { }\n        destroy() {\n            const self = this;\n            if (self._isDestroyed)\n                return;\n            self._callLifecycleHook('beforeUnmount');\n            for (const child of self._children) {\n                if (!child.isDestroyed)\n                    child.destroy();\n            }\n            if (self._parent) {\n                self._parent._removeChild(self);\n            }\n            for (const [element, directives] of self._directives) {\n                for (const directive of directives) {\n                    if (directive.type === 'custom' && directive.customDirective?.unbind) {\n                        try {\n                            directive.customDirective.unbind(element, self);\n                        }\n                        catch {\n                            _logErr();\n                        }\n                    }\n                }\n            }\n            self._directives.clear();\n            for (const { element, event, handler, options } of self._eventListeners) {\n                element.removeEventListener(event, handler, options);\n            }\n            self._eventListeners = [];\n            for (const cleanup of Array.from(self._cleanupFunctions)) {\n                try {\n                    cleanup();\n                }\n                catch {\n                    _logErr();\n                }\n            }\n            self._cleanupFunctions.clear();\n            self._computedCache.clear();\n            self._expressionCache.clear();\n            self._propertyDependencies.clear();\n            if (self._propParent && self._propEffect) {\n                for (const deps of self._propParent._propertyDependencies.values()) {\n                    const idx = deps.indexOf(self._propEffect);\n                    if (idx > -1)\n                        deps.splice(idx, 1);\n                }\n            }\n            if (self._element)\n                self._framework._unregisterElement(self._element);\n            self._callLifecycleHook('unmounted');\n            self._isDestroyed = true;\n            self._isMounted = false;\n            self._isBound = false;\n            self._children = [];\n            self._parent = null;\n            this._deepReactiveCache = new WeakMap;\n            self._element = null;\n            queueMicrotask(() => self._framework._unregisterComponent(self._id));\n        }\n        _initReactiveProps(expr, parent) {\n            if (!expr || !parent)\n                return;\n            this._propParent = parent;\n            let evalFn;\n            try {\n                evalFn = new Function('ctx', 'with(ctx){return (' + expr + ')}');\n            }\n            catch {\n                return;\n            }\n            const update = () => {\n                parent._activeEffect = update;\n                let obj;\n                try {\n                    const ctx = parent.getContext(true);\n                    obj = evalFn(ctx);\n                }\n                catch {\n                    obj = null;\n                }\n                parent._activeEffect = null;\n                if (obj && typeof obj === 'object') {\n                    this._data.$props = this._data.$props || {};\n                    this._propUpdateActive = true;\n                    for (const k in obj) {\n                        const v = obj[k];\n                        if (this._data[k] !== v)\n                            this._data[k] = v;\n                    }\n                    this._propUpdateActive = false;\n                }\n            };\n            this._propEffect = update;\n            update();\n        }\n        _parseDirectives(element) {\n            const self = this;\n            let processedElements = 0;\n            const processElement = (el, isRoot = false) => {\n                if (!isRoot && (el.hasAttribute(attrName('data')) || this._framework._getComponentByElement(el))) {\n                    return false;\n                }\n                const isComponentTag = el[STR_TAGNAME] === 'COMPONENT';\n                const directives = [];\n                let hasTextOrHtml = false;\n                let forAttr = null;\n                for (const a of el.attributes) {\n                    const n = a.name;\n                    if (n.startsWith(PFX + '-') || n.startsWith(PFX + ':')) {\n                        directives.push(a);\n                        if (!hasTextOrHtml && (n === attrName('text') || n === attrName('html')))\n                            hasTextOrHtml = true;\n                        if (!forAttr && n === attrName('for'))\n                            forAttr = a;\n                    }\n                }\n                if (directives.length > 0) {\n                    processedElements++;\n                    if (forAttr) {\n                        self._bindDirective(el, forAttr.name, forAttr.value);\n                        return false;\n                    }\n                    for (const attr of directives)\n                        self._bindDirective(el, attr.name, attr.value);\n                }\n                if (FT_TI && !hasTextOrHtml)\n                    self._bindTextInterpolationsIn(el);\n                return isRoot || !isComponentTag;\n            };\n            processElement(element, true);\n            self._walkElements(element, processElement);\n        }\n        _bindTextInterpolationsIn(el) {\n            const nodes = Array.from(el.childNodes);\n            for (const node of nodes) {\n                if (node.nodeType !== Node.TEXT_NODE)\n                    continue;\n                const textNode = node;\n                const raw = textNode.nodeValue || '';\n                if (textNode.__x_tool_ti || raw.indexOf('{{') === -1)\n                    continue;\n                const parentTag = (textNode.parentElement?.tagName || '').toLowerCase();\n                const inCode = parentTag === 'code' || parentTag === 'pre';\n                const segs = [];\n                let i = 0;\n                while (i < raw.length) {\n                    const open = raw.indexOf('{{', i);\n                    if (open === -1) {\n                        segs.push({ literal: raw.slice(i) });\n                        break;\n                    }\n                    let bs = 0;\n                    for (let p = open - 1; p >= 0 && raw.charCodeAt(p) === 92; p--)\n                        bs++;\n                    if (bs > 0) {\n                        const prefixStart = i;\n                        const prefixEnd = open - bs;\n                        if (prefixEnd > prefixStart)\n                            segs.push({ literal: raw.slice(prefixStart, prefixEnd) });\n                        if (bs > 1)\n                            segs.push({ literal: '\\\\'.repeat(bs - 1) });\n                        const close = raw.indexOf('}}', open + 2);\n                        if (close === -1) {\n                            segs.push({ literal: raw.slice(open, raw.length) });\n                            i = raw.length;\n                            break;\n                        }\n                        segs.push({ literal: raw.slice(open, close + 2) });\n                        i = close + 2;\n                        continue;\n                    }\n                    else {\n                        if (open > i)\n                            segs.push({ literal: raw.slice(i, open) });\n                        const close = raw.indexOf('}}', open + 2);\n                        if (close === -1) {\n                            segs.push({ literal: raw.slice(open) });\n                            i = raw.length;\n                            break;\n                        }\n                        const expr = raw.slice(open + 2, close).trim();\n                        if (expr)\n                            segs.push({ expr });\n                        else\n                            segs.push({ literal: '' });\n                        i = close + 2;\n                        continue;\n                    }\n                }\n                const hasExpr = segs.some(s => s.expr);\n                const hasEscaped = segs.some(s => s.literal && s.literal.includes('{{'));\n                if (!hasExpr && !hasEscaped)\n                    continue;\n                textNode.__x_tool_ti = true;\n                const evaluators = hasExpr && !inCode ? segs.filter(s => s.expr).map(s => this._createElementEvaluator(s.expr, el)) : [];\n                let exprIndex = 0;\n                const update = () => {\n                    exprIndex = 0;\n                    let out = '';\n                    for (const s of segs) {\n                        if (s.literal != null) {\n                            out += s.literal;\n                        }\n                        else if (s.expr) {\n                            if (inCode) {\n                                out += '{{ ' + s.expr + ' }}';\n                            }\n                            else {\n                                const val = evaluators[exprIndex++]();\n                                out += (val == null ? '' : String(val));\n                            }\n                        }\n                    }\n                    if (textNode.textContent !== out)\n                        textNode.textContent = out;\n                };\n                const dirInfo = { type: 'text-interpolation', expression: raw, update: undefined };\n                this._addDirective(el, dirInfo);\n                const effect = this._createEffect(update, dirInfo);\n                dirInfo.update = effect;\n            }\n        }\n        _walkElements(parent, processor) {\n            let child = parent.firstElementChild;\n            while (child) {\n                const next = child.nextElementSibling;\n                if (processor(child))\n                    this._walkElements(child, processor);\n                child = next;\n            }\n        }\n        _bindDirective(element, directiveName, expression) {\n            const self = this;\n            const isShortBind = directiveName.startsWith(PFX + ':');\n            const type = directiveName.slice(PFX.length + 1);\n            if (isShortBind || type === 'class' || type === STR_STYLE) {\n                element.removeAttribute(directiveName);\n                return self._bindAttributeDirective(element, type, expression);\n            }\n            if (type === 'transition') {\n                element.removeAttribute(directiveName);\n                return self._bindTransitionDirective(element, expression);\n            }\n            if (type === 'text' || type === 'html' || type === 'show') {\n                element.removeAttribute(directiveName);\n                return self._bindSimpleDirective(element, expression, type);\n            }\n            const handled = type === 'model' ? (element.removeAttribute(directiveName), self._bindModelDirective(element, expression), true)\n                : type === 'if' ? (element.removeAttribute(directiveName), self._bindIfDirective(element, expression), true)\n                    : type === 'for' ? (element.removeAttribute(directiveName), self._bindForDirective(element, expression), true)\n                        : false;\n            if (handled)\n                return;\n            if (type.indexOf(':') > -1) {\n                const [prefix, rest] = type.split(':', 2);\n                const [suffix, ...mods] = rest.split('.');\n                const modifiers = mods.reduce((acc, m) => { if (m)\n                    acc[m] = true; return acc; }, {});\n                if (prefix === 'on') {\n                    element.removeAttribute(directiveName);\n                    const customDirective = self.framework._getCustomDirective(suffix);\n                    return customDirective\n                        ? self._bindCustomDirective(element, suffix, expression, customDirective, modifiers)\n                        : self._bindEventDirective(element, suffix, expression, modifiers);\n                }\n                element.removeAttribute(directiveName);\n                return self._bindAttributeDirective(element, suffix, expression);\n            }\n        }\n        _bindTransitionDirective(element, expression) {\n            if (!FT_TR)\n                return;\n            let conf = null;\n            if (expression && expression.trim()) {\n                try {\n                    conf = this._createElementEvaluator(expression, element)();\n                }\n                catch {\n                    conf = null;\n                }\n            }\n            const defaults = { enter: 'xt-enter', enterFrom: 'xt-enter-from', enterTo: 'xt-enter-to', leave: 'xt-leave', leaveFrom: 'xt-leave-from', leaveTo: 'xt-leave-to' };\n            const final = Object.assign({}, defaults, (conf && typeof conf === 'object') ? conf : {});\n            this._transitionConfigs.set(element, final);\n            this._addDirective(element, { type: 'transition', expression });\n        }\n        _transitionIn(el, done) {\n            if (!FT_TR) {\n                if (done)\n                    done();\n                return;\n            }\n            const conf = this._transitionConfigs.get(el) || {};\n            const { enter, enterFrom, enterTo } = conf;\n            const end = () => { try {\n                if (enter)\n                    el.classList.remove(enter);\n                if (enterTo)\n                    el.classList.remove(enterTo);\n            }\n            catch { } ; if (done)\n                done(); };\n            if (enter || enterFrom || enterTo) {\n                if (enter)\n                    el.classList.add(enter);\n                if (enterFrom)\n                    el.classList.add(enterFrom);\n                void el.offsetWidth;\n                if (enterFrom)\n                    el.classList.remove(enterFrom);\n                if (enterTo)\n                    el.classList.add(enterTo);\n                this._onTransitionEnd(el, end);\n            }\n            else {\n                end();\n            }\n        }\n        _transitionOut(el, done) {\n            if (!FT_TR) {\n                if (done)\n                    done();\n                return;\n            }\n            const conf = this._transitionConfigs.get(el) || {};\n            const { leave, leaveFrom, leaveTo } = conf;\n            const end = () => { try {\n                if (leave)\n                    el.classList.remove(leave);\n                if (leaveTo)\n                    el.classList.remove(leaveTo);\n            }\n            catch { } ; if (done)\n                done(); };\n            if (leave || leaveFrom || leaveTo) {\n                if (leave)\n                    el.classList.add(leave);\n                if (leaveFrom)\n                    el.classList.add(leaveFrom);\n                void el.offsetWidth;\n                if (leaveFrom)\n                    el.classList.remove(leaveFrom);\n                if (leaveTo)\n                    el.classList.add(leaveTo);\n                this._onTransitionEnd(el, end);\n            }\n            else {\n                end();\n            }\n        }\n        _onTransitionEnd(el, cb) {\n            let called = false;\n            const done = () => { if (called)\n                return; called = true; try {\n                el.removeEventListener('transitionend', done);\n                el.removeEventListener('animationend', done);\n            }\n            catch { } ; cb(); };\n            try {\n                el.addEventListener('transitionend', done);\n                el.addEventListener('animationend', done);\n                setTimeout(done, 500);\n            }\n            catch {\n                cb();\n            }\n        }\n        _createEffect(updateFn, directiveRef) {\n            const effect = () => {\n                this._activeEffect = effect;\n                try {\n                    updateFn();\n                }\n                finally {\n                    this._activeEffect = null;\n                }\n            };\n            effect();\n            if (XTOOL_ENABLE_STATIC_DIRECTIVES && directiveRef && directiveRef._static === undefined) {\n                let found = false;\n                for (const deps of this._propertyDependencies.values()) {\n                    if (deps.includes(effect)) {\n                        found = true;\n                        break;\n                    }\n                }\n                directiveRef._static = !found;\n            }\n            return effect;\n        }\n        _bindSimpleDirective(element, expression, type) {\n            if (type === 'class' || type === STR_STYLE) {\n                return this._bindAttributeDirective(element, type, expression);\n            }\n            const evaluator = this._createElementEvaluator(expression, element);\n            let originalDisplay;\n            if (type === 'show') {\n                const el = element;\n                originalDisplay = el.style[STR_DISPLAY] !== STR_NONE ? el.style[STR_DISPLAY] : undefined;\n            }\n            let _prevShown = undefined;\n            const update = () => {\n                const value = evaluator();\n                const el = element;\n                switch (type) {\n                    case 'text':\n                        el.textContent = String(value);\n                        break;\n                    case 'html':\n                        el.innerHTML = String(value || '');\n                        break;\n                    case 'show':\n                        const next = !!value;\n                        if (_prevShown === next)\n                            return;\n                        _prevShown = next;\n                        if (next) {\n                            el.style[STR_DISPLAY] = originalDisplay || '';\n                            this._transitionIn(el);\n                        }\n                        else {\n                            this._transitionOut(el, () => { el.style[STR_DISPLAY] = STR_NONE; });\n                        }\n                        break;\n                }\n            };\n            const dirInfo = { type, expression, update: undefined, originalDisplay };\n            this._addDirective(element, dirInfo);\n            const effect = this._createEffect(update, dirInfo);\n            dirInfo.update = effect;\n        }\n        _bindModelDirective(element, property) {\n            const isCheckbox = element.type === 'checkbox';\n            const isNumeric = element.type === 'number' || element.type === 'range';\n            const isMultiSelect = element.tagName === 'SELECT' && element.multiple === true;\n            if (!Reflect.has(this._data, property)) {\n                Reflect.defineProperty(this._data, property, {\n                    'configurable': true,\n                    'enumerable': true,\n                    'writable': true\n                });\n            }\n            const getValueEvaluator = this._createElementEvaluator(property, element);\n            const setValueEvaluator = this._createEvaluator(`${property} = $value`, true);\n            const inferCheckboxValue = () => {\n                if (element.hasAttribute('value'))\n                    return element.value;\n                const loopScope = this._collectLoopScope(element);\n                if (loopScope) {\n                    const keys = Object.keys(loopScope);\n                    if (keys.length === 1)\n                        return loopScope[keys[0]];\n                }\n                return element.value;\n            };\n            const checkboxValue = isCheckbox ? inferCheckboxValue() : undefined;\n            const getInputValue = () => {\n                if (isCheckbox) {\n                    if (Array.isArray(getValueEvaluator()) && checkboxValue !== undefined) {\n                        return element.checked ? checkboxValue : undefined;\n                    }\n                    if (element.hasAttribute('value'))\n                        return element.checked ? element.value : undefined;\n                    return element.checked;\n                }\n                if (isMultiSelect) {\n                    const sel = element;\n                    const values = [];\n                    for (let i = 0; i < sel.options.length; i++) {\n                        const opt = sel.options[i];\n                        if (opt.selected)\n                            values.push(opt.value);\n                    }\n                    return values;\n                }\n                return isNumeric ? parseFloat(element.value) || 0 : element.value;\n            };\n            const setInputValue = (value) => {\n                if (isCheckbox) {\n                    if (Array.isArray(value)) {\n                        const member = element.hasAttribute('value') ? element.value : checkboxValue;\n                        element.checked = member != null ? value.includes(member) : false;\n                    }\n                    else {\n                        element.checked = !!value;\n                    }\n                    return;\n                }\n                if (isMultiSelect) {\n                    const sel = element;\n                    const arr = Array.isArray(value) ? value : [];\n                    for (let i = 0; i < sel.options.length; i++) {\n                        const opt = sel.options[i];\n                        opt.selected = arr.includes(opt.value);\n                    }\n                    return;\n                }\n                element.value = String(value ?? (isNumeric ? 0 : ''));\n            };\n            this._createEffect(() => setInputValue(getValueEvaluator()));\n            const ctx = this._createContextProxy(undefined, element);\n            const updateData = () => {\n                const raw = getInputValue();\n                const currentVal = this._safeExecute(() => getValueEvaluator(), 'model read', undefined);\n                if (isCheckbox && Array.isArray(currentVal)) {\n                    const arr = currentVal;\n                    const member = element.hasAttribute('value') ? element.value : checkboxValue;\n                    if (member !== undefined) {\n                        const idx = arr.indexOf(member);\n                        if (element.checked) {\n                            if (idx === -1)\n                                arr.push(member);\n                        }\n                        else if (idx > -1) {\n                            arr.splice(idx, 1);\n                        }\n                    }\n                }\n                else if (isMultiSelect && Array.isArray(currentVal)) {\n                    const arr = currentVal;\n                    arr.splice(0, arr.length);\n                    raw.forEach(v => arr.push(v));\n                }\n                else {\n                    ctx.$value = raw;\n                    this._safeExecute(() => { setValueEvaluator.call(this._createMethodContext(), ctx); });\n                }\n            };\n            const t = element.type;\n            const eventType = (element[STR_TAGNAME] === 'SELECT' || t === 'checkbox' || t === 'radio' || t === 'file') ? 'change' : 'input';\n            this._addEventListenerWithCleanup(element, eventType, updateData);\n            this._addDirective(element, { type: 'model', property });\n        }\n        _bindIfDirective(element, expression) {\n            const self = this;\n            const placeholder = d.createComment('x-if');\n            element.parentNode?.insertBefore(placeholder, element);\n            element.__x_if_anchorParent = placeholder.parentElement || null;\n            const branches = [];\n            const makeActualElement = (el) => {\n                if (el[STR_TAGNAME] === STR_TEMPLATE) {\n                    const wrapper = d.createElement('div');\n                    wrapper.style[STR_DISPLAY] = 'contents';\n                    wrapper.appendChild(el.content.cloneNode(true));\n                    return { el: wrapper, isTemplate: true };\n                }\n                return { el: el, isTemplate: false };\n            };\n            const first = makeActualElement(element);\n            const firstEval = self._createElementEvaluator(expression, element);\n            branches.push({ el: first.el, test: firstEval, isTemplate: first.isTemplate });\n            if (!first.isTemplate)\n                first.el.__x_tool_bound = true;\n            const originalNodes = [element];\n            if (FT_IFB) {\n                if (FT_IFB) {\n                    let sib = element.nextElementSibling;\n                    while (sib) {\n                        const isElse = sib.hasAttribute('x-else');\n                        const isElseIf = sib.hasAttribute('x-else-if');\n                        if (!isElse && !isElseIf)\n                            break;\n                        if (sib.hasAttribute('x-else-if')) {\n                            const attr = sib.getAttribute('x-else-if') || '';\n                            const branch = makeActualElement(sib);\n                            const evalFn = self._createElementEvaluator((attr || '').trim(), sib);\n                            branches.push({ el: branch.el, test: evalFn, isTemplate: branch.isTemplate });\n                            if (!branch.isTemplate)\n                                branch.el.__x_tool_bound = true;\n                        }\n                        else {\n                            const branch = makeActualElement(sib);\n                            branches.push({ el: branch.el, test: null, isTemplate: branch.isTemplate });\n                            if (!branch.isTemplate)\n                                branch.el.__x_tool_bound = true;\n                        }\n                        sib.removeAttribute('x-else');\n                        sib.removeAttribute('x-else-if');\n                        originalNodes.push(sib);\n                        sib = sib.nextElementSibling;\n                    }\n                }\n            }\n            let active = -1;\n            for (const orig of originalNodes) {\n                if (orig.parentNode)\n                    orig.parentNode.removeChild(orig);\n            }\n            const mountBranch = (idx) => {\n                if (idx < 0)\n                    return;\n                const b = branches[idx];\n                if (!b.el.__x_tool_bound) {\n                    self._parseDirectives(b.el);\n                    b.el.__x_tool_bound = true;\n                }\n                element.__x_if_current?.parentNode?.removeChild(element.__x_if_current);\n                if (!b.el.parentNode) {\n                    placeholder.parentNode?.insertBefore(b.el, placeholder.nextSibling);\n                    this._transitionIn(b.el);\n                }\n                element.__x_if_current = b.el;\n                active = idx;\n            };\n            const unmountBranch = (idx, cb) => {\n                if (idx < 0) {\n                    if (cb)\n                        cb();\n                    return;\n                }\n                const b = branches[idx];\n                if (b.el.parentNode) {\n                    this._transitionOut(b.el, () => { if (b.el.parentNode)\n                        b.el.parentNode.removeChild(b.el); if (cb)\n                        cb(); });\n                }\n                else if (cb)\n                    cb();\n                active = -1;\n            };\n            const update = () => {\n                let next = -1;\n                for (let i = 0; i < branches[STR_LENGTH]; i++) {\n                    const b = branches[i];\n                    const pass = b.test ? !!b.test() : true;\n                    if (pass) {\n                        next = i;\n                        break;\n                    }\n                }\n                if (next === active)\n                    return;\n                if (active !== -1) {\n                    unmountBranch(active, () => mountBranch(next));\n                }\n                else {\n                    mountBranch(next);\n                }\n            };\n            const effect = self._createEffect(update);\n            self._addDirective(element, { type: 'if', expression, update: effect });\n        }\n        _bindEventDirective(element, eventName, expression, modifiers) {\n            const self = this;\n            const trimmed = (expression || '').trim();\n            const arrow = self._extractArrowFunction(trimmed);\n            const opts = modifiers ? {\n                once: !!modifiers.once,\n                passive: !!modifiers.passive,\n                capture: !!modifiers.capture,\n            } : undefined;\n            const onlySelf = !!modifiers?.self;\n            const shouldPrevent = !!modifiers?.prevent;\n            const shouldStop = !!modifiers?.stop;\n            const keyAliasMap = {\n                enter: ['enter'],\n                esc: ['escape', 'esc'],\n                escape: ['escape', 'esc'],\n                space: [' ', 'space', 'spacebar'],\n                tab: ['tab'],\n                backspace: ['backspace'],\n                delete: ['delete', 'del'],\n                del: ['delete', 'del'],\n                arrowup: ['arrowup', 'up'],\n                arrowdown: ['arrowdown', 'down'],\n                arrowleft: ['arrowleft', 'left'],\n                arrowright: ['arrowright', 'right'],\n                home: ['home'],\n                end: ['end'],\n                pageup: ['pageup'],\n                pagedown: ['pagedown']\n            };\n            const comboRequirements = {\n                ctrl: !!modifiers?.ctrl,\n                alt: !!modifiers?.alt,\n                shift: !!modifiers?.shift,\n                meta: !!modifiers?.meta,\n            };\n            const buttonMap = { left: 0, middle: 1, right: 2 };\n            const touchSingle = !!modifiers?.single;\n            const touchMulti = !!modifiers?.multi;\n            const modifierKeys = modifiers ? _Okeys(modifiers) : [];\n            const allowedKeys = [];\n            for (const m of modifierKeys) {\n                const aliases = keyAliasMap[m.toLowerCase()];\n                if (aliases)\n                    allowedKeys.push(...aliases);\n            }\n            const allowedButtons = [];\n            for (const m of modifierKeys) {\n                const btn = buttonMap[m.toLowerCase()];\n                if (btn !== undefined)\n                    allowedButtons.push(btn);\n            }\n            const needKeyCheck = allowedKeys.length > 0 || comboRequirements.ctrl || comboRequirements.alt || comboRequirements.shift || comboRequirements.meta;\n            const needButtonCheck = allowedButtons.length > 0;\n            const needTouchCheck = touchSingle || touchMulti;\n            const passesFilters = (event) => {\n                if (onlySelf && event.target !== element)\n                    return false;\n                if (needTouchCheck) {\n                    if (event instanceof TouchEvent) {\n                        const tCount = event.touches.length;\n                        if (touchSingle && tCount !== 1)\n                            return false;\n                        if (touchMulti && tCount < 2)\n                            return false;\n                    }\n                    else\n                        return false;\n                }\n                if (needButtonCheck) {\n                    if (event instanceof MouseEvent) {\n                        if (!allowedButtons.includes(event.button))\n                            return false;\n                    }\n                    else\n                        return false;\n                }\n                if (needKeyCheck) {\n                    if (!(event instanceof KeyboardEvent))\n                        return false;\n                    const k = (event.key || '').toLowerCase();\n                    if (allowedKeys.length > 0 && !allowedKeys.includes(k))\n                        return false;\n                    if (comboRequirements.ctrl && !event.ctrlKey)\n                        return false;\n                    if (comboRequirements.alt && !event.altKey)\n                        return false;\n                    if (comboRequirements.shift && !event.shiftKey)\n                        return false;\n                    if (comboRequirements.meta && !event.metaKey)\n                        return false;\n                }\n                return true;\n            };\n            const hasExpr = !!trimmed;\n            let runExpr = null;\n            const thisCtx = self._createMethodContext();\n            if (arrow) {\n                const compiledArrow = self._compileArrowForEvent(arrow.paramsList, arrow.body, arrow.isBlock);\n                const mapArgs = arrow.paramsList.length\n                    ? (event) => arrow.paramsList.map((_, idx) => (idx === 0 ? event : idx === 1 ? element : undefined))\n                    : () => [];\n                runExpr = (event) => {\n                    const ctx = self._createContextProxy(event, element);\n                    compiledArrow.call(thisCtx, ctx, ...mapArgs(event));\n                };\n            }\n            else if (hasExpr) {\n                const isStatement = trimmed.includes(';');\n                const executor = self._createEvaluator(trimmed, isStatement);\n                runExpr = (event) => {\n                    const ctx = self._createContextProxy(event, element);\n                    const result = executor.call(thisCtx, ctx);\n                    if (typeof result === 'function')\n                        result.call(thisCtx, event);\n                };\n            }\n            const createEventHandler = (event) => {\n                self._safeExecute(() => {\n                    if (!passesFilters(event))\n                        return;\n                    if (shouldPrevent && typeof event.preventDefault === 'function')\n                        event.preventDefault();\n                    if (shouldStop && typeof event.stopPropagation === 'function')\n                        event.stopPropagation();\n                    if (!runExpr)\n                        return;\n                    runExpr(event);\n                });\n            };\n            const cfg = this.framework._getConfig();\n            const canDelegate = !!cfg.delegate && ['click', 'input', 'change', 'keydown', 'keyup'].includes(eventName);\n            if (canDelegate) {\n                const remover = this.framework._registerDelegated(element, eventName, { filter: (e) => passesFilters(e), run: (e) => createEventHandler(e), once: !!modifiers?.once, comp: this });\n                this._addCleanupFunction(remover);\n            }\n            else {\n                self._addEventListenerWithCleanup(element, eventName, createEventHandler, opts);\n            }\n        }\n        _createEvaluator(expression, isStatement = false) {\n            const key = `${isStatement ? 's' : 'r'}:${expression}`;\n            let fn = this._expressionCache.get(key);\n            if (!fn) {\n                fn = new Function('ctx', `with(ctx){${isStatement ? expression : `return (${expression})`}}`);\n                this._expressionCache.set(key, fn);\n            }\n            return fn;\n        }\n        _createElementEvaluator(expression, element) {\n            const self = this;\n            const compiled = self._createEvaluator(expression);\n            return () => this._safeExecute(() => compiled.call(self._createMethodContext(), self._createContextProxy(undefined, element)), `Error evaluating expression: ${expression}`);\n        }\n        _extractArrowFunction(expression) {\n            let m = expression.match(/^\\s*\\(\\s*([^)]*?)\\s*\\)\\s*=>\\s*([\\s\\S]+)$/);\n            if (!m)\n                m = expression.match(/^\\s*([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*=>\\s*([\\s\\S]+)$/);\n            if (!m)\n                return null;\n            const params = (m[1] || '')\n                .split(',')\n                .map(p => p.trim())\n                .filter(Boolean);\n            const body = (m[2] || '').trim();\n            const isBlock = body.startsWith('{') && body.endsWith('}');\n            const finalBody = isBlock ? body.slice(1, -1) : body;\n            return { paramsList: params, body: finalBody, isBlock };\n        }\n        _compileArrowForEvent(params, body, isBlock) {\n            const content = isBlock ? body : 'return ( ' + body + ' );';\n            return new Function('ctx', ...params, 'with(ctx){ ' + content + ' }');\n        }\n        _wrapData(data, property) {\n            if (!(Object.getPrototypeOf(data) === Object.prototype || ARRAY_ISARRAY(data)))\n                return data;\n            const self = this;\n            if (!this._deepReactiveCache)\n                this._deepReactiveCache = new WeakMap();\n            if (this._deepReactiveCache.has(data))\n                return this._deepReactiveCache.get(data);\n            const proxy = new Proxy(data, {\n                get: (target, p, receiver) => {\n                    if (ARRAY_ISARRAY(target)) {\n                        if (p === Symbol.iterator) {\n                            self._trackDependency(property);\n                            return Reflect.get(target, p, receiver);\n                        }\n                        if (p === 'length' || (typeof p === 'string' && /^\\d+$/.test(p))) {\n                            self._trackDependency(property);\n                        }\n                    }\n                    else {\n                        self._trackDependency(property);\n                    }\n                    const value = Reflect.get(target, p, receiver);\n                    if (ARRAY_ISARRAY(target) && typeof value === 'function' && ['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse', 'copyWithin', 'fill'].includes(p)) {\n                        return function (...args) {\n                            const arr = target;\n                            const beforeLen = arr.length;\n                            const beforeFirst = arr[0];\n                            const beforeLast = arr[beforeLen - 1];\n                            const result = value.apply(target, args);\n                            if (arr.length !== beforeLen || arr[0] !== beforeFirst || arr[arr.length - 1] !== beforeLast) {\n                                self._onDataChange(property);\n                            }\n                            return result;\n                        };\n                    }\n                    const type = typeof value;\n                    if (value && type === 'object') {\n                        return self._wrapData(value, property);\n                    }\n                    return value;\n                },\n                ownKeys: (target) => Reflect.ownKeys(target),\n                has: (target, key) => Reflect.has(target, key),\n                set: (target, p, value) => {\n                    if (self._isDestroyed)\n                        return true;\n                    if (typeof p === 'symbol')\n                        return true;\n                    const had = Reflect.has(target, p);\n                    const oldValue = had ? Reflect.get(target, p) : undefined;\n                    if (value && typeof value === 'object') {\n                        self._wrapData(value, property);\n                    }\n                    if (!had) {\n                        try {\n                            Reflect.defineProperty(target, p, {\n                                configurable: true,\n                                enumerable: true,\n                                writable: true,\n                                value\n                            });\n                        }\n                        catch {\n                            Reflect.set(target, p, value);\n                        }\n                        self._onDataChange(property);\n                        return true;\n                    }\n                    if (oldValue === value)\n                        return true;\n                    Reflect.set(target, p, value);\n                    self._onDataChange(property);\n                    return true;\n                },\n                deleteProperty: (target, p) => Reflect.deleteProperty(target, p)\n            });\n            this._deepReactiveCache.set(data, proxy);\n            return proxy;\n        }\n        _createReactiveData(data) {\n            const self = this;\n            return new Proxy(data, {\n                get: (target, property, receiver) => {\n                    const value = Reflect.get(target, property, receiver);\n                    if (property === Symbol.iterator)\n                        return value;\n                    if (typeof property !== 'symbol') {\n                        self._trackDependency(property);\n                    }\n                    if (value && typeof value == 'object') {\n                        return self._wrapData(value, property);\n                    }\n                    return value;\n                },\n                ownKeys: (target) => Reflect.ownKeys(target),\n                has: (target, key) => Reflect.has(target, key),\n                set: (target, property, value, receiver) => {\n                    if (self._isDestroyed)\n                        return true;\n                    if (property === Symbol.iterator && ARRAY_ISARRAY(target))\n                        return value;\n                    const oldValue = Reflect.get(target, property);\n                    if (oldValue === value)\n                        return true;\n                    const had = Reflect.has(target, property);\n                    if (!had) {\n                        try {\n                            Reflect.defineProperty(target, property, {\n                                configurable: true,\n                                enumerable: true,\n                                writable: true,\n                                value\n                            });\n                        }\n                        catch {\n                            Reflect.set(target, property, value, receiver);\n                        }\n                    }\n                    else {\n                        Reflect.set(target, property, value, receiver);\n                    }\n                    this._onDataChange(property);\n                    if (this._propUpdateActive && property !== '$props') {\n                        const pc = target.$props;\n                        if (pc)\n                            pc[property] = value;\n                        const eff = this._propEffects[property];\n                        if (eff && !this._runningPropEffect) {\n                            this._runningPropEffect = true;\n                            this._safeExecute(() => eff.call(this._createMethodContext(), value, oldValue));\n                            this._runningPropEffect = false;\n                        }\n                    }\n                    return true;\n                }\n            });\n        }\n        _createMethodContext(_includeComputed = true) {\n            const specials = {\n                '$log': (..._args) => { },\n                '$destroy': () => this.destroy(),\n                '$forceUpdate': () => this._scheduleRender(),\n                '$addCleanupFunction': (fn) => this._addCleanupFunction(fn),\n                '$nextTick': (cb) => {\n                    if (cb) {\n                        this._nextTickQueue.push(cb);\n                        if (!this._renderScheduled)\n                            queueMicrotask(() => {\n                                if (!this._renderScheduled && this._nextTickQueue.length) {\n                                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                                    for (const fn of q) {\n                                        try {\n                                            fn();\n                                        }\n                                        catch { }\n                                    }\n                                }\n                            });\n                        return;\n                    }\n                    return new Promise(resolve => {\n                        this._nextTickQueue.push(() => resolve());\n                        if (!this._renderScheduled)\n                            queueMicrotask(() => {\n                                if (!this._renderScheduled && this._nextTickQueue.length) {\n                                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                                    for (const fn of q) {\n                                        try {\n                                            fn();\n                                        }\n                                        catch { }\n                                    }\n                                }\n                            });\n                    });\n                },\n                '$el': this._element,\n                '$id': this._id,\n                '$isMounted': this._isMounted,\n                '$isDestroyed': this._isDestroyed,\n                '$parent': this._parent,\n                '$children': this._children,\n                '$mutate': (fn) => {\n                    const prevMethod = this._isInMethodExecution;\n                    const prevComputed = this._isInComputedEvaluation;\n                    this._isInMethodExecution = false;\n                    this._isInComputedEvaluation = false;\n                    try {\n                        return typeof fn === 'function' ? fn() : undefined;\n                    }\n                    finally {\n                        this._isInMethodExecution = prevMethod;\n                        this._isInComputedEvaluation = prevComputed;\n                        this._scheduleRender();\n                    }\n                }\n            };\n            return new Proxy(this._data, {\n                get: (target, propStr) => {\n                    if (propStr in target) {\n                        this._trackDependency(propStr);\n                        if (this._collectingComputedKey) {\n                            let set = this._computedDeps.get(this._collectingComputedKey);\n                            if (!set) {\n                                set = new Set();\n                                this._computedDeps.set(this._collectingComputedKey, set);\n                            }\n                            set.add(propStr);\n                            let inv = this._inverseComputedDeps.get(propStr);\n                            if (!inv) {\n                                inv = new Set();\n                                this._inverseComputedDeps.set(propStr, inv);\n                            }\n                            inv.add(this._collectingComputedKey);\n                        }\n                        const v = target[propStr];\n                        return v;\n                    }\n                    if (FT_C && (propStr in this._computed))\n                        return this._getComputedValue(propStr);\n                    if (propStr in specials)\n                        return specials[propStr];\n                    return this._methods[propStr];\n                },\n                set: (_target, propStr, value) => {\n                    if (this._isInComputedEvaluation) {\n                        if (typeof console !== 'undefined' && console.warn)\n                            console.warn(`Ignored mutation of '${String(propStr)}' inside ${this._isInComputedEvaluation ? 'computed' : 'method'}; wrap in $mutate(()=>{ ... }) to apply.`);\n                        return true;\n                    }\n                    this._data[propStr] = value;\n                    return true;\n                }\n            });\n        }\n        _createContextProxy(event, targetElement) {\n            const component = this;\n            const mergedScope = targetElement ? this._collectLoopScope(targetElement) : null;\n            const scopeKeys = mergedScope ? new Set(_Okeys(mergedScope)) : new Set();\n            const gWindow = (typeof window !== 'undefined' ? window : undefined);\n            const gDocument = (typeof document !== 'undefined' ? document : undefined);\n            const cfg = this.framework._getConfig();\n            const sandbox = !!cfg.sandboxExpressions;\n            const allow = new Set((cfg.allowGlobals || []).map(s => String(s)));\n            const wrapTarget = (t) => {\n                if (!t)\n                    return t;\n                const hasAdd = typeof t.addEventListener === 'function';\n                if (!hasAdd)\n                    return t;\n                const handlerMap = new WeakMap();\n                const makeKey = (event, options) => {\n                    try {\n                        return event + '|' + (options === undefined ? '' : (typeof options === 'object' ? JSON.stringify(options) : String(options)));\n                    }\n                    catch {\n                        return event + '|';\n                    }\n                };\n                return new Proxy(t, {\n                    get(target, prop, receiver) {\n                        if (prop === 'addEventListener') {\n                            return function (event, handler, options) {\n                                target.addEventListener(event, handler, options);\n                                const remover = component._addCleanupFunction(() => { try {\n                                    target.removeEventListener(event, handler, options);\n                                }\n                                catch { } });\n                                try {\n                                    if (typeof handler === 'function' && remover) {\n                                        let m = handlerMap.get(handler);\n                                        if (!m) {\n                                            m = new Map();\n                                            handlerMap.set(handler, m);\n                                        }\n                                        m.set(makeKey(event, options), remover);\n                                    }\n                                }\n                                catch { }\n                            };\n                        }\n                        if (prop === 'removeEventListener') {\n                            return function (event, handler, options) {\n                                try {\n                                    target.removeEventListener(event, handler, options);\n                                }\n                                catch { }\n                                try {\n                                    if (typeof handler === 'function') {\n                                        const m = handlerMap.get(handler);\n                                        if (m) {\n                                            const key = makeKey(event, options);\n                                            const rem = m.get(key);\n                                            if (rem) {\n                                                try {\n                                                    rem();\n                                                }\n                                                catch { }\n                                                ;\n                                                m.delete(key);\n                                            }\n                                            if (m.size === 0)\n                                                handlerMap.delete(handler);\n                                        }\n                                    }\n                                }\n                                catch { }\n                            };\n                        }\n                        if (prop === 'querySelector') {\n                            return function (sel) { const res = target.querySelector(sel); return wrapTarget(res); };\n                        }\n                        if (prop === 'querySelectorAll') {\n                            return function (sel) { const list = target.querySelectorAll(sel); return Array.from(list).map(wrapTarget); };\n                        }\n                        if (prop === 'getElementById') {\n                            return function (id) { const res = target.getElementById(id); return wrapTarget(res); };\n                        }\n                        if (prop === 'document') {\n                            const doc = target.document;\n                            return wrapTarget(doc) || doc;\n                        }\n                        return Reflect.get(target, prop, receiver);\n                    }\n                });\n            };\n            const _timeoutRemovers = new Map();\n            const _intervalRemovers = new Map();\n            const _rafRemovers = new Map();\n            const ctxSetTimeout = (fn, ms, ...args) => {\n                const id = gWindow?.setTimeout?.(fn, ms, ...args);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.clearTimeout?.(id);\n                    }\n                    catch { } });\n                    _timeoutRemovers.set(id, remover);\n                }\n                return id;\n            };\n            const ctxSetInterval = (fn, ms, ...args) => {\n                const id = gWindow?.setInterval?.(fn, ms, ...args);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.clearInterval?.(id);\n                    }\n                    catch { } });\n                    _intervalRemovers.set(id, remover);\n                }\n                return id;\n            };\n            const ctxRequestAnimationFrame = (cb) => {\n                const id = gWindow?.requestAnimationFrame?.(cb);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.cancelAnimationFrame?.(id);\n                    }\n                    catch { } });\n                    _rafRemovers.set(id, remover);\n                }\n                return id;\n            };\n            const wrapObserverCtor = (Orig) => {\n                if (!Orig)\n                    return undefined;\n                const Wrapped = function (...args) {\n                    const inst = new Orig(...args);\n                    component._addCleanupFunction(() => { try {\n                        inst.disconnect();\n                    }\n                    catch { } });\n                    return inst;\n                };\n                Wrapped.prototype = Orig.prototype;\n                return Wrapped;\n            };\n            const specials = {\n                '$target': targetElement || null,\n                '$event': event || null,\n                ...(sandbox && !allow.has('setTimeout') ? {} : { 'setTimeout': ctxSetTimeout }),\n                ...(sandbox && !allow.has('clearTimeout') ? {} : { 'clearTimeout': (id) => { try {\n                        gWindow?.clearTimeout?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _timeoutRemovers.get(id);\n                            if (r) {\n                                r();\n                                _timeoutRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('setInterval') ? {} : { 'setInterval': ctxSetInterval }),\n                ...(sandbox && !allow.has('clearInterval') ? {} : { 'clearInterval': (id) => { try {\n                        gWindow?.clearInterval?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _intervalRemovers.get(id);\n                            if (r) {\n                                r();\n                                _intervalRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('requestAnimationFrame') ? {} : { 'requestAnimationFrame': ctxRequestAnimationFrame }),\n                ...(sandbox && !allow.has('cancelAnimationFrame') ? {} : { 'cancelAnimationFrame': (id) => { try {\n                        gWindow?.cancelAnimationFrame?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _rafRemovers.get(id);\n                            if (r) {\n                                r();\n                                _rafRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('MutationObserver') ? {} : { 'MutationObserver': wrapObserverCtor(gWindow?.MutationObserver) }),\n                ...(sandbox && !allow.has('ResizeObserver') ? {} : { 'ResizeObserver': wrapObserverCtor(gWindow?.ResizeObserver) }),\n                ...(sandbox && !allow.has('IntersectionObserver') ? {} : { 'IntersectionObserver': wrapObserverCtor(gWindow?.IntersectionObserver) }),\n                ...(sandbox && !allow.has('window') ? {} : { 'window': wrapTarget(gWindow) }),\n                ...(sandbox && !allow.has('document') ? {} : { 'document': wrapTarget(gDocument) })\n            };\n            return new Proxy({}, {\n                get: (_t, propStr) => {\n                    if (mergedScope && propStr in mergedScope)\n                        return mergedScope[propStr];\n                    if (propStr in component._data)\n                        return component._data[propStr];\n                    if (propStr in component._computed)\n                        return component._getComputedValue(propStr);\n                    if (propStr in component._methods)\n                        return component._methods[propStr];\n                    if (propStr in specials)\n                        return specials[propStr];\n                    return undefined;\n                },\n                set: (_t, propStr, value) => {\n                    if (mergedScope && scopeKeys.has(propStr)) {\n                        mergedScope[propStr] = value;\n                    }\n                    else {\n                        component._data[propStr] = value;\n                    }\n                    return true;\n                },\n                has: (_t, propStr) => !!(mergedScope && propStr in mergedScope) ||\n                    propStr in component._data ||\n                    propStr in component._computed ||\n                    propStr in component._methods ||\n                    propStr in specials\n            });\n        }\n        _bindCustomDirective(element, _name, expression, directive, modifiers) {\n            const self = this;\n            const evaluator = self._createElementEvaluator(expression, element);\n            const directiveInfo = { type: 'custom', expression, customDirective: directive };\n            if (directive.bind) {\n                self._safeExecute(() => directive.bind(element, evaluator(), expression, self, modifiers, evaluator));\n            }\n            const update = () => {\n                if (directive.update)\n                    self._safeExecute(() => directive.update(element, evaluator(), expression, self, modifiers, evaluator));\n            };\n            const effect = self._createEffect(update);\n            directiveInfo.update = effect;\n            self._addDirective(element, directiveInfo);\n        }\n        _bindAttributeDirective(element, attributeName, expression) {\n            const self = this;\n            const evaluator = self._createElementEvaluator(expression, element);\n            if (attributeName === 'class') {\n                const el = element;\n                if (!self._initialClassSets.get(el)) {\n                    const baseSet = new Set();\n                    const oc = el.className || '';\n                    if (oc)\n                        for (const cls of oc.split(/\\s+/)) {\n                            if (cls)\n                                baseSet.add(cls);\n                        }\n                    self._initialClassSets.set(el, baseSet);\n                }\n            }\n            const elAny = element;\n            let propName = null;\n            if (attributeName in elAny)\n                propName = attributeName;\n            else {\n                const camel = attributeName.replace(/-([a-z])/g, (_, c) => c.toUpperCase());\n                if (camel in elAny)\n                    propName = camel;\n                else if (attributeName.toLowerCase() === 'readonly' && 'readOnly' in elAny)\n                    propName = 'readOnly';\n            }\n            const isBooleanProp = !!(propName && typeof elAny[propName] === 'boolean');\n            const hasNonFunctionProp = !!(propName && (propName in elAny) && typeof elAny[propName] !== 'function');\n            const isKnownBooleanAttr = !!ReactiveComponent._BA[attributeName.toLowerCase()];\n            const update = () => {\n                const value = evaluator();\n                if (attributeName === 'class') {\n                    const el = element;\n                    const base = self._initialClassSets.get(el);\n                    if (typeof value === 'string') {\n                        el.className = base && base.size ? [...base].join(' ') + (value ? ' ' + value : '') : value || '';\n                    }\n                    else if (ARRAY_ISARRAY(value)) {\n                        if (base && base.size)\n                            el.className = [...base, ...value.filter(Boolean)].join(' ');\n                        else\n                            el.className = value.filter(Boolean).join(' ');\n                    }\n                    else if (value && typeof value === 'object') {\n                        if (base && base.size)\n                            el.className = [...base].join(' ');\n                        for (const raw in value) {\n                            const on = !!value[raw];\n                            if (!raw)\n                                continue;\n                            const tokens = raw.split(/\\s+/);\n                            for (let i = 0; i < tokens.length; i++) {\n                                const tk = tokens[i];\n                                if (!tk)\n                                    continue;\n                                el.classList.toggle(tk, on);\n                            }\n                        }\n                    }\n                    else if (value == null && base && base.size) {\n                        el.className = [...base].join(' ');\n                    }\n                    else if (value == null) {\n                        el.removeAttribute('class');\n                    }\n                    return;\n                }\n                if (attributeName === STR_STYLE) {\n                    const el = element;\n                    if (typeof value === 'string') {\n                        el.style.cssText = value;\n                        return;\n                    }\n                    if (value && typeof value === 'object') {\n                        Object.assign(el.style, value);\n                        return;\n                    }\n                    if (value == null)\n                        el.removeAttribute('style');\n                    return;\n                }\n                if ((isBooleanProp && propName) || isKnownBooleanAttr) {\n                    const boolVal = !!value;\n                    if (propName && isBooleanProp)\n                        elAny[propName] = boolVal;\n                    if (boolVal)\n                        element.setAttribute(attributeName, '');\n                    else\n                        element.removeAttribute(attributeName);\n                    return;\n                }\n                let normalized = null;\n                if (value && typeof value === 'object') {\n                    const parts = [];\n                    for (const k in value) {\n                        if (value[k])\n                            parts.push(k);\n                    }\n                    normalized = parts.length ? parts.join(' ') : null;\n                }\n                else if (value !== null && value !== undefined) {\n                    normalized = String(value);\n                }\n                if (hasNonFunctionProp && propName) {\n                    if (normalized !== null) {\n                        try {\n                            elAny[propName] = normalized;\n                        }\n                        catch (e) {\n                            try {\n                                element.setAttribute(attributeName, normalized);\n                            }\n                            catch { }\n                        }\n                    }\n                    else {\n                        element.removeAttribute(attributeName);\n                    }\n                    return;\n                }\n                if (normalized !== null) {\n                    const cur = element.getAttribute(attributeName);\n                    if (cur !== normalized)\n                        element.setAttribute(attributeName, normalized);\n                }\n                else {\n                    if (element.hasAttribute(attributeName))\n                        element.removeAttribute(attributeName);\n                }\n            };\n            const effect = self._createEffect(update);\n            self._addDirective(element, { type: 'bind', expression, update: effect });\n        }\n        _collectLoopScope(el) {\n            if (!el)\n                return null;\n            if (!el.parentElement) {\n                const cur = el.__x_if_current;\n                if (cur && cur.parentElement) {\n                    el = cur;\n                }\n                else {\n                    const anchorParent = el.__x_if_anchorParent;\n                    if (anchorParent)\n                        el = anchorParent;\n                }\n            }\n            const merged = {};\n            let node = el;\n            while (node) {\n                const scope = this._loopScopes.get(node);\n                if (scope)\n                    Object.assign(merged, scope);\n                if (node === this.element)\n                    break;\n                node = node.parentElement;\n            }\n            return _Okeys(merged).length ? merged : null;\n        }\n        _updateElementDirectives(root) {\n            for (const [element, directives] of this._directives) {\n                for (const directive of directives) {\n                    if ((root === element || (element instanceof Element && root.contains(element))) && directive.update) {\n                        directive.update();\n                    }\n                }\n            }\n        }\n        _bindForDirective(element, expression) {\n            const self = this;\n            const match = expression.trim().match(/^(?:\\(\\s*([^,\\s]+)\\s*(?:,\\s*([^\\)]+))?\\s*\\)|([^,\\s]+))\\s+(in|of)\\s+(.+)$/);\n            if (!match) {\n                return;\n            }\n            const itemVar = match[1] || match[3];\n            const indexVar = match[2];\n            const listCode = match[5];\n            const placeholder = d.createComment('x-for');\n            element.parentNode?.insertBefore(placeholder, element);\n            let templateToClone;\n            if (element[STR_TAGNAME] === STR_TEMPLATE) {\n                templateToClone = d.createElement('div');\n                templateToClone.style[STR_DISPLAY] = 'contents';\n                templateToClone.appendChild(element.content.cloneNode(true));\n                element.parentNode?.removeChild(element);\n            }\n            else {\n                templateToClone = element;\n                element.parentNode?.removeChild(element);\n            }\n            const contextAnchor = placeholder.parentElement || self.element;\n            const listEval = self._createElementEvaluator(listCode.trim(), contextAnchor);\n            const instances = [];\n            const createScope = (item, idxOrKey) => {\n                const scope = { [itemVar]: item };\n                if (indexVar)\n                    scope[indexVar] = idxOrKey;\n                return scope;\n            };\n            const update = () => {\n                const norm = self._safeExecute(() => {\n                    const result = listEval();\n                    if (_AisArr(result))\n                        return { list: result, keys: null };\n                    if (typeof Map !== 'undefined' && result instanceof Map) {\n                        return { list: _Afrom(result.values()), keys: _Afrom(result.keys()) };\n                    }\n                    if (typeof Set !== 'undefined' && result instanceof Set) {\n                        return { list: _Afrom(result.values()), keys: null };\n                    }\n                    if (result && typeof result[Symbol.iterator] === 'function') {\n                        return { list: _Afrom(result), keys: null };\n                    }\n                    if (result && typeof result === 'object') {\n                        const keys = Object.keys(result);\n                        const list = keys.map(k => result[k]);\n                        return { list, keys };\n                    }\n                    return { list: [], keys: null };\n                }, 'x-for eval error', { list: [], keys: null });\n                const list = norm.list;\n                const keysArr = norm.keys;\n                if (instances.length > list.length) {\n                    while (instances.length > list.length) {\n                        const inst = instances.pop();\n                        if (inst.parentNode)\n                            inst.parentNode.removeChild(inst);\n                    }\n                }\n                const minLen = Math.min(instances.length, list.length);\n                for (let i = 0; i < minLen; i++) {\n                    const inst = instances[i];\n                    const keyVal = keysArr ? keysArr[i] : i;\n                    self._loopScopes.set(inst, createScope(list[i], keyVal));\n                    self._updateElementDirectives(inst);\n                }\n                if (list.length > instances.length) {\n                    const frag = d.createDocumentFragment();\n                    const start = instances.length;\n                    for (let i = start; i < list.length; i++) {\n                        const clone = templateToClone.cloneNode(true);\n                        clone.removeAttribute('x-for');\n                        const keyVal = keysArr ? keysArr[i] : i;\n                        self._loopScopes.set(clone, createScope(list[i], keyVal));\n                        try {\n                            self._parseDirectives(clone);\n                        }\n                        catch { }\n                        frag.appendChild(clone);\n                        instances.push(clone);\n                    }\n                    const ref = instances[start - 1] || placeholder;\n                    if (ref.parentNode)\n                        ref.parentNode.insertBefore(frag, ref.nextSibling);\n                }\n            };\n            const dir = { type: 'for', expression };\n            const effect = self._createEffect(update, dir);\n            dir.update = effect;\n            self._addDirective(placeholder, dir);\n        }\n        _render() {\n            const self = this;\n            for (const directives of self._directives.values()) {\n                for (const dr of directives) {\n                    if (XTOOL_ENABLE_STATIC_DIRECTIVES && dr._static)\n                        continue;\n                    if (dr.update) {\n                        try {\n                            dr.update();\n                        }\n                        catch (error) {\n                            if (!(error instanceof ReferenceError)) { }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    ReactiveComponent._BA = {\n        itemscope: 1, formnovalidate: 1, novalidate: 1, default: 1\n    };\n    const xTool = new XToolFramework();\n    return xTool;\n}();\nif (typeof window !== 'undefined')\n    window.XTool = XToolFramework;\n//# sourceMappingURL=x-tool.js.map"],"mappings":"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","ignoreList":[]}