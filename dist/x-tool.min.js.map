{"version":3,"file":"x-tool.min.js","names":["ARRAY_ISARRAY","Array","isArray","XToolFramework","_Afrom","from","_AisArr","_Okeys","Object","keys","_logErr","STR_STYLE","STR_DISPLAY","STR_NONE","STR_TAGNAME","STR_TEMPLATE","STR_LENGTH","XTOOL_ENABLE_STATIC_DIRECTIVES","d","document","STR_CONTENTS","EV_DELEGATED","head","getElementById","style","createElement","id","textContent","appendChild","PFX","attrName","name","ReactiveComponent","attachToParent","parent","this","_parent","_addChild","_id","framework","_framework","element","_element","el","isBound","_isBound","v","isMounted","_isMounted","isDestroyed","_isDestroyed","_addDirective","directive","existing","_directives","get","push","set","constructor","def","_propUpdateActive","_runningPropEffect","_beforeMountCalled","_children","_computed","_propEffects","_computedCache","Map","_computedDeps","_inverseComputedDeps","_isInComputedEvaluation","_isInMethodExecution","_allEffects","Set","_hasComputed","_cleanupFunctions","_eventListeners","_loopScopes","WeakMap","_expressionCache","_propertyDependencies","_activeEffect","_renderScheduled","_nextTickQueue","_initialClassSets","_propParent","_callLifecycleHook","hookName","hook","_lifecycle","_safeExecute","_runWithGlobalInterception","_addCleanupFunction","fn","wrapper","delete","add","_addEventListenerWithCleanup","event","handler","options","addEventListener","_originalMethods","methods","computed","propEffects","length","mounted","unmounted","destroyed","updated","beforeMount","beforeUnmount","beforeDestroy","_data","_createReactiveData","data","_methods","_bindMethods","callBeforeMount","_onDataChange","_property","clear","effectsToRun","directDeps","i","effect","_scheduleRender","boundMethods","methodName","originalMethod","args","prev","_getComputedValue","key","_trackDependency","has","computeFn","dep","value","call","_createMethodContext","propKey","deps","includes","requestAnimationFrame","_render","q","splice","fallback","bindToElement","completeBinding","getContext","includeComputed","_applyAsyncTemplateResolved","_parseDirectives","_getComponentByElement","_registerElement","child","_removeChild","index","indexOf","src","String","test","body","trim","Function","undefined","_createContextProxy","apply","destroy","self","directives","type","customDirective","unbind","removeEventListener","cleanup","_propEffect","values","idx","_unregisterElement","_deepReactiveCache","queueMicrotask","_unregisterComponent","_initReactiveProps","expr","evalFn","update","obj","ctx","$props","k","processElement","isRoot","hasAttribute","isComponentTag","hasTextOrHtml","forAttr","a","attributes","n","startsWith","_bindDirective","attr","_bindTextInterpolationsIn","_walkElements","nodes","childNodes","node","nodeType","Node","TEXT_NODE","textNode","raw","nodeValue","__x_tool_ti","parentTag","parentElement","tagName","toLowerCase","inCode","segs","open","literal","slice","bs","p","charCodeAt","prefixEnd","repeat","close","hasExpr","some","s","hasEscaped","evaluators","filter","map","_createElementEvaluator","exprIndex","out","val","dirInfo","expression","_createEffect","processor","firstElementChild","next","nextElementSibling","directiveName","isShortBind","removeAttribute","_bindAttributeDirective","_bindSimpleDirective","_bindModelDirective","_bindIfDirective","_bindForDirective","prefix","rest","split","suffix","mods","modifiers","reduce","acc","m","_getCustomDirective","_bindCustomDirective","_bindEventDirective","updateFn","directiveRef","_static","found","evaluator","originalDisplay","_prevShown","innerHTML","property","isCheckbox","isNumeric","isMultiSelect","multiple","Reflect","defineProperty","configurable","enumerable","writable","getValueEvaluator","setValueEvaluator","_createEvaluator","checkboxValue","loopScope","_collectLoopScope","inferCheckboxValue","member","checked","sel","arr","opt","selected","setInputValue","t","parseFloat","getInputValue","currentVal","forEach","$value","placeholder","createComment","parentNode","insertBefore","__x_if_anchorParent","branches","makeActualElement","content","cloneNode","isTemplate","first","firstEval","__x_tool_bound","originalNodes","sib","isElse","isElseIf","getAttribute","branch","active","orig","removeChild","mountBranch","b","__x_if_current","nextSibling","cb","unmountBranch","eventName","trimmed","arrow","_extractArrowFunction","opts","once","passive","capture","onlySelf","shouldPrevent","prevent","shouldStop","stop","isOutside","outside","deferExec","defer","keyAliasMap","enter","esc","escape","space","tab","backspace","del","arrowup","arrowdown","arrowleft","arrowright","home","end","pageup","pagedown","comboRequirements","ctrl","alt","shift","meta","buttonMap","left","middle","right","touchSingle","single","touchMulti","multi","modifierKeys","allowedKeys","aliases","allowedButtons","btn","needKeyCheck","needButtonCheck","needTouchCheck","passesFilters","path","composedPath","tgt","target","contains","TouchEvent","tCount","touches","MouseEvent","button","KeyboardEvent","ctrlKey","altKey","shiftKey","metaKey","runExpr","thisCtx","compiledArrow","_compileArrowForEvent","paramsList","isBlock","mapArgs","_","isStatement","executor","result","createEventHandler","preventDefault","stopPropagation","ev","canDelegate","_getConfig","delegate","remover","_registerDelegated","e","run","comp","ownerDocument","compiled","match","params","Boolean","endsWith","_wrapData","parentKey","getPrototypeOf","prototype","proxy","Proxy","receiver","Symbol","iterator","beforeLen","beforeFirst","beforeLast","ownKeys","had","oldValue","deleteProperty","pc","eff","_includeComputed","specials","$log","$destroy","$forceUpdate","$addCleanupFunction","$nextTick","Promise","resolve","$el","$id","$isMounted","$isDestroyed","$parent","$children","$mutate","prevMethod","prevComputed","propStr","_target","targetElement","component","mergedScope","scopeKeys","gWindow","window","gDocument","cfg","sandbox","sandboxExpressions","allow","allowGlobals","wrapTarget","handlerMap","makeKey","JSON","stringify","prop","rem","size","res","querySelector","list","querySelectorAll","doc","w","defaultView","_timeoutRemovers","_intervalRemovers","_rafRemovers","wrapObserverCtor","Orig","Wrapped","inst","disconnect","$target","$event","setTimeout","ms","clearTimeout","r","setInterval","clearInterval","cancelAnimationFrame","MutationObserver","ResizeObserver","IntersectionObserver","_t","_name","directiveInfo","bind","attributeName","baseSet","oc","className","cls","elAny","propName","camel","replace","c","toUpperCase","isBooleanProp","hasNonFunctionProp","isKnownBooleanAttr","_BA","base","join","on","tokens","tk","classList","toggle","cssText","assign","boolVal","setAttribute","normalized","parts","cur","anchorParent","merged","scope","_updateElementDirectives","root","Element","itemVar","indexVar","listCode","templateToClone","contextAnchor","listEval","instances","createScope","item","idxOrKey","dir","norm","keysArr","pop","minLen","Math","min","frag","createDocumentFragment","start","clone","ref","dr","error","itemscope","formnovalidate","novalidate","default","_components","_byEl","_pending","_config","_customDirectives","_namedComponentDefs","_delegated","_delegatedRootBound","Error","registerComponent","definition","_getRegisteredComponentDef","init","config","container","debug","staticDirectives","_hpf","readyState","_applyPrefixInitialCSS","_autoDiscoverComponents","_ensureRootObserver","_ensureDelegation","createComponent","_generateComponentId","componentElements","_bindElementAsComponent","reusable","_instantiateNamedComponent","_processPending","components","lastComponent","maybe","parentForEval","dataExpression","parentCtx","_parseDataExpression","initExpr","existingMounted","isConnected","Date","now","random","toString","substring","componentId","_log","_rootObserver","records","addedNodes","removedNodes","stack","_onComponentSourceChanged","observe","childList","subtree","attributeFilter","source","parentComp","par","props","dynamicPropObj","rawPropExpression","propExpr","initDef","baseData","makeData","compDef","originalChildren","firstChild","template","applyTemplate","tpl","slots","slotEl","matched","replaceChild","tplVal","then","html","nested","cancelBubble","h","captureEvents","bubbleEvents","entry","l","XTool","FyneJS"],"sourceRoot":"./dist","sources":["dist/x-tool.js"],"sourcesContent":["\"use strict\";\nconst ARRAY_ISARRAY = Array.isArray;\nconst FT_C = true;\nconst FT_TI = typeof __FEAT_TEXT_INTERP__ === 'boolean' ? __FEAT_TEXT_INTERP__ : true;\nconst _FT_DR = typeof __FEAT_DEEP_REACTIVE__ === 'boolean' ? __FEAT_DEEP_REACTIVE__ : true;\nconst FT_IFB = typeof __FEAT_IF_BRANCHES__ === 'boolean' ? __FEAT_IF_BRANCHES__ : true;\nconst XToolFramework = function () {\n    const _Afrom = Array.from;\n    const _AisArr = ARRAY_ISARRAY;\n    const _Okeys = Object.keys;\n    const _logErr = (..._args) => { };\n    const STR_STYLE = 'style';\n    const STR_DISPLAY = 'display';\n    const STR_NONE = 'none';\n    const STR_TAGNAME = 'tagName';\n    const STR_TEMPLATE = 'TEMPLATE';\n    const STR_LENGTH = 'length';\n    let XTOOL_ENABLE_STATIC_DIRECTIVES = true;\n    const d = (typeof document !== 'undefined' ? document : null);\n    const STR_CONTENTS = 'contents';\n    const EV_CLICK = 'click', EV_INPUT = 'input', EV_CHANGE = 'change', EV_KEYDOWN = 'keydown', EV_KEYUP = 'keyup';\n    const EV_DELEGATED = [EV_CLICK, EV_INPUT, EV_CHANGE, EV_KEYDOWN, EV_KEYUP];\n    try {\n        if (d && d.head && !d.getElementById('x-tool-initial-css')) {\n            const style = d.createElement(STR_STYLE);\n            style.id = 'x-tool-initial-css';\n            style.textContent = '[x-show],[x-if],[x-else],[x-else-if],[x\\\\:show],[x\\\\:if],[x\\\\:else],[x\\\\:else-if]{display:none;}';\n            d.head.appendChild(style);\n        }\n    }\n    catch { }\n    let PFX = 'x';\n    const attrName = (name) => `${PFX}-${name}`;\n    class XToolFramework {\n        constructor() {\n            this._components = new Map();\n            this._byEl = new WeakMap();\n            this._pending = [];\n            this._config = {};\n            this._customDirectives = new Map();\n            this._namedComponentDefs = new Map();\n            this._delegated = new WeakMap();\n            this._delegatedRootBound = false;\n            this.directive = (name, directive) => {\n                if (name.startsWith(PFX + '-')) {\n                    throw new Error(`Custom directive names should not start with \"${PFX}-\". Use: XTool.directive(\"my-directive\", ...)`);\n                }\n                this._customDirectives.set(name, directive);\n                return this;\n            };\n            this.registerComponent = (definition) => {\n                if (!definition || !definition.name)\n                    throw new Error('registerComponent requires a name');\n                const name = definition.name.toLowerCase();\n                if (this._namedComponentDefs.has(name))\n                    throw new Error(`Component name \"${name}\" already registered`);\n                this._namedComponentDefs.set(name, definition);\n                return this;\n            };\n            this._getRegisteredComponentDef = (name) => this._namedComponentDefs.get(name.toLowerCase());\n            this._getCustomDirective = (name) => this._customDirectives.get(name);\n            this._getConfig = () => this._config;\n            this.init = (config = {}) => {\n                this._config = { container: 'body', debug: false, staticDirectives: true, ...config };\n                if (typeof this._config.staticDirectives === 'boolean') {\n                    XTOOL_ENABLE_STATIC_DIRECTIVES = this._config.staticDirectives;\n                }\n                const _hpf = this._config.prefix;\n                if (_hpf && typeof _hpf === 'string' && _hpf[STR_LENGTH] > 0) {\n                    PFX = _hpf;\n                }\n                else {\n                    PFX = 'x';\n                }\n                if (d && d.readyState === 'loading') {\n                    d.addEventListener('DOMContentLoaded', () => { this._applyPrefixInitialCSS(); this._autoDiscoverComponents(); const c = d?.querySelector(this._config.container); if (c) {\n                        this._ensureRootObserver(c);\n                        if (this._config.delegate)\n                            this._ensureDelegation(c);\n                    } });\n                }\n                else if (!d || d.readyState === 'complete' || d.readyState === 'interactive') {\n                    this._applyPrefixInitialCSS();\n                    this._autoDiscoverComponents();\n                    const c = d?.querySelector(this._config.container);\n                    if (c) {\n                        this._ensureRootObserver(c);\n                        if (this._config.delegate)\n                            this._ensureDelegation(c);\n                    }\n                }\n                return this;\n            };\n            this.createComponent = (definition) => {\n                const component = new ReactiveComponent(this._generateComponentId(), definition, this);\n                this._components.set(component.id, component);\n                component.callBeforeMount();\n                return component;\n            };\n            this._autoDiscoverComponents = () => {\n                const container = d?.querySelector(this._config.container);\n                if (!container)\n                    return;\n                const componentElements = container.querySelectorAll(`[${attrName('data')}]`);\n                for (const element of componentElements) {\n                    if (!this._getComponentByElement(element))\n                        this._bindElementAsComponent(element);\n                }\n                const reusable = container.querySelectorAll('component[source]');\n                for (const el of reusable) {\n                    if (!this._getComponentByElement(el))\n                        this._instantiateNamedComponent(el);\n                }\n                this._processPending();\n                if (componentElements[STR_LENGTH] === 0 && !this._getComponentByElement(container)) {\n                    const components = _Afrom(this._components.values());\n                    const lastComponent = components[components[STR_LENGTH] - 1];\n                    if (lastComponent && !lastComponent.isBound) {\n                        lastComponent.bindToElement(container);\n                    }\n                }\n            };\n            this._processPending = () => {\n                if (!this._pending[STR_LENGTH])\n                    return;\n                for (const p of this._pending) {\n                    let cur = p.el.parentElement;\n                    let parent;\n                    while (cur && !parent) {\n                        const maybe = this._getComponentByElement(cur);\n                        if (maybe)\n                            parent = maybe;\n                        else\n                            cur = cur.parentElement;\n                    }\n                    if (parent) {\n                        p.comp.attachToParent(parent);\n                    }\n                }\n                for (const p of this._pending)\n                    p.comp.completeBinding();\n                this._pending = [];\n            };\n            this._bindElementAsComponent = (element, parentForEval) => {\n                const dataExpression = element.getAttribute(attrName('data'));\n                let data = {};\n                if (dataExpression) {\n                    element.removeAttribute(attrName('data'));\n                    try {\n                        if (parentForEval) {\n                            let parentCtx = {};\n                            try {\n                                parentCtx = parentForEval._createMethodContext?.() || {};\n                            }\n                            catch {\n                                parentCtx = {};\n                            }\n                            const evalFn = new Function('parent', `with(parent){ return (${dataExpression}) }`);\n                            data = evalFn(parentCtx);\n                        }\n                        else {\n                            data = this._parseDataExpression(dataExpression);\n                        }\n                        if (data.methods) {\n                            data = { methods: data.methods, data: { ...data } };\n                        }\n                        else {\n                            data = { data: { ...data } };\n                        }\n                        if (parentForEval) {\n                            data.data.$parent = parentForEval;\n                        }\n                    }\n                    catch (e) {\n                    }\n                }\n                const comp = this.createComponent(data);\n                comp.element = element;\n                comp.callBeforeMount();\n                this._registerElement(comp.element, comp);\n                this._pending.push({ el: element, comp });\n                const initExpr = element.getAttribute(attrName('init'));\n                if (initExpr) {\n                    element.removeAttribute(attrName('init'));\n                    const existingMounted = comp._lifecycle?.mounted;\n                    comp._lifecycle.mounted = function () {\n                        if (existingMounted) {\n                            try {\n                                existingMounted.call(this);\n                            }\n                            catch { }\n                        }\n                        const evaluator = new Function('ctx', 'with(ctx){' + initExpr + '} ');\n                        queueMicrotask(() => {\n                            if (comp.isDestroyed || !comp.element || !comp.element.isConnected)\n                                return;\n                            try {\n                                const ctx = comp._createMethodContext?.() || comp.getContext?.() || {};\n                                const result = evaluator(ctx);\n                                if (typeof result === 'function') {\n                                    try {\n                                        result();\n                                    }\n                                    catch { }\n                                }\n                            }\n                            catch { }\n                        });\n                    };\n                }\n            };\n            this._generateComponentId = () => 'component_' + Date.now() + '_' + Math.random().toString(36).substring(2, 9);\n            this._parseDataExpression = (expression) => {\n                try {\n                    return new Function('return ' + expression.trim())();\n                }\n                catch {\n                    return {};\n                }\n            };\n            this._unregisterComponent = (componentId) => { this._components.delete(componentId); };\n            this._log = (..._args) => { };\n            this._registerElement = (element, component) => {\n                this._byEl.set(element, component);\n            };\n            this._unregisterElement = (element) => { try {\n                this._byEl.delete(element);\n            }\n            catch { } };\n        }\n        _applyPrefixInitialCSS() {\n            if (!d)\n                return;\n            if (PFX === 'x')\n                return;\n            const id = `x-tool-initial-css-${PFX}`;\n            if (d.head && !d.getElementById(id)) {\n                const style = d.createElement(STR_STYLE);\n                style.id = id;\n                style.textContent = `[${PFX}-show],[${PFX}-if],[${PFX}-else],[${PFX}-else-if],[${PFX}\\\\:show],[${PFX}\\\\:if],[${PFX}\\\\:else],[${PFX}\\\\:else-if]{display:none;}`;\n                d.head.appendChild(style);\n            }\n        }\n        _ensureRootObserver(container) {\n            if (this._rootObserver || typeof MutationObserver === 'undefined')\n                return;\n            this._rootObserver = new MutationObserver(records => {\n                for (const r of records) {\n                    if (r.type === 'childList') {\n                        for (let i = 0; i < r.addedNodes.length; i++) {\n                            const n = r.addedNodes[i];\n                            if (n.nodeType !== 1)\n                                continue;\n                            const el = n;\n                            if (el[STR_TAGNAME] === 'COMPONENT') {\n                                const src = el.getAttribute('source');\n                                if (src && !this._getComponentByElement(el))\n                                    this._instantiateNamedComponent(el);\n                            }\n                        }\n                        for (let i = 0; i < r.removedNodes.length; i++) {\n                            const n = r.removedNodes[i];\n                            if (n.nodeType !== 1)\n                                continue;\n                            const el = n;\n                            queueMicrotask(() => {\n                                if (el.isConnected)\n                                    return;\n                                const stack = [el];\n                                while (stack.length) {\n                                    const cur = stack.pop();\n                                    const comp = this._getComponentByElement(cur);\n                                    if (comp && !comp.isDestroyed) {\n                                        try {\n                                            comp.destroy();\n                                        }\n                                        catch { }\n                                    }\n                                    let child = cur.firstElementChild;\n                                    while (child) {\n                                        stack.push(child);\n                                        child = child.nextElementSibling;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else if (r.type === 'attributes') {\n                        const target = r.target;\n                        if (target && target[STR_TAGNAME] === 'COMPONENT' && r.attributeName === 'source') {\n                            this._onComponentSourceChanged(target);\n                        }\n                    }\n                }\n                this._processPending();\n            });\n            this._rootObserver.observe(container, { childList: true, subtree: true, attributes: true, attributeFilter: ['source'] });\n        }\n        _onComponentSourceChanged(el) {\n            const src = (el.getAttribute('source') || '').trim();\n            const existing = this._getComponentByElement(el);\n            if (!src) {\n                if (existing && !existing.isDestroyed) {\n                    try {\n                        existing.destroy();\n                    }\n                    catch { }\n                }\n                el.innerHTML = '';\n                return;\n            }\n            if (existing && !existing.isDestroyed) {\n                try {\n                    existing.destroy();\n                }\n                catch { }\n            }\n            el.innerHTML = '';\n            this._instantiateNamedComponent(el);\n        }\n        _instantiateNamedComponent(el) {\n            const source = el.getAttribute('source');\n            if (!source)\n                return;\n            const def = this._getRegisteredComponentDef(source);\n            if (!def) {\n                return;\n            }\n            let parentComp;\n            let par = el.parentElement;\n            while (par && !parentComp) {\n                const maybe = this._getComponentByElement(par);\n                if (maybe)\n                    parentComp = maybe;\n                else\n                    par = par.parentElement;\n            }\n            let props = null;\n            let dynamicPropObj = null;\n            let rawPropExpression = null;\n            if (!props)\n                props = {};\n            const propExpr = el.getAttribute(attrName('prop'));\n            if (propExpr) {\n                rawPropExpression = propExpr;\n                if (parentComp) {\n                    try {\n                        const fn = new Function('ctx', 'with(ctx){return (' + propExpr + ')}');\n                        const ctx = parentComp.getContext(true);\n                        dynamicPropObj = fn(ctx);\n                    }\n                    catch {\n                        dynamicPropObj = null;\n                    }\n                }\n                else {\n                    try {\n                        dynamicPropObj = new Function('return (' + propExpr + ')')();\n                    }\n                    catch {\n                        dynamicPropObj = null;\n                    }\n                }\n                if (dynamicPropObj && typeof dynamicPropObj === 'object')\n                    for (const k in dynamicPropObj)\n                        if (!(k in props))\n                            props[k] = String(dynamicPropObj[k]);\n                el.removeAttribute(attrName('prop'));\n            }\n            let baseData = {};\n            if (def.makeData) {\n                try {\n                    baseData = def.makeData(props) || {};\n                }\n                catch {\n                    baseData = {};\n                }\n            }\n            if (def.data) {\n                for (const k in def.data) {\n                    baseData[k] = def.data[k];\n                }\n            }\n            for (const k in props) {\n                if (!(k in baseData))\n                    baseData[k] = props[k];\n            }\n            baseData.$props = props;\n            let initDef;\n            if (typeof def.init === 'function') {\n                try {\n                    const maybe = def.init(props);\n                    initDef = (maybe && typeof maybe === 'object') ? maybe : undefined;\n                }\n                catch {\n                    initDef = undefined;\n                }\n            }\n            const compDef = {\n                data: baseData,\n                methods: { ...(def.methods || {}), ...(initDef?.methods || {}) },\n                computed: { ...(def.computed || {}), ...(initDef?.computed || {}) },\n                propEffects: { ...(def.propEffects || {}), ...(initDef?.propEffects || {}) },\n                mounted: initDef?.mounted || def.mounted,\n                unmounted: initDef?.unmounted || def.unmounted,\n                beforeMount: initDef?.beforeMount || def.beforeMount,\n                beforeUnmount: initDef?.beforeUnmount || def.beforeUnmount,\n                updated: initDef?.updated || def.updated,\n                destroyed: initDef?.destroyed || def.destroyed,\n                beforeDestroy: initDef?.beforeDestroy || def.beforeDestroy\n            };\n            const comp = this.createComponent(compDef);\n            comp.element = el;\n            const originalChildren = [];\n            while (el.firstChild) {\n                const n = el.firstChild;\n                originalChildren.push(n);\n                el.removeChild(n);\n            }\n            if (def.template) {\n                const applyTemplate = (tpl) => {\n                    el.innerHTML = tpl;\n                    const slots = el.querySelectorAll('slot');\n                    if (slots.length) {\n                        for (const slotEl of slots) {\n                            const name = slotEl.getAttribute('name');\n                            let matched = [];\n                            if (name) {\n                                matched = originalChildren.filter(n => n.nodeType === 1 && n.getAttribute('slot') === name);\n                            }\n                            else {\n                                matched = originalChildren.filter(n => n.nodeType !== 1 || !n.hasAttribute('slot'));\n                            }\n                            if (matched.length) {\n                                const frag = d.createDocumentFragment();\n                                for (const n of matched)\n                                    frag.appendChild(n);\n                                slotEl.parentNode?.replaceChild(frag, slotEl);\n                            }\n                        }\n                    }\n                };\n                const tplVal = def.template;\n                if (typeof tplVal === 'string') {\n                    applyTemplate(tplVal);\n                }\n                else if (typeof tplVal === 'function') {\n                    try {\n                        const res = tplVal();\n                        if (res && typeof res.then === 'function') {\n                            el.innerHTML = '';\n                            res.then(html => { applyTemplate(html || ''); try {\n                                comp._applyAsyncTemplateResolved();\n                            }\n                            catch { } });\n                        }\n                        else {\n                            applyTemplate(String(res || ''));\n                        }\n                    }\n                    catch {\n                        el.innerHTML = '';\n                    }\n                }\n                else if (tplVal && typeof tplVal.then === 'function') {\n                    el.innerHTML = '';\n                    tplVal.then(html => { applyTemplate(html || ''); try {\n                        comp._applyAsyncTemplateResolved();\n                    }\n                    catch { } });\n                }\n            }\n            else {\n                for (const n of originalChildren)\n                    el.appendChild(n);\n            }\n            this._registerElement(el, comp);\n            try {\n                const nested = el.querySelectorAll(`[${attrName('data')}]`);\n                for (const node of nested) {\n                    if (!this._getComponentByElement(node))\n                        this._bindElementAsComponent(node, comp);\n                }\n            }\n            catch { }\n            this._pending.push({ el, comp });\n            if (rawPropExpression && parentComp) {\n                try {\n                    comp._initReactiveProps(rawPropExpression, parentComp);\n                }\n                catch { }\n            }\n            this._processPending();\n        }\n        _getComponentByElement(element) { return this._byEl.get(element); }\n        observe(_element) { }\n        _ensureDelegation(container) {\n            if (this._delegatedRootBound)\n                return;\n            const root = container;\n            const handler = (e) => {\n                let cur = e.target;\n                while (cur && cur !== root.parentElement) {\n                    if (e.cancelBubble)\n                        break;\n                    const map = this._delegated.get(cur);\n                    if (map) {\n                        const list = map.get(e.type);\n                        if (list && list.length) {\n                            for (const h of [...list]) {\n                                try {\n                                    if (h.comp && h.comp.isDestroyed) {\n                                        const i = list.indexOf(h);\n                                        if (i > -1)\n                                            list.splice(i, 1);\n                                        continue;\n                                    }\n                                    if (!h.filter || h.filter(e)) {\n                                        h.run(e);\n                                        if (h.once) {\n                                            const idx = list.indexOf(h);\n                                            if (idx > -1)\n                                                list.splice(idx, 1);\n                                        }\n                                    }\n                                }\n                                catch { }\n                            }\n                        }\n                    }\n                    cur = cur.parentElement;\n                }\n            };\n            const captureEvents = ['keydown', 'keyup'];\n            const bubbleEvents = ['click', 'input', 'change'];\n            for (const ev of captureEvents)\n                root.addEventListener(ev, handler, true);\n            for (const ev of bubbleEvents)\n                root.addEventListener(ev, handler, false);\n            this._delegatedRootBound = true;\n        }\n        _registerDelegated(element, event, entry) {\n            let map = this._delegated.get(element);\n            if (!map) {\n                map = new Map();\n                this._delegated.set(element, map);\n            }\n            let list = map.get(event);\n            if (!list) {\n                list = [];\n                map.set(event, list);\n            }\n            list.push(entry);\n            return () => {\n                try {\n                    const m = this._delegated.get(element);\n                    const l = m?.get(event);\n                    if (!l)\n                        return;\n                    const idx = l.indexOf(entry);\n                    if (idx > -1)\n                        l.splice(idx, 1);\n                }\n                catch { }\n            };\n        }\n    }\n    class ReactiveComponent {\n        attachToParent(parent) {\n            this._parent = parent;\n            parent._addChild(this);\n        }\n        get id() { return this._id; }\n        get framework() { return this._framework; }\n        get element() { return this._element; }\n        set element(el) { this._element = el; }\n        get isBound() { return this._isBound; }\n        set isBound(v) { this._isBound = v; }\n        get isMounted() { return this._isMounted; }\n        set isMounted(v) { this._isMounted = v; }\n        get isDestroyed() { return this._isDestroyed; }\n        set isDestroyed(v) { this._isDestroyed = v; }\n        _addDirective(element, directive) {\n            const existing = this._directives.get(element) || [];\n            existing.push(directive);\n            this._directives.set(element, existing);\n        }\n        constructor(id, def, framework) {\n            this._propUpdateActive = false;\n            this._runningPropEffect = false;\n            this._element = null;\n            this._isBound = false;\n            this._isMounted = false;\n            this._isDestroyed = false;\n            this._beforeMountCalled = false;\n            this._children = [];\n            this._parent = null;\n            this._computed = {};\n            this._propEffects = {};\n            this._computedCache = new Map();\n            this._computedDeps = new Map();\n            this._inverseComputedDeps = new Map();\n            this._isInComputedEvaluation = false;\n            this._isInMethodExecution = false;\n            this._allEffects = new Set();\n            this._hasComputed = false;\n            this._directives = new Map();\n            this._cleanupFunctions = new Set();\n            this._eventListeners = [];\n            this._loopScopes = new WeakMap();\n            this._expressionCache = new Map();\n            this._propertyDependencies = new Map();\n            this._activeEffect = null;\n            this._renderScheduled = false;\n            this._nextTickQueue = [];\n            this._initialClassSets = new WeakMap();\n            this._propParent = null;\n            this._callLifecycleHook = (hookName) => {\n                const hook = this._lifecycle[hookName];\n                if (typeof hook === 'function') {\n                    this._safeExecute(() => this._runWithGlobalInterception(hook, []));\n                }\n            };\n            this._addCleanupFunction = (fn) => {\n                if (typeof fn !== 'function')\n                    return undefined;\n                const wrapper = () => {\n                    try {\n                        fn();\n                    }\n                    catch {\n                        _logErr();\n                    }\n                    try {\n                        this._cleanupFunctions.delete(wrapper);\n                    }\n                    catch { }\n                };\n                this._cleanupFunctions.add(wrapper);\n                return () => { try {\n                    this._cleanupFunctions.delete(wrapper);\n                }\n                catch { } };\n            };\n            this._addEventListenerWithCleanup = (element, event, handler, options) => {\n                element.addEventListener(event, handler, options);\n                this._eventListeners.push({ element, event, handler, options });\n            };\n            this._id = id;\n            this._framework = framework;\n            this._originalMethods = def.methods || {};\n            this._computed = def.computed || {};\n            this._propEffects = def.propEffects || {};\n            this._hasComputed = !!(def.computed && Object.keys(def.computed).length);\n            this._lifecycle = {\n                mounted: def.mounted,\n                unmounted: def.unmounted || def.destroyed,\n                updated: def.updated,\n                beforeMount: def.beforeMount,\n                beforeUnmount: def.beforeUnmount || def.beforeDestroy\n            };\n            this._data = this._createReactiveData(def.data || {});\n            this._methods = this._bindMethods();\n        }\n        callBeforeMount() {\n            if (!this._beforeMountCalled) {\n                this._callLifecycleHook('beforeMount');\n                this._beforeMountCalled = true;\n            }\n        }\n        _onDataChange(_property) {\n            if (this.isBound) {\n                if (FT_C)\n                    this._computedCache.clear();\n                const effectsToRun = new Set();\n                const directDeps = this._propertyDependencies.get(_property);\n                if (directDeps)\n                    for (let i = 0; i < directDeps.length; i++)\n                        effectsToRun.add(directDeps[i]);\n                for (const effect of effectsToRun)\n                    this._safeExecute(effect);\n                if (this._hasComputed || !XTOOL_ENABLE_STATIC_DIRECTIVES) {\n                    this._scheduleRender();\n                }\n                this._callLifecycleHook('updated');\n            }\n        }\n        _bindMethods() {\n            const boundMethods = {};\n            for (const methodName in this._originalMethods) {\n                const originalMethod = this._originalMethods[methodName];\n                boundMethods[methodName] = (...args) => {\n                    const prev = this._isInMethodExecution;\n                    this._isInMethodExecution = true;\n                    try {\n                        return this._safeExecute(() => this._runWithGlobalInterception(originalMethod, args));\n                    }\n                    finally {\n                        this._isInMethodExecution = prev;\n                    }\n                };\n            }\n            return boundMethods;\n        }\n        _getComputedValue(key) {\n            if (!FT_C)\n                return undefined;\n            this._trackDependency(key);\n            if (this._computedCache.has(key))\n                return this._computedCache.get(key);\n            try {\n                const computeFn = this._computed[key];\n                this._isInComputedEvaluation = true;\n                const prev = this._computedDeps.get(key);\n                if (prev) {\n                    for (const dep of prev) {\n                        const set = this._inverseComputedDeps.get(dep);\n                        if (set)\n                            set.delete(key);\n                    }\n                }\n                this._computedDeps.set(key, new Set());\n                const value = computeFn.call(this._createMethodContext());\n                this._isInComputedEvaluation = false;\n                this._computedCache.set(key, value);\n                return value;\n            }\n            catch {\n                this._isInComputedEvaluation = false;\n                return undefined;\n            }\n        }\n        _trackDependency(propKey) {\n            if (!this._activeEffect)\n                return;\n            let deps = this._propertyDependencies.get(propKey);\n            if (!deps) {\n                deps = [];\n                this._propertyDependencies.set(propKey, deps);\n            }\n            if (!deps.includes(this._activeEffect))\n                deps.push(this._activeEffect);\n        }\n        _scheduleRender() {\n            if (this._renderScheduled)\n                return;\n            this._renderScheduled = true;\n            requestAnimationFrame(() => {\n                this._renderScheduled = false;\n                this._render();\n                if (this._nextTickQueue && this._nextTickQueue.length) {\n                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                    for (const fn of q) {\n                        try {\n                            fn();\n                        }\n                        catch { }\n                    }\n                }\n            });\n        }\n        _safeExecute(fn, fallback) {\n            try {\n                return fn();\n            }\n            catch {\n                return fallback;\n            }\n        }\n        bindToElement(element) {\n            if (this._isBound)\n                return;\n            this._element = element;\n            if (!this._beforeMountCalled) {\n                this.callBeforeMount();\n            }\n            this.completeBinding();\n        }\n        getContext(includeComputed = true) {\n            return this._createMethodContext(includeComputed);\n        }\n        _applyAsyncTemplateResolved() {\n            if (!this._element)\n                return;\n            try {\n                this._parseDirectives(this._element);\n            }\n            catch { }\n            this._scheduleRender();\n        }\n        completeBinding() {\n            if (this._isBound || !this._element)\n                return;\n            if (!this._framework._getComponentByElement(this._element))\n                this._framework._registerElement(this._element, this);\n            this._isBound = true;\n            this._isMounted = true;\n            this._parseDirectives(this._element);\n            this._render();\n            this._callLifecycleHook('mounted');\n        }\n        _addChild(child) {\n            if (!this._children.includes(child)) {\n                this._children.push(child);\n            }\n        }\n        _removeChild(child) {\n            const index = this._children.indexOf(child);\n            if (index > -1) {\n                this._children.splice(index, 1);\n            }\n        }\n        _runWithGlobalInterception(fn, args) {\n            try {\n                const src = String(fn);\n                if (!/\\[native code\\]/.test(src)) {\n                    let body = src.trim();\n                    if (!/^function[\\s\\(]/.test(body) && !/^[\\w\\$_][\\w\\d\\$_]*\\s*=>/.test(body) && !/^\\(.*?\\)\\s*=>/.test(body)) {\n                        body = 'function ' + body;\n                    }\n                    const trySrc = 'with(ctx){ const f = (' + body + '); return f.apply(thisArg, argsArray); }';\n                    const wrapper = new Function('thisArg', 'argsArray', 'ctx', trySrc);\n                    return wrapper.call(undefined, this._createMethodContext(), args, this._createContextProxy(undefined, undefined));\n                }\n            }\n            catch {\n            }\n            return fn.apply(this._createMethodContext(), args);\n        }\n        destroy() {\n            const self = this;\n            if (self._isDestroyed)\n                return;\n            self._callLifecycleHook('beforeUnmount');\n            for (const child of self._children) {\n                if (!child.isDestroyed)\n                    child.destroy();\n            }\n            if (self._parent) {\n                self._parent._removeChild(self);\n            }\n            for (const [element, directives] of self._directives) {\n                for (const directive of directives) {\n                    if (directive.type === 'custom' && directive.customDirective?.unbind) {\n                        try {\n                            directive.customDirective.unbind(element, self);\n                        }\n                        catch {\n                            _logErr();\n                        }\n                    }\n                }\n            }\n            self._directives.clear();\n            for (const { element, event, handler, options } of self._eventListeners) {\n                element.removeEventListener(event, handler, options);\n            }\n            self._eventListeners = [];\n            for (const cleanup of Array.from(self._cleanupFunctions)) {\n                try {\n                    cleanup();\n                }\n                catch {\n                    _logErr();\n                }\n            }\n            self._cleanupFunctions.clear();\n            self._computedCache.clear();\n            self._expressionCache.clear();\n            self._propertyDependencies.clear();\n            if (self._propParent && self._propEffect) {\n                for (const deps of self._propParent._propertyDependencies.values()) {\n                    const idx = deps.indexOf(self._propEffect);\n                    if (idx > -1)\n                        deps.splice(idx, 1);\n                }\n            }\n            if (self._element)\n                self._framework._unregisterElement(self._element);\n            self._callLifecycleHook('unmounted');\n            self._isDestroyed = true;\n            self._isMounted = false;\n            self._isBound = false;\n            self._children = [];\n            self._parent = null;\n            this._deepReactiveCache = new WeakMap;\n            self._element = null;\n            queueMicrotask(() => self._framework._unregisterComponent(self._id));\n        }\n        _initReactiveProps(expr, parent) {\n            if (!expr || !parent)\n                return;\n            this._propParent = parent;\n            let evalFn;\n            try {\n                evalFn = new Function('ctx', 'with(ctx){return (' + expr + ')}');\n            }\n            catch {\n                return;\n            }\n            const update = () => {\n                parent._activeEffect = update;\n                let obj;\n                try {\n                    const ctx = parent.getContext(true);\n                    obj = evalFn(ctx);\n                }\n                catch {\n                    obj = null;\n                }\n                parent._activeEffect = null;\n                if (obj && typeof obj === 'object') {\n                    this._data.$props = this._data.$props || {};\n                    this._propUpdateActive = true;\n                    for (const k in obj) {\n                        const v = obj[k];\n                        if (this._data[k] !== v)\n                            this._data[k] = v;\n                    }\n                    this._propUpdateActive = false;\n                }\n            };\n            this._propEffect = update;\n            update();\n        }\n        _parseDirectives(element) {\n            const self = this;\n            let processedElements = 0;\n            const processElement = (el, isRoot = false) => {\n                if (!isRoot && (el.hasAttribute(attrName('data')) || this._framework._getComponentByElement(el))) {\n                    return false;\n                }\n                const isComponentTag = el[STR_TAGNAME] === 'COMPONENT';\n                const directives = [];\n                let hasTextOrHtml = false;\n                let forAttr = null;\n                for (const a of el.attributes) {\n                    const n = a.name;\n                    if (n.startsWith(PFX + '-') || n.startsWith(PFX + ':')) {\n                        directives.push(a);\n                        if (!hasTextOrHtml && (n === attrName('text') || n === attrName('html')))\n                            hasTextOrHtml = true;\n                        if (!forAttr && n === attrName('for'))\n                            forAttr = a;\n                    }\n                }\n                if (directives.length > 0) {\n                    processedElements++;\n                    if (forAttr) {\n                        self._bindDirective(el, forAttr.name, forAttr.value);\n                        return false;\n                    }\n                    for (const attr of directives)\n                        self._bindDirective(el, attr.name, attr.value);\n                }\n                if (FT_TI && !hasTextOrHtml)\n                    self._bindTextInterpolationsIn(el);\n                return isRoot || !isComponentTag;\n            };\n            processElement(element, true);\n            self._walkElements(element, processElement);\n        }\n        _bindTextInterpolationsIn(el) {\n            const nodes = Array.from(el.childNodes);\n            for (const node of nodes) {\n                if (node.nodeType !== Node.TEXT_NODE)\n                    continue;\n                const textNode = node;\n                const raw = textNode.nodeValue || '';\n                if (textNode.__x_tool_ti || raw.indexOf('{{') === -1)\n                    continue;\n                const parentTag = (textNode.parentElement?.tagName || '').toLowerCase();\n                const inCode = parentTag === 'code' || parentTag === 'pre';\n                const segs = [];\n                let i = 0;\n                while (i < raw.length) {\n                    const open = raw.indexOf('{{', i);\n                    if (open === -1) {\n                        segs.push({ literal: raw.slice(i) });\n                        break;\n                    }\n                    let bs = 0;\n                    for (let p = open - 1; p >= 0 && raw.charCodeAt(p) === 92; p--)\n                        bs++;\n                    if (bs > 0) {\n                        const prefixStart = i;\n                        const prefixEnd = open - bs;\n                        if (prefixEnd > prefixStart)\n                            segs.push({ literal: raw.slice(prefixStart, prefixEnd) });\n                        if (bs > 1)\n                            segs.push({ literal: '\\\\'.repeat(bs - 1) });\n                        const close = raw.indexOf('}}', open + 2);\n                        if (close === -1) {\n                            segs.push({ literal: raw.slice(open, raw.length) });\n                            i = raw.length;\n                            break;\n                        }\n                        segs.push({ literal: raw.slice(open, close + 2) });\n                        i = close + 2;\n                        continue;\n                    }\n                    else {\n                        if (open > i)\n                            segs.push({ literal: raw.slice(i, open) });\n                        const close = raw.indexOf('}}', open + 2);\n                        if (close === -1) {\n                            segs.push({ literal: raw.slice(open) });\n                            i = raw.length;\n                            break;\n                        }\n                        const expr = raw.slice(open + 2, close).trim();\n                        if (expr)\n                            segs.push({ expr });\n                        else\n                            segs.push({ literal: '' });\n                        i = close + 2;\n                        continue;\n                    }\n                }\n                const hasExpr = segs.some(s => s.expr);\n                const hasEscaped = segs.some(s => s.literal && s.literal.includes('{{'));\n                if (!hasExpr && !hasEscaped)\n                    continue;\n                textNode.__x_tool_ti = true;\n                const evaluators = hasExpr && !inCode ? segs.filter(s => s.expr).map(s => this._createElementEvaluator(s.expr, el)) : [];\n                let exprIndex = 0;\n                const update = () => {\n                    exprIndex = 0;\n                    let out = '';\n                    for (const s of segs) {\n                        if (s.literal != null) {\n                            out += s.literal;\n                        }\n                        else if (s.expr) {\n                            if (inCode) {\n                                out += '{{ ' + s.expr + ' }}';\n                            }\n                            else {\n                                const val = evaluators[exprIndex++]();\n                                out += (val == null ? '' : String(val));\n                            }\n                        }\n                    }\n                    if (textNode.textContent !== out)\n                        textNode.textContent = out;\n                };\n                const dirInfo = { type: 'text-interpolation', expression: raw, update: undefined };\n                this._addDirective(el, dirInfo);\n                const effect = this._createEffect(update, dirInfo);\n                dirInfo.update = effect;\n            }\n        }\n        _walkElements(parent, processor) {\n            let child = parent.firstElementChild;\n            while (child) {\n                const next = child.nextElementSibling;\n                if (processor(child))\n                    this._walkElements(child, processor);\n                child = next;\n            }\n        }\n        _bindDirective(element, directiveName, expression) {\n            const self = this;\n            const isShortBind = directiveName.startsWith(PFX + ':');\n            const type = directiveName.slice(PFX.length + 1);\n            if (isShortBind || type === 'class' || type === STR_STYLE) {\n                element.removeAttribute(directiveName);\n                return self._bindAttributeDirective(element, type, expression);\n            }\n            if (type === 'text' || type === 'html' || type === 'show') {\n                element.removeAttribute(directiveName);\n                return self._bindSimpleDirective(element, expression, type);\n            }\n            const handled = type === 'model' ? (element.removeAttribute(directiveName), self._bindModelDirective(element, expression), true)\n                : type === 'if' ? (element.removeAttribute(directiveName), self._bindIfDirective(element, expression), true)\n                    : type === 'for' ? (element.removeAttribute(directiveName), self._bindForDirective(element, expression), true)\n                        : false;\n            if (handled)\n                return;\n            if (type.indexOf(':') > -1) {\n                const [prefix, rest] = type.split(':', 2);\n                const [suffix, ...mods] = rest.split('.');\n                const modifiers = mods.reduce((acc, m) => { if (m)\n                    acc[m] = true; return acc; }, {});\n                if (prefix === 'on') {\n                    element.removeAttribute(directiveName);\n                    const customDirective = self.framework._getCustomDirective(suffix);\n                    return customDirective\n                        ? self._bindCustomDirective(element, suffix, expression, customDirective, modifiers)\n                        : self._bindEventDirective(element, suffix, expression, modifiers);\n                }\n                element.removeAttribute(directiveName);\n                return self._bindAttributeDirective(element, suffix, expression);\n            }\n        }\n        _createEffect(updateFn, directiveRef) {\n            const effect = () => {\n                this._activeEffect = effect;\n                try {\n                    updateFn();\n                }\n                finally {\n                    this._activeEffect = null;\n                }\n            };\n            effect();\n            this._allEffects.add(effect);\n            if (XTOOL_ENABLE_STATIC_DIRECTIVES && directiveRef && directiveRef._static === undefined) {\n                let found = false;\n                for (const deps of this._propertyDependencies.values()) {\n                    if (deps.includes(effect)) {\n                        found = true;\n                        break;\n                    }\n                }\n                directiveRef._static = !found;\n            }\n            return effect;\n        }\n        _bindSimpleDirective(element, expression, type) {\n            if (type === 'class' || type === STR_STYLE) {\n                return this._bindAttributeDirective(element, type, expression);\n            }\n            const evaluator = this._createElementEvaluator(expression, element);\n            let originalDisplay;\n            if (type === 'show') {\n                const el = element;\n                originalDisplay = el.style[STR_DISPLAY] !== STR_NONE ? el.style[STR_DISPLAY] : undefined;\n            }\n            let _prevShown = undefined;\n            const update = () => {\n                const value = evaluator();\n                const el = element;\n                switch (type) {\n                    case 'text':\n                        el.textContent = String(value);\n                        break;\n                    case 'html':\n                        el.innerHTML = String(value || '');\n                        break;\n                    case 'show':\n                        const next = !!value;\n                        if (_prevShown === next)\n                            return;\n                        _prevShown = next;\n                        el.style[STR_DISPLAY] = next ? (originalDisplay || '') : STR_NONE;\n                        break;\n                }\n            };\n            const dirInfo = { type, expression, update: undefined, originalDisplay };\n            this._addDirective(element, dirInfo);\n            const effect = this._createEffect(update, dirInfo);\n            dirInfo.update = effect;\n        }\n        _bindModelDirective(element, property) {\n            const isCheckbox = element.type === 'checkbox';\n            const isNumeric = element.type === 'number' || element.type === 'range';\n            const isMultiSelect = element.tagName === 'SELECT' && element.multiple === true;\n            if (!Reflect.has(this._data, property)) {\n                Reflect.defineProperty(this._data, property, {\n                    'configurable': true,\n                    'enumerable': true,\n                    'writable': true\n                });\n            }\n            const getValueEvaluator = this._createElementEvaluator(property, element);\n            const setValueEvaluator = this._createEvaluator(`${property} = $value`, true);\n            const inferCheckboxValue = () => {\n                if (element.hasAttribute('value'))\n                    return element.value;\n                const loopScope = this._collectLoopScope(element);\n                if (loopScope) {\n                    const keys = Object.keys(loopScope);\n                    if (keys.length === 1)\n                        return loopScope[keys[0]];\n                }\n                return element.value;\n            };\n            const checkboxValue = isCheckbox ? inferCheckboxValue() : undefined;\n            const getInputValue = () => {\n                if (isCheckbox) {\n                    if (Array.isArray(getValueEvaluator()) && checkboxValue !== undefined) {\n                        return element.checked ? checkboxValue : undefined;\n                    }\n                    if (element.hasAttribute('value'))\n                        return element.checked ? element.value : undefined;\n                    return element.checked;\n                }\n                if (isMultiSelect) {\n                    const sel = element;\n                    const values = [];\n                    for (let i = 0; i < sel.options.length; i++) {\n                        const opt = sel.options[i];\n                        if (opt.selected)\n                            values.push(opt.value);\n                    }\n                    return values;\n                }\n                return isNumeric ? parseFloat(element.value) || 0 : element.value;\n            };\n            const setInputValue = (value) => {\n                if (isCheckbox) {\n                    if (Array.isArray(value)) {\n                        const member = element.hasAttribute('value') ? element.value : checkboxValue;\n                        element.checked = member != null ? value.includes(member) : false;\n                    }\n                    else {\n                        element.checked = !!value;\n                    }\n                    return;\n                }\n                if (isMultiSelect) {\n                    const sel = element;\n                    const arr = Array.isArray(value) ? value : [];\n                    for (let i = 0; i < sel.options.length; i++) {\n                        const opt = sel.options[i];\n                        opt.selected = arr.includes(opt.value);\n                    }\n                    return;\n                }\n                element.value = String(value ?? (isNumeric ? 0 : ''));\n            };\n            this._createEffect(() => setInputValue(getValueEvaluator()));\n            const ctx = this._createContextProxy(undefined, element);\n            const updateData = () => {\n                const raw = getInputValue();\n                const currentVal = this._safeExecute(() => getValueEvaluator());\n                if (isCheckbox && Array.isArray(currentVal)) {\n                    const arr = currentVal;\n                    const member = element.hasAttribute('value') ? element.value : checkboxValue;\n                    if (member !== undefined) {\n                        const idx = arr.indexOf(member);\n                        if (element.checked) {\n                            if (idx === -1)\n                                arr.push(member);\n                        }\n                        else if (idx > -1) {\n                            arr.splice(idx, 1);\n                        }\n                    }\n                }\n                else if (isMultiSelect && Array.isArray(currentVal)) {\n                    const arr = currentVal;\n                    arr.splice(0, arr.length);\n                    raw.forEach(v => arr.push(v));\n                }\n                else {\n                    ctx.$value = raw;\n                    this._safeExecute(() => { setValueEvaluator.call(this._createMethodContext(), ctx); });\n                }\n            };\n            const t = element.type;\n            const eventType = (element[STR_TAGNAME] === 'SELECT' || t === 'checkbox' || t === 'radio' || t === 'file') ? 'change' : 'input';\n            this._addEventListenerWithCleanup(element, eventType, updateData);\n            this._addDirective(element, { type: 'model', property });\n        }\n        _bindIfDirective(element, expression) {\n            const self = this;\n            const placeholder = d.createComment('x-if');\n            element.parentNode?.insertBefore(placeholder, element);\n            element.__x_if_anchorParent = placeholder.parentElement || null;\n            const branches = [];\n            const makeActualElement = (el) => {\n                if (el[STR_TAGNAME] === STR_TEMPLATE) {\n                    const wrapper = d.createElement('div');\n                    wrapper.style[STR_DISPLAY] = STR_CONTENTS;\n                    wrapper.appendChild(el.content.cloneNode(true));\n                    return { el: wrapper, isTemplate: true };\n                }\n                return { el: el, isTemplate: false };\n            };\n            const first = makeActualElement(element);\n            const firstEval = self._createElementEvaluator(expression, element);\n            branches.push({ el: first.el, test: firstEval, isTemplate: first.isTemplate });\n            if (!first.isTemplate)\n                first.el.__x_tool_bound = true;\n            const originalNodes = [element];\n            if (FT_IFB) {\n                if (FT_IFB) {\n                    let sib = element.nextElementSibling;\n                    while (sib) {\n                        const isElse = sib.hasAttribute('x-else');\n                        const isElseIf = sib.hasAttribute('x-else-if');\n                        if (!isElse && !isElseIf)\n                            break;\n                        if (sib.hasAttribute('x-else-if')) {\n                            const attr = sib.getAttribute('x-else-if') || '';\n                            const branch = makeActualElement(sib);\n                            const evalFn = self._createElementEvaluator((attr || '').trim(), sib);\n                            branches.push({ el: branch.el, test: evalFn, isTemplate: branch.isTemplate });\n                            if (!branch.isTemplate)\n                                branch.el.__x_tool_bound = true;\n                        }\n                        else {\n                            const branch = makeActualElement(sib);\n                            branches.push({ el: branch.el, test: null, isTemplate: branch.isTemplate });\n                            if (!branch.isTemplate)\n                                branch.el.__x_tool_bound = true;\n                        }\n                        sib.removeAttribute('x-else');\n                        sib.removeAttribute('x-else-if');\n                        originalNodes.push(sib);\n                        sib = sib.nextElementSibling;\n                    }\n                }\n            }\n            let active = -1;\n            for (const orig of originalNodes) {\n                if (orig.parentNode)\n                    orig.parentNode.removeChild(orig);\n            }\n            const mountBranch = (idx) => {\n                if (idx < 0)\n                    return;\n                const b = branches[idx];\n                if (!b.el.__x_tool_bound) {\n                    self._parseDirectives(b.el);\n                    b.el.__x_tool_bound = true;\n                }\n                element.__x_if_current?.parentNode?.removeChild(element.__x_if_current);\n                if (!b.el.parentNode) {\n                    placeholder.parentNode?.insertBefore(b.el, placeholder.nextSibling);\n                }\n                element.__x_if_current = b.el;\n                active = idx;\n            };\n            const unmountBranch = (idx, cb) => {\n                if (idx < 0) {\n                    if (cb)\n                        cb();\n                    return;\n                }\n                const b = branches[idx];\n                if (b.el.parentNode) {\n                    if (b.el.parentNode)\n                        b.el.parentNode.removeChild(b.el);\n                    if (cb)\n                        cb();\n                }\n                else if (cb)\n                    cb();\n                active = -1;\n            };\n            const update = () => {\n                let next = -1;\n                for (let i = 0; i < branches[STR_LENGTH]; i++) {\n                    const b = branches[i];\n                    const pass = b.test ? !!b.test() : true;\n                    if (pass) {\n                        next = i;\n                        break;\n                    }\n                }\n                if (next === active)\n                    return;\n                if (active !== -1) {\n                    unmountBranch(active, () => mountBranch(next));\n                }\n                else {\n                    mountBranch(next);\n                }\n            };\n            const effect = self._createEffect(update);\n            self._addDirective(element, { type: 'if', expression, update: effect });\n        }\n        _bindEventDirective(element, eventName, expression, modifiers) {\n            const self = this;\n            const trimmed = (expression || '').trim();\n            const arrow = self._extractArrowFunction(trimmed);\n            const opts = modifiers ? {\n                once: !!modifiers.once,\n                passive: !!modifiers.passive,\n                capture: !!modifiers.capture,\n            } : undefined;\n            const onlySelf = !!modifiers?.self;\n            const shouldPrevent = !!modifiers?.prevent;\n            const shouldStop = !!modifiers?.stop;\n            const isOutside = !!modifiers?.outside;\n            const deferExec = !!modifiers?.defer;\n            const keyAliasMap = {\n                enter: ['enter'],\n                esc: ['escape', 'esc'],\n                escape: ['escape', 'esc'],\n                space: [' ', 'space', 'spacebar'],\n                tab: ['tab'],\n                backspace: ['backspace'],\n                delete: ['delete', 'del'],\n                del: ['delete', 'del'],\n                arrowup: ['arrowup', 'up'],\n                arrowdown: ['arrowdown', 'down'],\n                arrowleft: ['arrowleft', 'left'],\n                arrowright: ['arrowright', 'right'],\n                home: ['home'],\n                end: ['end'],\n                pageup: ['pageup'],\n                pagedown: ['pagedown']\n            };\n            const comboRequirements = {\n                ctrl: !!modifiers?.ctrl,\n                alt: !!modifiers?.alt,\n                shift: !!modifiers?.shift,\n                meta: !!modifiers?.meta,\n            };\n            const buttonMap = { left: 0, middle: 1, right: 2 };\n            const touchSingle = !!modifiers?.single;\n            const touchMulti = !!modifiers?.multi;\n            const modifierKeys = modifiers ? _Okeys(modifiers) : [];\n            const allowedKeys = [];\n            for (const m of modifierKeys) {\n                const aliases = keyAliasMap[m.toLowerCase()];\n                if (aliases)\n                    allowedKeys.push(...aliases);\n            }\n            const allowedButtons = [];\n            for (const m of modifierKeys) {\n                const btn = buttonMap[m.toLowerCase()];\n                if (btn !== undefined)\n                    allowedButtons.push(btn);\n            }\n            const needKeyCheck = allowedKeys.length > 0 || comboRequirements.ctrl || comboRequirements.alt || comboRequirements.shift || comboRequirements.meta;\n            const needButtonCheck = allowedButtons.length > 0;\n            const needTouchCheck = touchSingle || touchMulti;\n            const passesFilters = (event) => {\n                const path = event.composedPath ? event.composedPath() : null;\n                const tgt = (path && path.length ? path[0] : event.target);\n                if (isOutside) {\n                    if (!tgt)\n                        return false;\n                    if (element instanceof Node && (element === tgt || element.contains(tgt)))\n                        return false;\n                }\n                if (onlySelf && event.target !== element)\n                    return false;\n                if (needTouchCheck) {\n                    if (event instanceof TouchEvent) {\n                        const tCount = event.touches.length;\n                        if (touchSingle && tCount !== 1)\n                            return false;\n                        if (touchMulti && tCount < 2)\n                            return false;\n                    }\n                    else\n                        return false;\n                }\n                if (needButtonCheck) {\n                    if (event instanceof MouseEvent) {\n                        if (!allowedButtons.includes(event.button))\n                            return false;\n                    }\n                    else\n                        return false;\n                }\n                if (needKeyCheck) {\n                    if (!(event instanceof KeyboardEvent))\n                        return false;\n                    const k = (event.key || '').toLowerCase();\n                    if (allowedKeys.length > 0 && !allowedKeys.includes(k))\n                        return false;\n                    if (comboRequirements.ctrl && !event.ctrlKey)\n                        return false;\n                    if (comboRequirements.alt && !event.altKey)\n                        return false;\n                    if (comboRequirements.shift && !event.shiftKey)\n                        return false;\n                    if (comboRequirements.meta && !event.metaKey)\n                        return false;\n                }\n                return true;\n            };\n            const hasExpr = !!trimmed;\n            let runExpr = null;\n            const thisCtx = self._createMethodContext();\n            if (arrow) {\n                const compiledArrow = self._compileArrowForEvent(arrow.paramsList, arrow.body, arrow.isBlock);\n                const mapArgs = arrow.paramsList.length\n                    ? (event) => arrow.paramsList.map((_, idx) => (idx === 0 ? event : idx === 1 ? element : undefined))\n                    : () => [];\n                runExpr = (event) => {\n                    const ctx = self._createContextProxy(event, element);\n                    compiledArrow.call(thisCtx, ctx, ...mapArgs(event));\n                };\n            }\n            else if (hasExpr) {\n                const isStatement = trimmed.includes(';');\n                const executor = self._createEvaluator(trimmed, isStatement);\n                runExpr = (event) => {\n                    const ctx = self._createContextProxy(event, element);\n                    const result = executor.call(thisCtx, ctx);\n                    if (typeof result === 'function')\n                        result.call(thisCtx, event);\n                };\n            }\n            const createEventHandler = (event) => {\n                if (!passesFilters(event))\n                    return;\n                if (shouldPrevent && typeof event.preventDefault === 'function')\n                    event.preventDefault();\n                if (shouldStop && typeof event.stopPropagation === 'function')\n                    event.stopPropagation();\n                if (!runExpr)\n                    return;\n                if (deferExec && typeof queueMicrotask === 'function') {\n                    const ev = event;\n                    queueMicrotask(() => self._safeExecute(() => runExpr(ev)));\n                    return;\n                }\n                self._safeExecute(() => runExpr(event));\n            };\n            const cfg = this.framework._getConfig();\n            const canDelegate = !!cfg.delegate && EV_DELEGATED.includes(eventName);\n            if (!isOutside && canDelegate) {\n                const remover = this.framework._registerDelegated(element, eventName, { filter: (e) => passesFilters(e), run: (e) => createEventHandler(e), once: !!modifiers?.once, comp: this });\n                this._addCleanupFunction(remover);\n            }\n            else {\n                const target = isOutside ? (element?.ownerDocument || d || document) : element;\n                self._addEventListenerWithCleanup(target, eventName, createEventHandler, opts);\n            }\n        }\n        _createEvaluator(expression, isStatement = false) {\n            const key = `${isStatement ? 's' : 'r'}:${expression}`;\n            let fn = this._expressionCache.get(key);\n            if (!fn) {\n                fn = new Function('ctx', `with(ctx){${isStatement ? expression : `return (${expression})`}}`);\n                this._expressionCache.set(key, fn);\n            }\n            return fn;\n        }\n        _createElementEvaluator(expression, element) {\n            const self = this;\n            const compiled = self._createEvaluator(expression);\n            return () => this._safeExecute(() => compiled.call(self._createMethodContext(), self._createContextProxy(undefined, element)));\n        }\n        _extractArrowFunction(expression) {\n            let m = expression.match(/^\\s*\\(\\s*([^)]*?)\\s*\\)\\s*=>\\s*([\\s\\S]+)$/);\n            if (!m)\n                m = expression.match(/^\\s*([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*=>\\s*([\\s\\S]+)$/);\n            if (!m)\n                return null;\n            const params = (m[1] || '')\n                .split(',')\n                .map(p => p.trim())\n                .filter(Boolean);\n            const body = (m[2] || '').trim();\n            const isBlock = body.startsWith('{') && body.endsWith('}');\n            const finalBody = isBlock ? body.slice(1, -1) : body;\n            return { paramsList: params, body: finalBody, isBlock };\n        }\n        _compileArrowForEvent(params, body, isBlock) {\n            const content = isBlock ? body : 'return ( ' + body + ' );';\n            return new Function('ctx', ...params, 'with(ctx){ ' + content + ' }');\n        }\n        _wrapData(data, parentKey) {\n            if (!(Object.getPrototypeOf(data) === Object.prototype || ARRAY_ISARRAY(data)))\n                return data;\n            const self = this;\n            if (!this._deepReactiveCache)\n                this._deepReactiveCache = new WeakMap();\n            if (this._deepReactiveCache.has(data))\n                return this._deepReactiveCache.get(data);\n            const proxy = new Proxy(data, {\n                get: (target, p, receiver) => {\n                    if (ARRAY_ISARRAY(target)) {\n                        if (p === Symbol.iterator) {\n                            self._trackDependency(parentKey);\n                            return Reflect.get(target, p, receiver);\n                        }\n                        if (p === 'length' || (typeof p === 'string' && /^\\d+$/.test(p))) {\n                            self._trackDependency(parentKey);\n                        }\n                    }\n                    else {\n                        self._trackDependency(parentKey);\n                    }\n                    const value = Reflect.get(target, p, receiver);\n                    if (ARRAY_ISARRAY(target) && typeof value === 'function' && ['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse', 'copyWithin', 'fill'].includes(p)) {\n                        return function (...args) {\n                            const arr = target;\n                            const beforeLen = arr.length;\n                            const beforeFirst = arr[0];\n                            const beforeLast = arr[beforeLen - 1];\n                            const result = value.apply(target, args);\n                            if (arr.length !== beforeLen || arr[0] !== beforeFirst || arr[arr.length - 1] !== beforeLast) {\n                                self._onDataChange(parentKey);\n                            }\n                            return result;\n                        };\n                    }\n                    const type = typeof value;\n                    if (value && type === 'object') {\n                        return self._wrapData(value, parentKey);\n                    }\n                    return value;\n                },\n                ownKeys: (target) => { return Reflect.ownKeys(target); },\n                has: (target, key) => { return Reflect.has(target, key); },\n                set: (target, p, value) => {\n                    if (self._isDestroyed)\n                        return true;\n                    if (typeof p === 'symbol')\n                        return true;\n                    const had = Reflect.has(target, p);\n                    const oldValue = had ? Reflect.get(target, p) : undefined;\n                    if (value && typeof value === 'object') {\n                        self._wrapData(value, parentKey);\n                    }\n                    if (!had) {\n                        try {\n                            Reflect.defineProperty(target, p, {\n                                configurable: true,\n                                enumerable: true,\n                                writable: true,\n                                value\n                            });\n                        }\n                        catch {\n                            Reflect.set(target, p, value);\n                        }\n                        self._onDataChange(parentKey);\n                        return true;\n                    }\n                    if (oldValue === value)\n                        return true;\n                    Reflect.set(target, p, value);\n                    self._onDataChange(parentKey);\n                    return true;\n                },\n                deleteProperty: (target, p) => Reflect.deleteProperty(target, p)\n            });\n            this._deepReactiveCache.set(data, proxy);\n            return proxy;\n        }\n        _createReactiveData(data) {\n            const self = this;\n            return new Proxy(data, {\n                get: (target, property, receiver) => {\n                    const value = Reflect.get(target, property, receiver);\n                    if (property === Symbol.iterator)\n                        return value;\n                    if (typeof property !== 'symbol') {\n                        self._trackDependency(property);\n                    }\n                    if (value && typeof value == 'object') {\n                        return self._wrapData(value, property);\n                    }\n                    return value;\n                },\n                ownKeys: (target) => Reflect.ownKeys(target),\n                has: (target, key) => Reflect.has(target, key),\n                set: (target, property, value, receiver) => {\n                    if (self._isDestroyed)\n                        return true;\n                    if (property === Symbol.iterator && ARRAY_ISARRAY(target))\n                        return value;\n                    const oldValue = Reflect.get(target, property);\n                    if (oldValue === value)\n                        return true;\n                    const had = Reflect.has(target, property);\n                    if (!had) {\n                        try {\n                            Reflect.defineProperty(target, property, {\n                                configurable: true,\n                                enumerable: true,\n                                writable: true,\n                                value\n                            });\n                        }\n                        catch {\n                            Reflect.set(target, property, value, receiver);\n                        }\n                    }\n                    else {\n                        Reflect.set(target, property, value, receiver);\n                    }\n                    this._onDataChange(property);\n                    if (this._propUpdateActive && property !== '$props') {\n                        const pc = target.$props;\n                        if (pc)\n                            pc[property] = value;\n                        const eff = this._propEffects[property];\n                        if (eff && !this._runningPropEffect) {\n                            this._runningPropEffect = true;\n                            this._safeExecute(() => eff.call(this._createMethodContext(), value, oldValue));\n                            this._runningPropEffect = false;\n                        }\n                    }\n                    return true;\n                }\n            });\n        }\n        _createMethodContext(_includeComputed = true) {\n            const specials = {\n                '$log': (..._args) => { },\n                '$destroy': () => this.destroy(),\n                '$forceUpdate': () => this._scheduleRender(),\n                '$addCleanupFunction': (fn) => this._addCleanupFunction(fn),\n                '$nextTick': (cb) => {\n                    if (cb) {\n                        this._nextTickQueue.push(cb);\n                        if (!this._renderScheduled)\n                            queueMicrotask(() => {\n                                if (!this._renderScheduled && this._nextTickQueue.length) {\n                                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                                    for (const fn of q) {\n                                        try {\n                                            fn();\n                                        }\n                                        catch { }\n                                    }\n                                }\n                            });\n                        return;\n                    }\n                    return new Promise(resolve => {\n                        this._nextTickQueue.push(() => resolve());\n                        if (!this._renderScheduled)\n                            queueMicrotask(() => {\n                                if (!this._renderScheduled && this._nextTickQueue.length) {\n                                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                                    for (const fn of q) {\n                                        try {\n                                            fn();\n                                        }\n                                        catch { }\n                                    }\n                                }\n                            });\n                    });\n                },\n                '$el': this._element,\n                '$id': this._id,\n                '$isMounted': this._isMounted,\n                '$isDestroyed': this._isDestroyed,\n                '$parent': this._parent,\n                '$children': this._children,\n                '$mutate': (fn) => {\n                    const prevMethod = this._isInMethodExecution;\n                    const prevComputed = this._isInComputedEvaluation;\n                    this._isInMethodExecution = false;\n                    this._isInComputedEvaluation = false;\n                    try {\n                        return typeof fn === 'function' ? fn() : undefined;\n                    }\n                    finally {\n                        this._isInMethodExecution = prevMethod;\n                        this._isInComputedEvaluation = prevComputed;\n                        this._scheduleRender();\n                    }\n                }\n            };\n            return new Proxy(this._data, {\n                get: (target, propStr) => {\n                    if (propStr in target) {\n                        this._trackDependency(propStr);\n                        const v = target[propStr];\n                        return v;\n                    }\n                    if (FT_C && (propStr in this._computed))\n                        return this._getComputedValue(propStr);\n                    if (propStr in specials)\n                        return specials[propStr];\n                    return this._methods[propStr];\n                },\n                set: (_target, propStr, value) => {\n                    if (this._isInComputedEvaluation) {\n                        if (typeof console !== 'undefined' && console.warn)\n                            console.warn(`Ignored mutation of '${String(propStr)}' inside ${this._isInComputedEvaluation ? 'computed' : 'method'}; wrap in $mutate(()=>{ ... }) to apply.`);\n                        return true;\n                    }\n                    this._data[propStr] = value;\n                    return true;\n                }\n            });\n        }\n        _createContextProxy(event, targetElement) {\n            const component = this;\n            const mergedScope = targetElement ? this._collectLoopScope(targetElement) : null;\n            const scopeKeys = mergedScope ? new Set(_Okeys(mergedScope)) : new Set();\n            const gWindow = (typeof window !== 'undefined' ? window : undefined);\n            const gDocument = (typeof document !== 'undefined' ? document : undefined);\n            const cfg = this.framework._getConfig();\n            const sandbox = !!cfg.sandboxExpressions;\n            const allow = new Set((cfg.allowGlobals || []).map(s => String(s)));\n            const wrapTarget = (t) => {\n                if (!t)\n                    return t;\n                const hasAdd = typeof t.addEventListener === 'function';\n                if (!hasAdd)\n                    return t;\n                const handlerMap = new WeakMap();\n                const makeKey = (event, options) => {\n                    try {\n                        return event + '|' + (options === undefined ? '' : (typeof options === 'object' ? JSON.stringify(options) : String(options)));\n                    }\n                    catch {\n                        return event + '|';\n                    }\n                };\n                return new Proxy(t, {\n                    get(target, prop, receiver) {\n                        if (prop === 'addEventListener') {\n                            return function (event, handler, options) {\n                                target.addEventListener(event, handler, options);\n                                const remover = component._addCleanupFunction(() => { try {\n                                    target.removeEventListener(event, handler, options);\n                                }\n                                catch { } });\n                                try {\n                                    if (typeof handler === 'function' && remover) {\n                                        let m = handlerMap.get(handler);\n                                        if (!m) {\n                                            m = new Map();\n                                            handlerMap.set(handler, m);\n                                        }\n                                        m.set(makeKey(event, options), remover);\n                                    }\n                                }\n                                catch { }\n                            };\n                        }\n                        if (prop === 'removeEventListener') {\n                            return function (event, handler, options) {\n                                try {\n                                    target.removeEventListener(event, handler, options);\n                                }\n                                catch { }\n                                try {\n                                    if (typeof handler === 'function') {\n                                        const m = handlerMap.get(handler);\n                                        if (m) {\n                                            const key = makeKey(event, options);\n                                            const rem = m.get(key);\n                                            if (rem) {\n                                                try {\n                                                    rem();\n                                                }\n                                                catch { }\n                                                ;\n                                                m.delete(key);\n                                            }\n                                            if (m.size === 0)\n                                                handlerMap.delete(handler);\n                                        }\n                                    }\n                                }\n                                catch { }\n                            };\n                        }\n                        if (prop === 'querySelector') {\n                            return function (sel) { const res = target.querySelector(sel); return wrapTarget(res); };\n                        }\n                        if (prop === 'querySelectorAll') {\n                            return function (sel) { const list = target.querySelectorAll(sel); return Array.from(list).map(wrapTarget); };\n                        }\n                        if (prop === 'getElementById') {\n                            return function (id) { const res = target.getElementById(id); return wrapTarget(res); };\n                        }\n                        if (prop === 'document') {\n                            const doc = target.document;\n                            return wrapTarget(doc) || doc;\n                        }\n                        if (prop === 'body' && target === gDocument) {\n                            const b = target.body;\n                            return wrapTarget(b) || b;\n                        }\n                        if (prop === 'defaultView' && target === gDocument) {\n                            const w = target.defaultView;\n                            return wrapTarget(w) || w;\n                        }\n                        return Reflect.get(target, prop, receiver);\n                    }\n                });\n            };\n            const _timeoutRemovers = new Map();\n            const _intervalRemovers = new Map();\n            const _rafRemovers = new Map();\n            const ctxSetTimeout = (fn, ms, ...args) => {\n                const id = gWindow?.setTimeout?.(fn, ms, ...args);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.clearTimeout?.(id);\n                    }\n                    catch { } });\n                    _timeoutRemovers.set(id, remover);\n                }\n                return id;\n            };\n            const ctxSetInterval = (fn, ms, ...args) => {\n                const id = gWindow?.setInterval?.(fn, ms, ...args);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.clearInterval?.(id);\n                    }\n                    catch { } });\n                    _intervalRemovers.set(id, remover);\n                }\n                return id;\n            };\n            const ctxRequestAnimationFrame = (cb) => {\n                const id = gWindow?.requestAnimationFrame?.(cb);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.cancelAnimationFrame?.(id);\n                    }\n                    catch { } });\n                    _rafRemovers.set(id, remover);\n                }\n                return id;\n            };\n            const wrapObserverCtor = (Orig) => {\n                if (!Orig)\n                    return undefined;\n                const Wrapped = function (...args) {\n                    const inst = new Orig(...args);\n                    component._addCleanupFunction(() => { try {\n                        inst.disconnect();\n                    }\n                    catch { } });\n                    return inst;\n                };\n                Wrapped.prototype = Orig.prototype;\n                return Wrapped;\n            };\n            const specials = {\n                '$target': targetElement || null,\n                '$event': event || null,\n                ...(sandbox && !allow.has('setTimeout') ? {} : { 'setTimeout': ctxSetTimeout }),\n                ...(sandbox && !allow.has('clearTimeout') ? {} : { 'clearTimeout': (id) => { try {\n                        gWindow?.clearTimeout?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _timeoutRemovers.get(id);\n                            if (r) {\n                                r();\n                                _timeoutRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('setInterval') ? {} : { 'setInterval': ctxSetInterval }),\n                ...(sandbox && !allow.has('clearInterval') ? {} : { 'clearInterval': (id) => { try {\n                        gWindow?.clearInterval?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _intervalRemovers.get(id);\n                            if (r) {\n                                r();\n                                _intervalRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('requestAnimationFrame') ? {} : { 'requestAnimationFrame': ctxRequestAnimationFrame }),\n                ...(sandbox && !allow.has('cancelAnimationFrame') ? {} : { 'cancelAnimationFrame': (id) => { try {\n                        gWindow?.cancelAnimationFrame?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _rafRemovers.get(id);\n                            if (r) {\n                                r();\n                                _rafRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('MutationObserver') ? {} : { 'MutationObserver': wrapObserverCtor(gWindow?.MutationObserver) }),\n                ...(sandbox && !allow.has('ResizeObserver') ? {} : { 'ResizeObserver': wrapObserverCtor(gWindow?.ResizeObserver) }),\n                ...(sandbox && !allow.has('IntersectionObserver') ? {} : { 'IntersectionObserver': wrapObserverCtor(gWindow?.IntersectionObserver) }),\n                ...(sandbox && !allow.has('window') ? {} : { 'window': wrapTarget(gWindow) }),\n                ...(sandbox && !allow.has('document') ? {} : { 'document': wrapTarget(gDocument) })\n            };\n            return new Proxy({}, {\n                get: (_t, propStr) => {\n                    if (mergedScope && propStr in mergedScope)\n                        return mergedScope[propStr];\n                    if (propStr in component._data)\n                        return component._data[propStr];\n                    if (propStr in component._computed)\n                        return component._getComputedValue(propStr);\n                    if (propStr in component._methods)\n                        return component._methods[propStr];\n                    if (propStr in specials)\n                        return specials[propStr];\n                    return undefined;\n                },\n                set: (_t, propStr, value) => {\n                    if (mergedScope && scopeKeys.has(propStr)) {\n                        mergedScope[propStr] = value;\n                    }\n                    else {\n                        component._data[propStr] = value;\n                    }\n                    return true;\n                },\n                has: (_t, propStr) => !!(mergedScope && propStr in mergedScope) ||\n                    propStr in component._data ||\n                    propStr in component._computed ||\n                    propStr in component._methods ||\n                    propStr in specials\n            });\n        }\n        _bindCustomDirective(element, _name, expression, directive, modifiers) {\n            const self = this;\n            const evaluator = self._createElementEvaluator(expression, element);\n            const directiveInfo = { type: 'custom', expression, customDirective: directive };\n            if (directive.bind) {\n                self._safeExecute(() => directive.bind(element, evaluator(), expression, self, modifiers, evaluator));\n            }\n            const update = () => {\n                if (directive.update)\n                    self._safeExecute(() => directive.update(element, evaluator(), expression, self, modifiers, evaluator));\n            };\n            const effect = self._createEffect(update);\n            directiveInfo.update = effect;\n            self._addDirective(element, directiveInfo);\n        }\n        _bindAttributeDirective(element, attributeName, expression) {\n            const self = this;\n            const evaluator = self._createElementEvaluator(expression, element);\n            if (attributeName === 'class') {\n                const el = element;\n                if (!self._initialClassSets.get(el)) {\n                    const baseSet = new Set();\n                    const oc = el.className || '';\n                    if (oc)\n                        for (const cls of oc.split(/\\s+/)) {\n                            if (cls)\n                                baseSet.add(cls);\n                        }\n                    self._initialClassSets.set(el, baseSet);\n                }\n            }\n            const elAny = element;\n            let propName = null;\n            if (attributeName in elAny)\n                propName = attributeName;\n            else {\n                const camel = attributeName.replace(/-([a-z])/g, (_, c) => c.toUpperCase());\n                if (camel in elAny)\n                    propName = camel;\n                else if (attributeName.toLowerCase() === 'readonly' && 'readOnly' in elAny)\n                    propName = 'readOnly';\n            }\n            const isBooleanProp = !!(propName && typeof elAny[propName] === 'boolean');\n            const hasNonFunctionProp = !!(propName && (propName in elAny) && typeof elAny[propName] !== 'function');\n            const isKnownBooleanAttr = !!ReactiveComponent._BA[attributeName.toLowerCase()];\n            const update = () => {\n                const value = evaluator();\n                if (attributeName === 'class') {\n                    const el = element;\n                    const base = self._initialClassSets.get(el);\n                    if (typeof value === 'string') {\n                        el.className = base && base.size ? [...base].join(' ') + (value ? ' ' + value : '') : value || '';\n                    }\n                    else if (ARRAY_ISARRAY(value)) {\n                        if (base && base.size)\n                            el.className = [...base, ...value.filter(Boolean)].join(' ');\n                        else\n                            el.className = value.filter(Boolean).join(' ');\n                    }\n                    else if (value && typeof value === 'object') {\n                        if (base && base.size)\n                            el.className = [...base].join(' ');\n                        for (const raw in value) {\n                            const on = !!value[raw];\n                            if (!raw)\n                                continue;\n                            const tokens = raw.split(/\\s+/);\n                            for (let i = 0; i < tokens.length; i++) {\n                                const tk = tokens[i];\n                                if (!tk)\n                                    continue;\n                                el.classList.toggle(tk, on);\n                            }\n                        }\n                    }\n                    else if (value == null && base && base.size) {\n                        el.className = [...base].join(' ');\n                    }\n                    else if (value == null) {\n                        el.removeAttribute('class');\n                    }\n                    return;\n                }\n                if (attributeName === STR_STYLE) {\n                    const el = element;\n                    if (typeof value === 'string') {\n                        el.style.cssText = value;\n                        return;\n                    }\n                    if (value && typeof value === 'object') {\n                        Object.assign(el.style, value);\n                        return;\n                    }\n                    if (value == null)\n                        el.removeAttribute('style');\n                    return;\n                }\n                if ((isBooleanProp && propName) || isKnownBooleanAttr) {\n                    const boolVal = !!value;\n                    if (propName && isBooleanProp)\n                        elAny[propName] = boolVal;\n                    if (boolVal)\n                        element.setAttribute(attributeName, '');\n                    else\n                        element.removeAttribute(attributeName);\n                    return;\n                }\n                let normalized = null;\n                if (value && typeof value === 'object') {\n                    const parts = [];\n                    for (const k in value) {\n                        if (value[k])\n                            parts.push(k);\n                    }\n                    normalized = parts.length ? parts.join(' ') : null;\n                }\n                else if (value !== null && value !== undefined) {\n                    normalized = String(value);\n                }\n                if (hasNonFunctionProp && propName) {\n                    if (normalized !== null) {\n                        try {\n                            elAny[propName] = normalized;\n                        }\n                        catch (e) {\n                            try {\n                                element.setAttribute(attributeName, normalized);\n                            }\n                            catch { }\n                        }\n                    }\n                    else {\n                        element.removeAttribute(attributeName);\n                    }\n                    return;\n                }\n                if (normalized !== null) {\n                    const cur = element.getAttribute(attributeName);\n                    if (cur !== normalized)\n                        element.setAttribute(attributeName, normalized);\n                }\n                else {\n                    if (element.hasAttribute(attributeName))\n                        element.removeAttribute(attributeName);\n                }\n            };\n            const effect = self._createEffect(update);\n            self._addDirective(element, { type: 'bind', expression, update: effect });\n        }\n        _collectLoopScope(el) {\n            if (!el)\n                return null;\n            if (!el.parentElement) {\n                const cur = el.__x_if_current;\n                if (cur && cur.parentElement) {\n                    el = cur;\n                }\n                else {\n                    const anchorParent = el.__x_if_anchorParent;\n                    if (anchorParent)\n                        el = anchorParent;\n                }\n            }\n            const merged = {};\n            let node = el;\n            while (node) {\n                const scope = this._loopScopes.get(node);\n                if (scope)\n                    Object.assign(merged, scope);\n                if (node === this.element)\n                    break;\n                node = node.parentElement;\n            }\n            return _Okeys(merged).length ? merged : null;\n        }\n        _updateElementDirectives(root) {\n            for (const [element, directives] of this._directives) {\n                for (const directive of directives) {\n                    if ((root === element || (element instanceof Element && root.contains(element))) && directive.update) {\n                        directive.update();\n                    }\n                }\n            }\n        }\n        _bindForDirective(element, expression) {\n            const self = this;\n            const match = expression.trim().match(/^(?:\\(\\s*([^,\\s]+)\\s*(?:,\\s*([^\\)]+))?\\s*\\)|([^,\\s]+))\\s+(in|of)\\s+(.+)$/);\n            if (!match) {\n                return;\n            }\n            const itemVar = match[1] || match[3];\n            const indexVar = match[2];\n            const listCode = match[5];\n            const placeholder = d.createComment('x-for');\n            element.parentNode?.insertBefore(placeholder, element);\n            let templateToClone;\n            if (element[STR_TAGNAME] === STR_TEMPLATE) {\n                templateToClone = d.createElement('div');\n                templateToClone.style[STR_DISPLAY] = STR_CONTENTS;\n                templateToClone.appendChild(element.content.cloneNode(true));\n                element.parentNode?.removeChild(element);\n            }\n            else {\n                templateToClone = element;\n                element.parentNode?.removeChild(element);\n            }\n            const contextAnchor = placeholder.parentElement || self.element;\n            const listEval = self._createElementEvaluator(listCode.trim(), contextAnchor);\n            const instances = [];\n            const createScope = (item, idxOrKey) => {\n                const scope = { [itemVar]: item };\n                if (indexVar)\n                    scope[indexVar] = idxOrKey;\n                return scope;\n            };\n            const update = () => {\n                const norm = self._safeExecute(() => {\n                    const result = listEval();\n                    if (_AisArr(result))\n                        return { list: result, keys: null };\n                    if (typeof Map !== 'undefined' && result instanceof Map) {\n                        return { list: _Afrom(result.values()), keys: _Afrom(result.keys()) };\n                    }\n                    if (typeof Set !== 'undefined' && result instanceof Set) {\n                        return { list: _Afrom(result.values()), keys: null };\n                    }\n                    if (result && typeof result[Symbol.iterator] === 'function') {\n                        return { list: _Afrom(result), keys: null };\n                    }\n                    if (result && typeof result === 'object') {\n                        const keys = Object.keys(result);\n                        const list = keys.map(k => result[k]);\n                        return { list, keys };\n                    }\n                    return { list: [], keys: null };\n                }, { list: [], keys: null });\n                const list = norm.list;\n                const keysArr = norm.keys;\n                if (instances.length > list.length) {\n                    while (instances.length > list.length) {\n                        const inst = instances.pop();\n                        if (inst.parentNode)\n                            inst.parentNode.removeChild(inst);\n                    }\n                }\n                const minLen = Math.min(instances.length, list.length);\n                for (let i = 0; i < minLen; i++) {\n                    const inst = instances[i];\n                    const keyVal = keysArr ? keysArr[i] : i;\n                    self._loopScopes.set(inst, createScope(list[i], keyVal));\n                    self._updateElementDirectives(inst);\n                }\n                if (list.length > instances.length) {\n                    const frag = d.createDocumentFragment();\n                    const start = instances.length;\n                    for (let i = start; i < list.length; i++) {\n                        const clone = templateToClone.cloneNode(true);\n                        clone.removeAttribute('x-for');\n                        const keyVal = keysArr ? keysArr[i] : i;\n                        self._loopScopes.set(clone, createScope(list[i], keyVal));\n                        try {\n                            self._parseDirectives(clone);\n                        }\n                        catch { }\n                        frag.appendChild(clone);\n                        instances.push(clone);\n                    }\n                    const ref = instances[start - 1] || placeholder;\n                    if (ref.parentNode)\n                        ref.parentNode.insertBefore(frag, ref.nextSibling);\n                }\n            };\n            const dir = { type: 'for', expression };\n            const effect = self._createEffect(update, dir);\n            dir.update = effect;\n            self._addDirective(placeholder, dir);\n        }\n        _render() {\n            const self = this;\n            for (const directives of self._directives.values()) {\n                for (const dr of directives) {\n                    if (XTOOL_ENABLE_STATIC_DIRECTIVES && dr._static)\n                        continue;\n                    if (dr.update) {\n                        try {\n                            dr.update();\n                        }\n                        catch (error) {\n                            if (!(error instanceof ReferenceError)) { }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    ReactiveComponent._BA = {\n        itemscope: 1, formnovalidate: 1, novalidate: 1, default: 1\n    };\n    const xTool = new XToolFramework();\n    return xTool;\n}();\nif (typeof window !== 'undefined') {\n    const w = window;\n    w.XTool = XToolFramework;\n    w.FyneJS = XToolFramework;\n}\n//# sourceMappingURL=x-tool.js.map"],"mappings":"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","ignoreList":[]}