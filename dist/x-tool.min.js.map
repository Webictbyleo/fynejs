{"version":3,"file":"x-tool.min.js","names":["ARRAY_ISARRAY","Array","isArray","XToolFramework","_Afrom","from","_AisArr","_Okeys","Object","keys","_logErr","STR_STYLE","STR_DISPLAY","STR_NONE","STR_TAGNAME","STR_TEMPLATE","STR_LENGTH","XTOOL_ENABLE_STATIC_DIRECTIVES","d","document","STR_CONTENTS","EV_DELEGATED","head","getElementById","style","createElement","id","textContent","appendChild","PFX","attrName","name","ReactiveComponent","attachToParent","parent","this","_parent","_addChild","_id","framework","_framework","element","_element","el","isBound","_isBound","v","isMounted","_isMounted","isDestroyed","_isDestroyed","_addDirective","directive","existing","_directives","get","push","set","constructor","def","_propUpdateActive","_runningPropEffect","_beforeMountCalled","_children","_computed","_propEffects","_computedCache","Map","_computedDeps","_inverseComputedDeps","_isInComputedEvaluation","_isInMethodExecution","_allEffects","Set","_hasComputed","_cleanupFunctions","_currentInvoker","_lastTimeoutByInvoker","_lastIntervalByInvoker","_lastRafByInvoker","_lastObserverByInvoker","mutation","resize","intersection","_eventListeners","_loopScopes","WeakMap","_expressionCache","_propertyDependencies","_activeEffect","_renderScheduled","_nextTickQueue","_initialClassSets","_propParent","_callLifecycleHook","hookName","hook","_lifecycle","_safeExecute","_runWithGlobalInterception","_addCleanupFunction","fn","wrapper","delete","add","_addEventListenerWithCleanup","event","handler","options","addEventListener","_originalMethods","methods","computed","propEffects","length","mounted","unmounted","destroyed","updated","beforeMount","beforeUnmount","beforeDestroy","_data","_createReactiveData","data","_methods","_bindMethods","callBeforeMount","_onDataChange","_property","clear","effectsToRun","directDeps","i","effect","_scheduleRender","boundMethods","methodName","originalMethod","args","prev","prevInv","_getComputedValue","key","_trackDependency","has","computeFn","dep","value","call","_createMethodContext","propKey","deps","includes","requestAnimationFrame","_render","q","splice","fallback","bindToElement","completeBinding","getContext","includeComputed","_applyAsyncTemplateResolved","_parseDirectives","_getComponentByElement","_registerElement","child","_removeChild","index","indexOf","src","String","test","body","trim","Function","undefined","_createContextProxy","apply","destroy","self","directives","type","customDirective","unbind","removeEventListener","cleanup","_propEffect","values","idx","_unregisterElement","_deepReactiveCache","queueMicrotask","_unregisterComponent","_initReactiveProps","expr","evalFn","update","obj","ctx","$props","k","processElement","isRoot","hasAttribute","isComponentTag","hasTextOrHtml","forAttr","a","attributes","n","startsWith","_bindDirective","attr","_bindTextInterpolationsIn","_walkElements","nodes","childNodes","node","nodeType","Node","TEXT_NODE","textNode","raw","nodeValue","__x_tool_ti","parentTag","parentElement","tagName","toLowerCase","inCode","segs","open","literal","slice","bs","p","charCodeAt","prefixEnd","repeat","close","hasExpr","some","s","hasEscaped","evaluators","filter","map","_createElementEvaluator","exprIndex","out","val","dirInfo","expression","_createEffect","processor","firstElementChild","next","nextElementSibling","directiveName","isShortBind","removeAttribute","_bindAttributeDirective","_bindSimpleDirective","_bindModelDirective","_bindIfDirective","_bindForDirective","prefix","rest","split","suffix","mods","modifiers","reduce","acc","m","_getCustomDirective","_bindCustomDirective","_bindEventDirective","updateFn","directiveRef","_static","found","evaluator","originalDisplay","_prevShown","innerHTML","property","isCheckbox","isNumeric","isMultiSelect","multiple","Reflect","defineProperty","configurable","enumerable","writable","getValueEvaluator","setValueEvaluator","_createEvaluator","checkboxValue","loopScope","_collectLoopScope","inferCheckboxValue","member","checked","sel","arr","opt","selected","setInputValue","t","parseFloat","getInputValue","currentVal","forEach","$value","placeholder","createComment","parentNode","insertBefore","__x_if_anchorParent","branches","makeActualElement","content","cloneNode","isTemplate","first","firstEval","__x_tool_bound","originalNodes","sib","isElse","isElseIf","getAttribute","branch","active","orig","removeChild","mountBranch","b","__x_if_current","nextSibling","cb","unmountBranch","eventName","trimmed","arrow","_extractArrowFunction","opts","once","passive","capture","onlySelf","shouldPrevent","prevent","shouldStop","stop","isOutside","outside","deferExec","defer","keyAliasMap","enter","esc","escape","space","tab","backspace","del","arrowup","arrowdown","arrowleft","arrowright","home","end","pageup","pagedown","comboRequirements","ctrl","alt","shift","meta","buttonMap","left","middle","right","touchSingle","single","touchMulti","multi","modifierKeys","allowedKeys","aliases","allowedButtons","btn","needKeyCheck","needButtonCheck","needTouchCheck","passesFilters","path","composedPath","tgt","target","contains","TouchEvent","tCount","touches","MouseEvent","button","KeyboardEvent","ctrlKey","altKey","shiftKey","metaKey","runExpr","thisCtx","compiledArrow","_compileArrowForEvent","paramsList","isBlock","mapArgs","_","isStatement","executor","result","createEventHandler","preventDefault","stopPropagation","ev","canDelegate","_getConfig","delegate","remover","_registerDelegated","e","run","comp","ownerDocument","compiled","match","params","Boolean","endsWith","_wrapData","parentKey","getPrototypeOf","prototype","proxy","Proxy","receiver","Symbol","iterator","Error","beforeLen","beforeFirst","beforeLast","ownKeys","had","oldValue","deleteProperty","pc","eff","_includeComputed","specials","$log","$destroy","$forceUpdate","$addCleanupFunction","$nextTick","Promise","resolve","$el","$id","$isMounted","$isDestroyed","$parent","$children","$mutate","prevMethod","propStr","_target","targetElement","component","mergedScope","scopeKeys","gWindow","window","gDocument","cfg","sandbox","sandboxExpressions","allow","allowGlobals","_lastListenerByTarget","wrapTarget","handlerMap","makeKey","JSON","stringify","prop","inv","eKey","invMap","evMap","rem","size","invKey","rec","res","querySelector","list","querySelectorAll","doc","w","defaultView","_timeoutRemovers","_intervalRemovers","_rafRemovers","wrapObserverCtor","Orig","kind","Wrapped","inst","store","disconnect","$target","$event","setTimeout","ms","clearTimeout","r","setInterval","clearInterval","cancelAnimationFrame","MutationObserver","ResizeObserver","IntersectionObserver","_t","_name","directiveInfo","bind","attributeName","baseSet","oc","className","cls","elAny","propName","camel","replace","c","toUpperCase","isBooleanProp","hasNonFunctionProp","isKnownBooleanAttr","_BA","base","join","on","tokens","tk","classList","toggle","cssText","assign","boolVal","setAttribute","normalized","parts","cur","anchorParent","merged","scope","_updateElementDirectives","root","Element","itemVar","indexVar","listCode","templateToClone","contextAnchor","listEval","instances","createScope","item","idxOrKey","dir","norm","keysArr","pop","minLen","Math","min","frag","createDocumentFragment","start","clone","ref","dr","error","itemscope","formnovalidate","novalidate","default","_components","_byEl","_pending","_config","_customDirectives","_namedComponentDefs","_delegated","_delegatedRootBound","registerComponent","definition","_getRegisteredComponentDef","init","config","container","debug","staticDirectives","_hpf","readyState","_applyPrefixInitialCSS","_autoDiscoverComponents","_ensureRootObserver","_ensureDelegation","createComponent","_generateComponentId","componentElements","_bindElementAsComponent","reusable","_instantiateNamedComponent","_processPending","components","lastComponent","maybe","parentForEval","dataExpression","parentCtx","_parseDataExpression","initExpr","existingMounted","isConnected","Date","now","random","toString","substring","componentId","_log","_rootObserver","records","addedNodes","removedNodes","stack","_onComponentSourceChanged","observe","childList","subtree","attributeFilter","source","parentComp","par","props","dynamicPropObj","rawPropExpression","propExpr","initDef","baseData","makeData","compDef","originalChildren","firstChild","template","applyTemplate","tpl","slots","slotEl","matched","replaceChild","tplVal","then","html","nested","cancelBubble","h","captureEvents","bubbleEvents","entry","l","XTool","FyneJS"],"sourceRoot":"./dist","sources":["dist/x-tool.js"],"sourcesContent":["\"use strict\";\nconst ARRAY_ISARRAY = Array.isArray;\nconst FT_C = true;\nconst FT_TI = typeof __FEAT_TEXT_INTERP__ === 'boolean' ? __FEAT_TEXT_INTERP__ : true;\nconst _FT_DR = typeof __FEAT_DEEP_REACTIVE__ === 'boolean' ? __FEAT_DEEP_REACTIVE__ : true;\nconst FT_IFB = typeof __FEAT_IF_BRANCHES__ === 'boolean' ? __FEAT_IF_BRANCHES__ : true;\nconst XToolFramework = function () {\n    const _Afrom = Array.from;\n    const _AisArr = ARRAY_ISARRAY;\n    const _Okeys = Object.keys;\n    const _logErr = (..._args) => { };\n    const STR_STYLE = 'style';\n    const STR_DISPLAY = 'display';\n    const STR_NONE = 'none';\n    const STR_TAGNAME = 'tagName';\n    const STR_TEMPLATE = 'TEMPLATE';\n    const STR_LENGTH = 'length';\n    let XTOOL_ENABLE_STATIC_DIRECTIVES = true;\n    const d = (typeof document !== 'undefined' ? document : null);\n    const STR_CONTENTS = 'contents';\n    const EV_CLICK = 'click', EV_INPUT = 'input', EV_CHANGE = 'change', EV_KEYDOWN = 'keydown', EV_KEYUP = 'keyup';\n    const EV_DELEGATED = [EV_CLICK, EV_INPUT, EV_CHANGE, EV_KEYDOWN, EV_KEYUP];\n    try {\n        if (d && d.head && !d.getElementById('x-tool-initial-css')) {\n            const style = d.createElement(STR_STYLE);\n            style.id = 'x-tool-initial-css';\n            style.textContent = '[x-show],[x-if],[x-else],[x-else-if],[x\\\\:show],[x\\\\:if],[x\\\\:else],[x\\\\:else-if]{display:none;}';\n            d.head.appendChild(style);\n        }\n    }\n    catch { }\n    let PFX = 'x';\n    const attrName = (name) => `${PFX}-${name}`;\n    class XToolFramework {\n        constructor() {\n            this._components = new Map();\n            this._byEl = new WeakMap();\n            this._pending = [];\n            this._config = {};\n            this._customDirectives = new Map();\n            this._namedComponentDefs = new Map();\n            this._delegated = new WeakMap();\n            this._delegatedRootBound = false;\n            this.directive = (name, directive) => {\n                if (name.startsWith(PFX + '-')) {\n                    throw new Error(`Custom directive names should not start with \"${PFX}-\". Use: XTool.directive(\"my-directive\", ...)`);\n                }\n                this._customDirectives.set(name, directive);\n                return this;\n            };\n            this.registerComponent = (definition) => {\n                if (!definition || !definition.name)\n                    throw new Error('registerComponent requires a name');\n                const name = definition.name.toLowerCase();\n                if (this._namedComponentDefs.has(name))\n                    throw new Error(`Component name \"${name}\" already registered`);\n                this._namedComponentDefs.set(name, definition);\n                return this;\n            };\n            this._getRegisteredComponentDef = (name) => this._namedComponentDefs.get(name.toLowerCase());\n            this._getCustomDirective = (name) => this._customDirectives.get(name);\n            this._getConfig = () => this._config;\n            this.init = (config = {}) => {\n                this._config = { container: 'body', debug: false, staticDirectives: true, ...config };\n                if (typeof this._config.staticDirectives === 'boolean') {\n                    XTOOL_ENABLE_STATIC_DIRECTIVES = this._config.staticDirectives;\n                }\n                const _hpf = this._config.prefix;\n                if (_hpf && typeof _hpf === 'string' && _hpf[STR_LENGTH] > 0) {\n                    PFX = _hpf;\n                }\n                else {\n                    PFX = 'x';\n                }\n                if (d && d.readyState === 'loading') {\n                    d.addEventListener('DOMContentLoaded', () => { this._applyPrefixInitialCSS(); this._autoDiscoverComponents(); const c = d?.querySelector(this._config.container); if (c) {\n                        this._ensureRootObserver(c);\n                        if (this._config.delegate)\n                            this._ensureDelegation(c);\n                    } });\n                }\n                else if (!d || d.readyState === 'complete' || d.readyState === 'interactive') {\n                    this._applyPrefixInitialCSS();\n                    this._autoDiscoverComponents();\n                    const c = d?.querySelector(this._config.container);\n                    if (c) {\n                        this._ensureRootObserver(c);\n                        if (this._config.delegate)\n                            this._ensureDelegation(c);\n                    }\n                }\n                return this;\n            };\n            this.createComponent = (definition) => {\n                const component = new ReactiveComponent(this._generateComponentId(), definition, this);\n                this._components.set(component.id, component);\n                component.callBeforeMount();\n                return component;\n            };\n            this._autoDiscoverComponents = () => {\n                const container = d?.querySelector(this._config.container);\n                if (!container)\n                    return;\n                const componentElements = container.querySelectorAll(`[${attrName('data')}]`);\n                for (const element of componentElements) {\n                    if (!this._getComponentByElement(element))\n                        this._bindElementAsComponent(element);\n                }\n                const reusable = container.querySelectorAll('component[source]');\n                for (const el of reusable) {\n                    if (!this._getComponentByElement(el))\n                        this._instantiateNamedComponent(el);\n                }\n                this._processPending();\n                if (componentElements[STR_LENGTH] === 0 && !this._getComponentByElement(container)) {\n                    const components = _Afrom(this._components.values());\n                    const lastComponent = components[components[STR_LENGTH] - 1];\n                    if (lastComponent && !lastComponent.isBound) {\n                        lastComponent.bindToElement(container);\n                    }\n                }\n            };\n            this._processPending = () => {\n                if (!this._pending[STR_LENGTH])\n                    return;\n                for (const p of this._pending) {\n                    let cur = p.el.parentElement;\n                    let parent;\n                    while (cur && !parent) {\n                        const maybe = this._getComponentByElement(cur);\n                        if (maybe)\n                            parent = maybe;\n                        else\n                            cur = cur.parentElement;\n                    }\n                    if (parent) {\n                        p.comp.attachToParent(parent);\n                    }\n                }\n                for (const p of this._pending)\n                    p.comp.completeBinding();\n                this._pending = [];\n            };\n            this._bindElementAsComponent = (element, parentForEval) => {\n                const dataExpression = element.getAttribute(attrName('data'));\n                let data = {};\n                if (dataExpression) {\n                    element.removeAttribute(attrName('data'));\n                    try {\n                        if (parentForEval) {\n                            let parentCtx = {};\n                            try {\n                                parentCtx = parentForEval._createMethodContext?.() || {};\n                            }\n                            catch {\n                                parentCtx = {};\n                            }\n                            const evalFn = new Function('parent', `with(parent){ return (${dataExpression}) }`);\n                            data = evalFn(parentCtx);\n                        }\n                        else {\n                            data = this._parseDataExpression(dataExpression);\n                        }\n                        if (data.methods) {\n                            data = { methods: data.methods, data: { ...data } };\n                        }\n                        else {\n                            data = { data: { ...data } };\n                        }\n                        if (parentForEval) {\n                            data.data.$parent = parentForEval;\n                        }\n                    }\n                    catch (e) {\n                    }\n                }\n                const comp = this.createComponent(data);\n                comp.element = element;\n                comp.callBeforeMount();\n                this._registerElement(comp.element, comp);\n                this._pending.push({ el: element, comp });\n                const initExpr = element.getAttribute(attrName('init'));\n                if (initExpr) {\n                    element.removeAttribute(attrName('init'));\n                    const existingMounted = comp._lifecycle?.mounted;\n                    comp._lifecycle.mounted = function () {\n                        if (existingMounted) {\n                            try {\n                                existingMounted.call(this);\n                            }\n                            catch { }\n                        }\n                        const evaluator = new Function('ctx', 'with(ctx){' + initExpr + '} ');\n                        queueMicrotask(() => {\n                            if (comp.isDestroyed || !comp.element || !comp.element.isConnected)\n                                return;\n                            try {\n                                const ctx = comp._createMethodContext?.() || comp.getContext?.() || {};\n                                const result = evaluator(ctx);\n                                if (typeof result === 'function') {\n                                    try {\n                                        result();\n                                    }\n                                    catch { }\n                                }\n                            }\n                            catch { }\n                        });\n                    };\n                }\n            };\n            this._generateComponentId = () => 'component_' + Date.now() + '_' + Math.random().toString(36).substring(2, 9);\n            this._parseDataExpression = (expression) => {\n                try {\n                    return new Function('return ' + expression.trim())();\n                }\n                catch {\n                    return {};\n                }\n            };\n            this._unregisterComponent = (componentId) => { this._components.delete(componentId); };\n            this._log = (..._args) => { };\n            this._registerElement = (element, component) => {\n                this._byEl.set(element, component);\n            };\n            this._unregisterElement = (element) => { try {\n                this._byEl.delete(element);\n            }\n            catch { } };\n        }\n        _applyPrefixInitialCSS() {\n            if (!d)\n                return;\n            if (PFX === 'x')\n                return;\n            const id = `x-tool-initial-css-${PFX}`;\n            if (d.head && !d.getElementById(id)) {\n                const style = d.createElement(STR_STYLE);\n                style.id = id;\n                style.textContent = `[${PFX}-show],[${PFX}-if],[${PFX}-else],[${PFX}-else-if],[${PFX}\\\\:show],[${PFX}\\\\:if],[${PFX}\\\\:else],[${PFX}\\\\:else-if]{display:none;}`;\n                d.head.appendChild(style);\n            }\n        }\n        _ensureRootObserver(container) {\n            if (this._rootObserver || typeof MutationObserver === 'undefined')\n                return;\n            this._rootObserver = new MutationObserver(records => {\n                for (const r of records) {\n                    if (r.type === 'childList') {\n                        for (let i = 0; i < r.addedNodes.length; i++) {\n                            const n = r.addedNodes[i];\n                            if (n.nodeType !== 1)\n                                continue;\n                            const el = n;\n                            if (el[STR_TAGNAME] === 'COMPONENT') {\n                                const src = el.getAttribute('source');\n                                if (src && !this._getComponentByElement(el))\n                                    this._instantiateNamedComponent(el);\n                            }\n                        }\n                        for (let i = 0; i < r.removedNodes.length; i++) {\n                            const n = r.removedNodes[i];\n                            if (n.nodeType !== 1)\n                                continue;\n                            const el = n;\n                            queueMicrotask(() => {\n                                if (el.isConnected)\n                                    return;\n                                const stack = [el];\n                                while (stack.length) {\n                                    const cur = stack.pop();\n                                    const comp = this._getComponentByElement(cur);\n                                    if (comp && !comp.isDestroyed) {\n                                        try {\n                                            comp.destroy();\n                                        }\n                                        catch { }\n                                    }\n                                    let child = cur.firstElementChild;\n                                    while (child) {\n                                        stack.push(child);\n                                        child = child.nextElementSibling;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else if (r.type === 'attributes') {\n                        const target = r.target;\n                        if (target && target[STR_TAGNAME] === 'COMPONENT' && r.attributeName === 'source') {\n                            this._onComponentSourceChanged(target);\n                        }\n                    }\n                }\n                this._processPending();\n            });\n            this._rootObserver.observe(container, { childList: true, subtree: true, attributes: true, attributeFilter: ['source'] });\n        }\n        _onComponentSourceChanged(el) {\n            const src = (el.getAttribute('source') || '').trim();\n            const existing = this._getComponentByElement(el);\n            if (!src) {\n                if (existing && !existing.isDestroyed) {\n                    try {\n                        existing.destroy();\n                    }\n                    catch { }\n                }\n                el.innerHTML = '';\n                return;\n            }\n            if (existing && !existing.isDestroyed) {\n                try {\n                    existing.destroy();\n                }\n                catch { }\n            }\n            el.innerHTML = '';\n            this._instantiateNamedComponent(el);\n        }\n        _instantiateNamedComponent(el) {\n            const source = el.getAttribute('source');\n            if (!source)\n                return;\n            const def = this._getRegisteredComponentDef(source);\n            if (!def) {\n                return;\n            }\n            let parentComp;\n            let par = el.parentElement;\n            while (par && !parentComp) {\n                const maybe = this._getComponentByElement(par);\n                if (maybe)\n                    parentComp = maybe;\n                else\n                    par = par.parentElement;\n            }\n            let props = null;\n            let dynamicPropObj = null;\n            let rawPropExpression = null;\n            if (!props)\n                props = {};\n            const propExpr = el.getAttribute(attrName('prop'));\n            if (propExpr) {\n                rawPropExpression = propExpr;\n                if (parentComp) {\n                    try {\n                        const fn = new Function('ctx', 'with(ctx){return (' + propExpr + ')}');\n                        const ctx = parentComp.getContext(true);\n                        dynamicPropObj = fn(ctx);\n                    }\n                    catch {\n                        dynamicPropObj = null;\n                    }\n                }\n                else {\n                    try {\n                        dynamicPropObj = new Function('return (' + propExpr + ')')();\n                    }\n                    catch {\n                        dynamicPropObj = null;\n                    }\n                }\n                if (dynamicPropObj && typeof dynamicPropObj === 'object')\n                    for (const k in dynamicPropObj)\n                        if (!(k in props))\n                            props[k] = String(dynamicPropObj[k]);\n                el.removeAttribute(attrName('prop'));\n            }\n            let baseData = {};\n            if (def.makeData) {\n                try {\n                    baseData = def.makeData(props) || {};\n                }\n                catch {\n                    baseData = {};\n                }\n            }\n            if (def.data) {\n                for (const k in def.data) {\n                    baseData[k] = def.data[k];\n                }\n            }\n            for (const k in props) {\n                if (!(k in baseData))\n                    baseData[k] = props[k];\n            }\n            baseData.$props = props;\n            let initDef;\n            if (typeof def.init === 'function') {\n                try {\n                    const maybe = def.init(props);\n                    initDef = (maybe && typeof maybe === 'object') ? maybe : undefined;\n                }\n                catch {\n                    initDef = undefined;\n                }\n            }\n            const compDef = {\n                data: baseData,\n                methods: { ...(def.methods || {}), ...(initDef?.methods || {}) },\n                computed: { ...(def.computed || {}), ...(initDef?.computed || {}) },\n                propEffects: { ...(def.propEffects || {}), ...(initDef?.propEffects || {}) },\n                mounted: initDef?.mounted || def.mounted,\n                unmounted: initDef?.unmounted || def.unmounted,\n                beforeMount: initDef?.beforeMount || def.beforeMount,\n                beforeUnmount: initDef?.beforeUnmount || def.beforeUnmount,\n                updated: initDef?.updated || def.updated,\n                destroyed: initDef?.destroyed || def.destroyed,\n                beforeDestroy: initDef?.beforeDestroy || def.beforeDestroy\n            };\n            const comp = this.createComponent(compDef);\n            comp.element = el;\n            const originalChildren = [];\n            while (el.firstChild) {\n                const n = el.firstChild;\n                originalChildren.push(n);\n                el.removeChild(n);\n            }\n            if (def.template) {\n                const applyTemplate = (tpl) => {\n                    el.innerHTML = tpl;\n                    const slots = el.querySelectorAll('slot');\n                    if (slots.length) {\n                        for (const slotEl of slots) {\n                            const name = slotEl.getAttribute('name');\n                            let matched = [];\n                            if (name) {\n                                matched = originalChildren.filter(n => n.nodeType === 1 && n.getAttribute('slot') === name);\n                            }\n                            else {\n                                matched = originalChildren.filter(n => n.nodeType !== 1 || !n.hasAttribute('slot'));\n                            }\n                            if (matched.length) {\n                                const frag = d.createDocumentFragment();\n                                for (const n of matched)\n                                    frag.appendChild(n);\n                                slotEl.parentNode?.replaceChild(frag, slotEl);\n                            }\n                        }\n                    }\n                };\n                const tplVal = def.template;\n                if (typeof tplVal === 'string') {\n                    applyTemplate(tplVal);\n                }\n                else if (typeof tplVal === 'function') {\n                    try {\n                        const res = tplVal();\n                        if (res && typeof res.then === 'function') {\n                            el.innerHTML = '';\n                            res.then(html => { applyTemplate(html || ''); try {\n                                comp._applyAsyncTemplateResolved();\n                            }\n                            catch { } });\n                        }\n                        else {\n                            applyTemplate(String(res || ''));\n                        }\n                    }\n                    catch {\n                        el.innerHTML = '';\n                    }\n                }\n                else if (tplVal && typeof tplVal.then === 'function') {\n                    el.innerHTML = '';\n                    tplVal.then(html => { applyTemplate(html || ''); try {\n                        comp._applyAsyncTemplateResolved();\n                    }\n                    catch { } });\n                }\n            }\n            else {\n                for (const n of originalChildren)\n                    el.appendChild(n);\n            }\n            this._registerElement(el, comp);\n            try {\n                const nested = el.querySelectorAll(`[${attrName('data')}]`);\n                for (const node of nested) {\n                    if (!this._getComponentByElement(node))\n                        this._bindElementAsComponent(node, comp);\n                }\n            }\n            catch { }\n            this._pending.push({ el, comp });\n            if (rawPropExpression && parentComp) {\n                try {\n                    comp._initReactiveProps(rawPropExpression, parentComp);\n                }\n                catch { }\n            }\n            this._processPending();\n        }\n        _getComponentByElement(element) { return this._byEl.get(element); }\n        observe(_element) { }\n        _ensureDelegation(container) {\n            if (this._delegatedRootBound)\n                return;\n            const root = container;\n            const handler = (e) => {\n                let cur = e.target;\n                while (cur && cur !== root.parentElement) {\n                    if (e.cancelBubble)\n                        break;\n                    const map = this._delegated.get(cur);\n                    if (map) {\n                        const list = map.get(e.type);\n                        if (list && list.length) {\n                            for (const h of [...list]) {\n                                try {\n                                    if (h.comp && h.comp.isDestroyed) {\n                                        const i = list.indexOf(h);\n                                        if (i > -1)\n                                            list.splice(i, 1);\n                                        continue;\n                                    }\n                                    if (!h.filter || h.filter(e)) {\n                                        h.run(e);\n                                        if (h.once) {\n                                            const idx = list.indexOf(h);\n                                            if (idx > -1)\n                                                list.splice(idx, 1);\n                                        }\n                                    }\n                                }\n                                catch { }\n                            }\n                        }\n                    }\n                    cur = cur.parentElement;\n                }\n            };\n            const captureEvents = ['keydown', 'keyup'];\n            const bubbleEvents = ['click', 'input', 'change'];\n            for (const ev of captureEvents)\n                root.addEventListener(ev, handler, true);\n            for (const ev of bubbleEvents)\n                root.addEventListener(ev, handler, false);\n            this._delegatedRootBound = true;\n        }\n        _registerDelegated(element, event, entry) {\n            let map = this._delegated.get(element);\n            if (!map) {\n                map = new Map();\n                this._delegated.set(element, map);\n            }\n            let list = map.get(event);\n            if (!list) {\n                list = [];\n                map.set(event, list);\n            }\n            list.push(entry);\n            return () => {\n                try {\n                    const m = this._delegated.get(element);\n                    const l = m?.get(event);\n                    if (!l)\n                        return;\n                    const idx = l.indexOf(entry);\n                    if (idx > -1)\n                        l.splice(idx, 1);\n                }\n                catch { }\n            };\n        }\n    }\n    class ReactiveComponent {\n        attachToParent(parent) {\n            this._parent = parent;\n            parent._addChild(this);\n        }\n        get id() { return this._id; }\n        get framework() { return this._framework; }\n        get element() { return this._element; }\n        set element(el) { this._element = el; }\n        get isBound() { return this._isBound; }\n        set isBound(v) { this._isBound = v; }\n        get isMounted() { return this._isMounted; }\n        set isMounted(v) { this._isMounted = v; }\n        get isDestroyed() { return this._isDestroyed; }\n        set isDestroyed(v) { this._isDestroyed = v; }\n        _addDirective(element, directive) {\n            const existing = this._directives.get(element) || [];\n            existing.push(directive);\n            this._directives.set(element, existing);\n        }\n        constructor(id, def, framework) {\n            this._propUpdateActive = false;\n            this._runningPropEffect = false;\n            this._element = null;\n            this._isBound = false;\n            this._isMounted = false;\n            this._isDestroyed = false;\n            this._beforeMountCalled = false;\n            this._children = [];\n            this._parent = null;\n            this._computed = {};\n            this._propEffects = {};\n            this._computedCache = new Map();\n            this._computedDeps = new Map();\n            this._inverseComputedDeps = new Map();\n            this._isInComputedEvaluation = false;\n            this._isInMethodExecution = false;\n            this._allEffects = new Set();\n            this._hasComputed = false;\n            this._directives = new Map();\n            this._cleanupFunctions = new Set();\n            this._currentInvoker = null;\n            this._lastTimeoutByInvoker = new Map();\n            this._lastIntervalByInvoker = new Map();\n            this._lastRafByInvoker = new Map();\n            this._lastObserverByInvoker = {\n                mutation: new Map(),\n                resize: new Map(),\n                intersection: new Map()\n            };\n            this._eventListeners = [];\n            this._loopScopes = new WeakMap();\n            this._expressionCache = new Map();\n            this._propertyDependencies = new Map();\n            this._activeEffect = null;\n            this._renderScheduled = false;\n            this._nextTickQueue = [];\n            this._initialClassSets = new WeakMap();\n            this._propParent = null;\n            this._callLifecycleHook = (hookName) => {\n                const hook = this._lifecycle[hookName];\n                if (typeof hook === 'function') {\n                    this._safeExecute(() => this._runWithGlobalInterception(hook, []));\n                }\n            };\n            this._addCleanupFunction = (fn) => {\n                if (typeof fn !== 'function')\n                    return undefined;\n                const wrapper = () => {\n                    try {\n                        fn();\n                    }\n                    catch {\n                        _logErr();\n                    }\n                    try {\n                        this._cleanupFunctions.delete(wrapper);\n                    }\n                    catch { }\n                };\n                this._cleanupFunctions.add(wrapper);\n                return () => { try {\n                    this._cleanupFunctions.delete(wrapper);\n                }\n                catch { } };\n            };\n            this._addEventListenerWithCleanup = (element, event, handler, options) => {\n                element.addEventListener(event, handler, options);\n                this._eventListeners.push({ element, event, handler, options });\n            };\n            this._id = id;\n            this._framework = framework;\n            this._originalMethods = def.methods || {};\n            this._computed = def.computed || {};\n            this._propEffects = def.propEffects || {};\n            this._hasComputed = !!(def.computed && Object.keys(def.computed).length);\n            this._lifecycle = {\n                mounted: def.mounted,\n                unmounted: def.unmounted || def.destroyed,\n                updated: def.updated,\n                beforeMount: def.beforeMount,\n                beforeUnmount: def.beforeUnmount || def.beforeDestroy\n            };\n            this._data = this._createReactiveData(def.data || {});\n            this._methods = this._bindMethods();\n        }\n        callBeforeMount() {\n            if (!this._beforeMountCalled) {\n                this._callLifecycleHook('beforeMount');\n                this._beforeMountCalled = true;\n            }\n        }\n        _onDataChange(_property) {\n            if (this.isBound) {\n                if (FT_C)\n                    this._computedCache.clear();\n                const effectsToRun = new Set();\n                const directDeps = this._propertyDependencies.get(_property);\n                if (directDeps)\n                    for (let i = 0; i < directDeps.length; i++)\n                        effectsToRun.add(directDeps[i]);\n                for (const effect of effectsToRun)\n                    this._safeExecute(effect);\n                if (this._hasComputed || !XTOOL_ENABLE_STATIC_DIRECTIVES) {\n                    this._scheduleRender();\n                }\n                this._callLifecycleHook('updated');\n            }\n        }\n        _bindMethods() {\n            const boundMethods = {};\n            for (const methodName in this._originalMethods) {\n                const originalMethod = this._originalMethods[methodName];\n                boundMethods[methodName] = (...args) => {\n                    const prev = this._isInMethodExecution;\n                    const prevInv = this._currentInvoker;\n                    this._isInMethodExecution = true;\n                    this._currentInvoker = methodName;\n                    try {\n                        return this._safeExecute(() => this._runWithGlobalInterception(originalMethod, args));\n                    }\n                    finally {\n                        this._isInMethodExecution = prev;\n                        this._currentInvoker = prevInv;\n                    }\n                };\n            }\n            return boundMethods;\n        }\n        _getComputedValue(key) {\n            if (!FT_C)\n                return undefined;\n            this._trackDependency(key);\n            if (this._computedCache.has(key))\n                return this._computedCache.get(key);\n            try {\n                const computeFn = this._computed[key];\n                this._isInComputedEvaluation = true;\n                const prev = this._computedDeps.get(key);\n                if (prev) {\n                    for (const dep of prev) {\n                        const set = this._inverseComputedDeps.get(dep);\n                        if (set)\n                            set.delete(key);\n                    }\n                }\n                this._computedDeps.set(key, new Set());\n                const value = computeFn.call(this._createMethodContext());\n                this._isInComputedEvaluation = false;\n                this._computedCache.set(key, value);\n                return value;\n            }\n            catch {\n                this._isInComputedEvaluation = false;\n                return undefined;\n            }\n        }\n        _trackDependency(propKey) {\n            if (!this._activeEffect)\n                return;\n            let deps = this._propertyDependencies.get(propKey);\n            if (!deps) {\n                deps = [];\n                this._propertyDependencies.set(propKey, deps);\n            }\n            if (!deps.includes(this._activeEffect))\n                deps.push(this._activeEffect);\n        }\n        _scheduleRender() {\n            if (this._renderScheduled)\n                return;\n            this._renderScheduled = true;\n            requestAnimationFrame(() => {\n                this._renderScheduled = false;\n                this._render();\n                if (this._nextTickQueue && this._nextTickQueue.length) {\n                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                    for (const fn of q) {\n                        try {\n                            fn();\n                        }\n                        catch { }\n                    }\n                }\n            });\n        }\n        _safeExecute(fn, fallback) {\n            try {\n                return fn();\n            }\n            catch {\n                return fallback;\n            }\n        }\n        bindToElement(element) {\n            if (this._isBound)\n                return;\n            this._element = element;\n            if (!this._beforeMountCalled) {\n                this.callBeforeMount();\n            }\n            this.completeBinding();\n        }\n        getContext(includeComputed = true) {\n            return this._createMethodContext(includeComputed);\n        }\n        _applyAsyncTemplateResolved() {\n            if (!this._element)\n                return;\n            try {\n                this._parseDirectives(this._element);\n            }\n            catch { }\n            this._scheduleRender();\n        }\n        completeBinding() {\n            if (this._isBound || !this._element)\n                return;\n            if (!this._framework._getComponentByElement(this._element))\n                this._framework._registerElement(this._element, this);\n            this._isBound = true;\n            this._isMounted = true;\n            this._parseDirectives(this._element);\n            this._render();\n            this._callLifecycleHook('mounted');\n        }\n        _addChild(child) {\n            if (!this._children.includes(child)) {\n                this._children.push(child);\n            }\n        }\n        _removeChild(child) {\n            const index = this._children.indexOf(child);\n            if (index > -1) {\n                this._children.splice(index, 1);\n            }\n        }\n        _runWithGlobalInterception(fn, args) {\n            try {\n                const src = String(fn);\n                if (!/\\[native code\\]/.test(src)) {\n                    let body = src.trim();\n                    if (!/^function[\\s\\(]/.test(body) && !/^[\\w\\$_][\\w\\d\\$_]*\\s*=>/.test(body) && !/^\\(.*?\\)\\s*=>/.test(body)) {\n                        body = 'function ' + body;\n                    }\n                    const trySrc = 'with(ctx){ const f = (' + body + '); return f.apply(thisArg, argsArray); }';\n                    const wrapper = new Function('thisArg', 'argsArray', 'ctx', trySrc);\n                    return wrapper.call(undefined, this._createMethodContext(), args, this._createContextProxy(undefined, undefined));\n                }\n            }\n            catch {\n            }\n            return fn.apply(this._createMethodContext(), args);\n        }\n        destroy() {\n            const self = this;\n            if (self._isDestroyed)\n                return;\n            self._callLifecycleHook('beforeUnmount');\n            for (const child of self._children) {\n                if (!child.isDestroyed)\n                    child.destroy();\n            }\n            if (self._parent) {\n                self._parent._removeChild(self);\n            }\n            for (const [element, directives] of self._directives) {\n                for (const directive of directives) {\n                    if (directive.type === 'custom' && directive.customDirective?.unbind) {\n                        try {\n                            directive.customDirective.unbind(element, self);\n                        }\n                        catch {\n                            _logErr();\n                        }\n                    }\n                }\n            }\n            self._directives.clear();\n            for (const { element, event, handler, options } of self._eventListeners) {\n                element.removeEventListener(event, handler, options);\n            }\n            self._eventListeners = [];\n            for (const cleanup of Array.from(self._cleanupFunctions)) {\n                try {\n                    cleanup();\n                }\n                catch {\n                    _logErr();\n                }\n            }\n            self._cleanupFunctions.clear();\n            self._computedCache.clear();\n            self._expressionCache.clear();\n            self._propertyDependencies.clear();\n            if (self._propParent && self._propEffect) {\n                for (const deps of self._propParent._propertyDependencies.values()) {\n                    const idx = deps.indexOf(self._propEffect);\n                    if (idx > -1)\n                        deps.splice(idx, 1);\n                }\n            }\n            if (self._element)\n                self._framework._unregisterElement(self._element);\n            self._callLifecycleHook('unmounted');\n            self._isDestroyed = true;\n            self._isMounted = false;\n            self._isBound = false;\n            self._children = [];\n            self._parent = null;\n            this._deepReactiveCache = new WeakMap;\n            self._element = null;\n            queueMicrotask(() => self._framework._unregisterComponent(self._id));\n        }\n        _initReactiveProps(expr, parent) {\n            if (!expr || !parent)\n                return;\n            this._propParent = parent;\n            let evalFn;\n            try {\n                evalFn = new Function('ctx', 'with(ctx){return (' + expr + ')}');\n            }\n            catch {\n                return;\n            }\n            const update = () => {\n                parent._activeEffect = update;\n                let obj;\n                try {\n                    const ctx = parent.getContext(true);\n                    obj = evalFn(ctx);\n                }\n                catch {\n                    obj = null;\n                }\n                parent._activeEffect = null;\n                if (obj && typeof obj === 'object') {\n                    this._data.$props = this._data.$props || {};\n                    this._propUpdateActive = true;\n                    for (const k in obj) {\n                        const v = obj[k];\n                        if (this._data[k] !== v)\n                            this._data[k] = v;\n                    }\n                    this._propUpdateActive = false;\n                }\n            };\n            this._propEffect = update;\n            update();\n        }\n        _parseDirectives(element) {\n            const self = this;\n            let processedElements = 0;\n            const processElement = (el, isRoot = false) => {\n                if (!isRoot && (el.hasAttribute(attrName('data')) || this._framework._getComponentByElement(el))) {\n                    return false;\n                }\n                const isComponentTag = el[STR_TAGNAME] === 'COMPONENT';\n                const directives = [];\n                let hasTextOrHtml = false;\n                let forAttr = null;\n                for (const a of el.attributes) {\n                    const n = a.name;\n                    if (n.startsWith(PFX + '-') || n.startsWith(PFX + ':')) {\n                        directives.push(a);\n                        if (!hasTextOrHtml && (n === attrName('text') || n === attrName('html')))\n                            hasTextOrHtml = true;\n                        if (!forAttr && n === attrName('for'))\n                            forAttr = a;\n                    }\n                }\n                if (directives.length > 0) {\n                    processedElements++;\n                    if (forAttr) {\n                        self._bindDirective(el, forAttr.name, forAttr.value);\n                        return false;\n                    }\n                    for (const attr of directives)\n                        self._bindDirective(el, attr.name, attr.value);\n                }\n                if (FT_TI && !hasTextOrHtml)\n                    self._bindTextInterpolationsIn(el);\n                return isRoot || !isComponentTag;\n            };\n            processElement(element, true);\n            self._walkElements(element, processElement);\n        }\n        _bindTextInterpolationsIn(el) {\n            const nodes = Array.from(el.childNodes);\n            for (const node of nodes) {\n                if (node.nodeType !== Node.TEXT_NODE)\n                    continue;\n                const textNode = node;\n                const raw = textNode.nodeValue || '';\n                if (textNode.__x_tool_ti || raw.indexOf('{{') === -1)\n                    continue;\n                const parentTag = (textNode.parentElement?.tagName || '').toLowerCase();\n                const inCode = parentTag === 'code' || parentTag === 'pre';\n                const segs = [];\n                let i = 0;\n                while (i < raw.length) {\n                    const open = raw.indexOf('{{', i);\n                    if (open === -1) {\n                        segs.push({ literal: raw.slice(i) });\n                        break;\n                    }\n                    let bs = 0;\n                    for (let p = open - 1; p >= 0 && raw.charCodeAt(p) === 92; p--)\n                        bs++;\n                    if (bs > 0) {\n                        const prefixStart = i;\n                        const prefixEnd = open - bs;\n                        if (prefixEnd > prefixStart)\n                            segs.push({ literal: raw.slice(prefixStart, prefixEnd) });\n                        if (bs > 1)\n                            segs.push({ literal: '\\\\'.repeat(bs - 1) });\n                        const close = raw.indexOf('}}', open + 2);\n                        if (close === -1) {\n                            segs.push({ literal: raw.slice(open, raw.length) });\n                            i = raw.length;\n                            break;\n                        }\n                        segs.push({ literal: raw.slice(open, close + 2) });\n                        i = close + 2;\n                        continue;\n                    }\n                    else {\n                        if (open > i)\n                            segs.push({ literal: raw.slice(i, open) });\n                        const close = raw.indexOf('}}', open + 2);\n                        if (close === -1) {\n                            segs.push({ literal: raw.slice(open) });\n                            i = raw.length;\n                            break;\n                        }\n                        const expr = raw.slice(open + 2, close).trim();\n                        if (expr)\n                            segs.push({ expr });\n                        else\n                            segs.push({ literal: '' });\n                        i = close + 2;\n                        continue;\n                    }\n                }\n                const hasExpr = segs.some(s => s.expr);\n                const hasEscaped = segs.some(s => s.literal && s.literal.includes('{{'));\n                if (!hasExpr && !hasEscaped)\n                    continue;\n                textNode.__x_tool_ti = true;\n                const evaluators = hasExpr && !inCode ? segs.filter(s => s.expr).map(s => this._createElementEvaluator(s.expr, el)) : [];\n                let exprIndex = 0;\n                const update = () => {\n                    exprIndex = 0;\n                    let out = '';\n                    for (const s of segs) {\n                        if (s.literal != null) {\n                            out += s.literal;\n                        }\n                        else if (s.expr) {\n                            if (inCode) {\n                                out += '{{ ' + s.expr + ' }}';\n                            }\n                            else {\n                                const val = evaluators[exprIndex++]();\n                                out += (val == null ? '' : String(val));\n                            }\n                        }\n                    }\n                    if (textNode.textContent !== out)\n                        textNode.textContent = out;\n                };\n                const dirInfo = { type: 'text-interpolation', expression: raw, update: undefined };\n                this._addDirective(el, dirInfo);\n                const effect = this._createEffect(update, dirInfo);\n                dirInfo.update = effect;\n            }\n        }\n        _walkElements(parent, processor) {\n            let child = parent.firstElementChild;\n            while (child) {\n                const next = child.nextElementSibling;\n                if (processor(child))\n                    this._walkElements(child, processor);\n                child = next;\n            }\n        }\n        _bindDirective(element, directiveName, expression) {\n            const self = this;\n            const isShortBind = directiveName.startsWith(PFX + ':');\n            const type = directiveName.slice(PFX.length + 1);\n            if (isShortBind || type === 'class' || type === STR_STYLE) {\n                element.removeAttribute(directiveName);\n                return self._bindAttributeDirective(element, type, expression);\n            }\n            if (type === 'text' || type === 'html' || type === 'show') {\n                element.removeAttribute(directiveName);\n                return self._bindSimpleDirective(element, expression, type);\n            }\n            const handled = type === 'model' ? (element.removeAttribute(directiveName), self._bindModelDirective(element, expression), true)\n                : type === 'if' ? (element.removeAttribute(directiveName), self._bindIfDirective(element, expression), true)\n                    : type === 'for' ? (element.removeAttribute(directiveName), self._bindForDirective(element, expression), true)\n                        : false;\n            if (handled)\n                return;\n            if (type.indexOf(':') > -1) {\n                const [prefix, rest] = type.split(':', 2);\n                const [suffix, ...mods] = rest.split('.');\n                const modifiers = mods.reduce((acc, m) => { if (m)\n                    acc[m] = true; return acc; }, {});\n                if (prefix === 'on') {\n                    element.removeAttribute(directiveName);\n                    const customDirective = self.framework._getCustomDirective(suffix);\n                    return customDirective\n                        ? self._bindCustomDirective(element, suffix, expression, customDirective, modifiers)\n                        : self._bindEventDirective(element, suffix, expression, modifiers);\n                }\n                element.removeAttribute(directiveName);\n                return self._bindAttributeDirective(element, suffix, expression);\n            }\n        }\n        _createEffect(updateFn, directiveRef) {\n            const effect = () => {\n                this._activeEffect = effect;\n                try {\n                    updateFn();\n                }\n                finally {\n                    this._activeEffect = null;\n                }\n            };\n            effect();\n            this._allEffects.add(effect);\n            if (XTOOL_ENABLE_STATIC_DIRECTIVES && directiveRef && directiveRef._static === undefined) {\n                let found = false;\n                for (const deps of this._propertyDependencies.values()) {\n                    if (deps.includes(effect)) {\n                        found = true;\n                        break;\n                    }\n                }\n                directiveRef._static = !found;\n            }\n            return effect;\n        }\n        _bindSimpleDirective(element, expression, type) {\n            if (type === 'class' || type === STR_STYLE) {\n                return this._bindAttributeDirective(element, type, expression);\n            }\n            const evaluator = this._createElementEvaluator(expression, element);\n            let originalDisplay;\n            if (type === 'show') {\n                const el = element;\n                originalDisplay = el.style[STR_DISPLAY] !== STR_NONE ? el.style[STR_DISPLAY] : undefined;\n            }\n            let _prevShown = undefined;\n            const update = () => {\n                const value = evaluator();\n                const el = element;\n                switch (type) {\n                    case 'text':\n                        el.textContent = String(value);\n                        break;\n                    case 'html':\n                        el.innerHTML = String(value || '');\n                        break;\n                    case 'show':\n                        const next = !!value;\n                        if (_prevShown === next)\n                            return;\n                        _prevShown = next;\n                        console.error(`x-show: ${next} (was ${!next})`);\n                        el.style[STR_DISPLAY] = next ? (originalDisplay || '') : STR_NONE;\n                        break;\n                }\n            };\n            const dirInfo = { type, expression, update: undefined, originalDisplay };\n            this._addDirective(element, dirInfo);\n            const effect = this._createEffect(update, dirInfo);\n            dirInfo.update = effect;\n        }\n        _bindModelDirective(element, property) {\n            const isCheckbox = element.type === 'checkbox';\n            const isNumeric = element.type === 'number' || element.type === 'range';\n            const isMultiSelect = element.tagName === 'SELECT' && element.multiple === true;\n            if (!Reflect.has(this._data, property)) {\n                Reflect.defineProperty(this._data, property, {\n                    'configurable': true,\n                    'enumerable': true,\n                    'writable': true\n                });\n            }\n            const getValueEvaluator = this._createElementEvaluator(property, element);\n            const setValueEvaluator = this._createEvaluator(`${property} = $value`, true);\n            const inferCheckboxValue = () => {\n                if (element.hasAttribute('value'))\n                    return element.value;\n                const loopScope = this._collectLoopScope(element);\n                if (loopScope) {\n                    const keys = Object.keys(loopScope);\n                    if (keys.length === 1)\n                        return loopScope[keys[0]];\n                }\n                return element.value;\n            };\n            const checkboxValue = isCheckbox ? inferCheckboxValue() : undefined;\n            const getInputValue = () => {\n                if (isCheckbox) {\n                    if (Array.isArray(getValueEvaluator()) && checkboxValue !== undefined) {\n                        return element.checked ? checkboxValue : undefined;\n                    }\n                    if (element.hasAttribute('value'))\n                        return element.checked ? element.value : undefined;\n                    return element.checked;\n                }\n                if (isMultiSelect) {\n                    const sel = element;\n                    const values = [];\n                    for (let i = 0; i < sel.options.length; i++) {\n                        const opt = sel.options[i];\n                        if (opt.selected)\n                            values.push(opt.value);\n                    }\n                    return values;\n                }\n                return isNumeric ? parseFloat(element.value) || 0 : element.value;\n            };\n            const setInputValue = (value) => {\n                if (isCheckbox) {\n                    if (Array.isArray(value)) {\n                        const member = element.hasAttribute('value') ? element.value : checkboxValue;\n                        element.checked = member != null ? value.includes(member) : false;\n                    }\n                    else {\n                        element.checked = !!value;\n                    }\n                    return;\n                }\n                if (isMultiSelect) {\n                    const sel = element;\n                    const arr = Array.isArray(value) ? value : [];\n                    for (let i = 0; i < sel.options.length; i++) {\n                        const opt = sel.options[i];\n                        opt.selected = arr.includes(opt.value);\n                    }\n                    return;\n                }\n                element.value = String(value ?? (isNumeric ? 0 : ''));\n            };\n            this._createEffect(() => setInputValue(getValueEvaluator()));\n            const ctx = this._createContextProxy(undefined, element);\n            const updateData = () => {\n                const raw = getInputValue();\n                const currentVal = this._safeExecute(() => getValueEvaluator());\n                if (isCheckbox && Array.isArray(currentVal)) {\n                    const arr = currentVal;\n                    const member = element.hasAttribute('value') ? element.value : checkboxValue;\n                    if (member !== undefined) {\n                        const idx = arr.indexOf(member);\n                        if (element.checked) {\n                            if (idx === -1)\n                                arr.push(member);\n                        }\n                        else if (idx > -1) {\n                            arr.splice(idx, 1);\n                        }\n                    }\n                }\n                else if (isMultiSelect && Array.isArray(currentVal)) {\n                    const arr = currentVal;\n                    arr.splice(0, arr.length);\n                    raw.forEach(v => arr.push(v));\n                }\n                else {\n                    ctx.$value = raw;\n                    this._safeExecute(() => { setValueEvaluator.call(this._createMethodContext(), ctx); });\n                }\n            };\n            const t = element.type;\n            const eventType = (element[STR_TAGNAME] === 'SELECT' || t === 'checkbox' || t === 'radio' || t === 'file') ? 'change' : 'input';\n            this._addEventListenerWithCleanup(element, eventType, updateData);\n            this._addDirective(element, { type: 'model', property });\n        }\n        _bindIfDirective(element, expression) {\n            const self = this;\n            const placeholder = d.createComment('x-if');\n            element.parentNode?.insertBefore(placeholder, element);\n            element.__x_if_anchorParent = placeholder.parentElement || null;\n            const branches = [];\n            const makeActualElement = (el) => {\n                if (el[STR_TAGNAME] === STR_TEMPLATE) {\n                    const wrapper = d.createElement('div');\n                    wrapper.style[STR_DISPLAY] = STR_CONTENTS;\n                    wrapper.appendChild(el.content.cloneNode(true));\n                    return { el: wrapper, isTemplate: true };\n                }\n                return { el: el, isTemplate: false };\n            };\n            const first = makeActualElement(element);\n            const firstEval = self._createElementEvaluator(expression, element);\n            branches.push({ el: first.el, test: firstEval, isTemplate: first.isTemplate });\n            if (!first.isTemplate)\n                first.el.__x_tool_bound = true;\n            const originalNodes = [element];\n            if (FT_IFB) {\n                if (FT_IFB) {\n                    let sib = element.nextElementSibling;\n                    while (sib) {\n                        const isElse = sib.hasAttribute('x-else');\n                        const isElseIf = sib.hasAttribute('x-else-if');\n                        if (!isElse && !isElseIf)\n                            break;\n                        if (sib.hasAttribute('x-else-if')) {\n                            const attr = sib.getAttribute('x-else-if') || '';\n                            const branch = makeActualElement(sib);\n                            const evalFn = self._createElementEvaluator((attr || '').trim(), sib);\n                            branches.push({ el: branch.el, test: evalFn, isTemplate: branch.isTemplate });\n                            if (!branch.isTemplate)\n                                branch.el.__x_tool_bound = true;\n                        }\n                        else {\n                            const branch = makeActualElement(sib);\n                            branches.push({ el: branch.el, test: null, isTemplate: branch.isTemplate });\n                            if (!branch.isTemplate)\n                                branch.el.__x_tool_bound = true;\n                        }\n                        sib.removeAttribute('x-else');\n                        sib.removeAttribute('x-else-if');\n                        originalNodes.push(sib);\n                        sib = sib.nextElementSibling;\n                    }\n                }\n            }\n            let active = -1;\n            for (const orig of originalNodes) {\n                if (orig.parentNode)\n                    orig.parentNode.removeChild(orig);\n            }\n            const mountBranch = (idx) => {\n                if (idx < 0)\n                    return;\n                const b = branches[idx];\n                if (!b.el.__x_tool_bound) {\n                    self._parseDirectives(b.el);\n                    b.el.__x_tool_bound = true;\n                }\n                element.__x_if_current?.parentNode?.removeChild(element.__x_if_current);\n                if (!b.el.parentNode) {\n                    placeholder.parentNode?.insertBefore(b.el, placeholder.nextSibling);\n                }\n                element.__x_if_current = b.el;\n                active = idx;\n            };\n            const unmountBranch = (idx, cb) => {\n                if (idx < 0) {\n                    if (cb)\n                        cb();\n                    return;\n                }\n                const b = branches[idx];\n                if (b.el.parentNode) {\n                    if (b.el.parentNode)\n                        b.el.parentNode.removeChild(b.el);\n                    if (cb)\n                        cb();\n                }\n                else if (cb)\n                    cb();\n                active = -1;\n            };\n            const update = () => {\n                let next = -1;\n                for (let i = 0; i < branches[STR_LENGTH]; i++) {\n                    const b = branches[i];\n                    const pass = b.test ? !!b.test() : true;\n                    if (pass) {\n                        next = i;\n                        break;\n                    }\n                }\n                if (next === active)\n                    return;\n                if (active !== -1) {\n                    unmountBranch(active, () => mountBranch(next));\n                }\n                else {\n                    mountBranch(next);\n                }\n            };\n            const effect = self._createEffect(update);\n            self._addDirective(element, { type: 'if', expression, update: effect });\n        }\n        _bindEventDirective(element, eventName, expression, modifiers) {\n            const self = this;\n            const trimmed = (expression || '').trim();\n            const arrow = self._extractArrowFunction(trimmed);\n            const opts = modifiers ? {\n                once: !!modifiers.once,\n                passive: !!modifiers.passive,\n                capture: !!modifiers.capture,\n            } : undefined;\n            const onlySelf = !!modifiers?.self;\n            const shouldPrevent = !!modifiers?.prevent;\n            const shouldStop = !!modifiers?.stop;\n            const isOutside = !!modifiers?.outside;\n            const deferExec = !!modifiers?.defer;\n            const keyAliasMap = {\n                enter: ['enter'],\n                esc: ['escape', 'esc'],\n                escape: ['escape', 'esc'],\n                space: [' ', 'space', 'spacebar'],\n                tab: ['tab'],\n                backspace: ['backspace'],\n                delete: ['delete', 'del'],\n                del: ['delete', 'del'],\n                arrowup: ['arrowup', 'up'],\n                arrowdown: ['arrowdown', 'down'],\n                arrowleft: ['arrowleft', 'left'],\n                arrowright: ['arrowright', 'right'],\n                home: ['home'],\n                end: ['end'],\n                pageup: ['pageup'],\n                pagedown: ['pagedown']\n            };\n            const comboRequirements = {\n                ctrl: !!modifiers?.ctrl,\n                alt: !!modifiers?.alt,\n                shift: !!modifiers?.shift,\n                meta: !!modifiers?.meta,\n            };\n            const buttonMap = { left: 0, middle: 1, right: 2 };\n            const touchSingle = !!modifiers?.single;\n            const touchMulti = !!modifiers?.multi;\n            const modifierKeys = modifiers ? _Okeys(modifiers) : [];\n            const allowedKeys = [];\n            for (const m of modifierKeys) {\n                const aliases = keyAliasMap[m.toLowerCase()];\n                if (aliases)\n                    allowedKeys.push(...aliases);\n            }\n            const allowedButtons = [];\n            for (const m of modifierKeys) {\n                const btn = buttonMap[m.toLowerCase()];\n                if (btn !== undefined)\n                    allowedButtons.push(btn);\n            }\n            const needKeyCheck = allowedKeys.length > 0 || comboRequirements.ctrl || comboRequirements.alt || comboRequirements.shift || comboRequirements.meta;\n            const needButtonCheck = allowedButtons.length > 0;\n            const needTouchCheck = touchSingle || touchMulti;\n            const passesFilters = (event) => {\n                const path = event.composedPath ? event.composedPath() : null;\n                const tgt = (path && path.length ? path[0] : event.target);\n                if (isOutside) {\n                    if (!tgt)\n                        return false;\n                    if (element instanceof Node && (element === tgt || element.contains(tgt)))\n                        return false;\n                }\n                if (onlySelf && event.target !== element)\n                    return false;\n                if (needTouchCheck) {\n                    if (event instanceof TouchEvent) {\n                        const tCount = event.touches.length;\n                        if (touchSingle && tCount !== 1)\n                            return false;\n                        if (touchMulti && tCount < 2)\n                            return false;\n                    }\n                    else\n                        return false;\n                }\n                if (needButtonCheck) {\n                    if (event instanceof MouseEvent) {\n                        if (!allowedButtons.includes(event.button))\n                            return false;\n                    }\n                    else\n                        return false;\n                }\n                if (needKeyCheck) {\n                    if (!(event instanceof KeyboardEvent))\n                        return false;\n                    const k = (event.key || '').toLowerCase();\n                    if (allowedKeys.length > 0 && !allowedKeys.includes(k))\n                        return false;\n                    if (comboRequirements.ctrl && !event.ctrlKey)\n                        return false;\n                    if (comboRequirements.alt && !event.altKey)\n                        return false;\n                    if (comboRequirements.shift && !event.shiftKey)\n                        return false;\n                    if (comboRequirements.meta && !event.metaKey)\n                        return false;\n                }\n                return true;\n            };\n            const hasExpr = !!trimmed;\n            let runExpr = null;\n            const thisCtx = self._createMethodContext();\n            if (arrow) {\n                const compiledArrow = self._compileArrowForEvent(arrow.paramsList, arrow.body, arrow.isBlock);\n                const mapArgs = arrow.paramsList.length\n                    ? (event) => arrow.paramsList.map((_, idx) => (idx === 0 ? event : idx === 1 ? element : undefined))\n                    : () => [];\n                runExpr = (event) => {\n                    const ctx = self._createContextProxy(event, element);\n                    compiledArrow.call(thisCtx, ctx, ...mapArgs(event));\n                };\n            }\n            else if (hasExpr) {\n                const isStatement = trimmed.includes(';');\n                const executor = self._createEvaluator(trimmed, isStatement);\n                runExpr = (event) => {\n                    const ctx = self._createContextProxy(event, element);\n                    const result = executor.call(thisCtx, ctx);\n                    if (typeof result === 'function')\n                        result.call(thisCtx, event);\n                };\n            }\n            const createEventHandler = (event) => {\n                if (!passesFilters(event))\n                    return;\n                if (shouldPrevent && typeof event.preventDefault === 'function')\n                    event.preventDefault();\n                if (shouldStop && typeof event.stopPropagation === 'function')\n                    event.stopPropagation();\n                if (!runExpr)\n                    return;\n                if (deferExec && typeof queueMicrotask === 'function') {\n                    const ev = event;\n                    queueMicrotask(() => self._safeExecute(() => runExpr(ev)));\n                    return;\n                }\n                self._safeExecute(() => runExpr(event));\n            };\n            const cfg = this.framework._getConfig();\n            const canDelegate = !!cfg.delegate && EV_DELEGATED.includes(eventName);\n            if (!isOutside && canDelegate) {\n                const remover = this.framework._registerDelegated(element, eventName, { filter: (e) => passesFilters(e), run: (e) => createEventHandler(e), once: !!modifiers?.once, comp: this });\n                this._addCleanupFunction(remover);\n            }\n            else {\n                const target = isOutside ? (element?.ownerDocument || d || document) : element;\n                self._addEventListenerWithCleanup(target, eventName, createEventHandler, opts);\n            }\n        }\n        _createEvaluator(expression, isStatement = false) {\n            const key = `${isStatement ? 's' : 'r'}:${expression}`;\n            let fn = this._expressionCache.get(key);\n            if (!fn) {\n                fn = new Function('ctx', `with(ctx){${isStatement ? expression : `return (${expression})`}}`);\n                this._expressionCache.set(key, fn);\n            }\n            return fn;\n        }\n        _createElementEvaluator(expression, element) {\n            const self = this;\n            const compiled = self._createEvaluator(expression);\n            return () => this._safeExecute(() => compiled.call(self._createMethodContext(), self._createContextProxy(undefined, element)));\n        }\n        _extractArrowFunction(expression) {\n            let m = expression.match(/^\\s*\\(\\s*([^)]*?)\\s*\\)\\s*=>\\s*([\\s\\S]+)$/);\n            if (!m)\n                m = expression.match(/^\\s*([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*=>\\s*([\\s\\S]+)$/);\n            if (!m)\n                return null;\n            const params = (m[1] || '')\n                .split(',')\n                .map(p => p.trim())\n                .filter(Boolean);\n            const body = (m[2] || '').trim();\n            const isBlock = body.startsWith('{') && body.endsWith('}');\n            const finalBody = isBlock ? body.slice(1, -1) : body;\n            return { paramsList: params, body: finalBody, isBlock };\n        }\n        _compileArrowForEvent(params, body, isBlock) {\n            const content = isBlock ? body : 'return ( ' + body + ' );';\n            return new Function('ctx', ...params, 'with(ctx){ ' + content + ' }');\n        }\n        _wrapData(data, parentKey) {\n            if (!(Object.getPrototypeOf(data) === Object.prototype || ARRAY_ISARRAY(data)))\n                return data;\n            const self = this;\n            if (!this._deepReactiveCache)\n                this._deepReactiveCache = new WeakMap();\n            if (this._deepReactiveCache.has(data))\n                return this._deepReactiveCache.get(data);\n            const proxy = new Proxy(data, {\n                get: (target, p, receiver) => {\n                    if (ARRAY_ISARRAY(target)) {\n                        if (p === Symbol.iterator) {\n                            self._trackDependency(parentKey);\n                            return Reflect.get(target, p, receiver);\n                        }\n                        if (p === 'length' || (typeof p === 'string' && /^\\d+$/.test(p))) {\n                            self._trackDependency(parentKey);\n                        }\n                    }\n                    else {\n                        self._trackDependency(parentKey);\n                    }\n                    const value = Reflect.get(target, p, receiver);\n                    if (ARRAY_ISARRAY(target) && typeof value === 'function' && ['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse', 'copyWithin', 'fill'].includes(p)) {\n                        return function (...args) {\n                            if (self._isInComputedEvaluation) {\n                                const name = String(p);\n                                throw new Error(`[x-tool] Mutation via '${String(parentKey)}.${name}()' is not allowed during computed evaluation.`);\n                            }\n                            const arr = target;\n                            const beforeLen = arr.length;\n                            const beforeFirst = arr[0];\n                            const beforeLast = arr[beforeLen - 1];\n                            const result = value.apply(target, args);\n                            if (arr.length !== beforeLen || arr[0] !== beforeFirst || arr[arr.length - 1] !== beforeLast) {\n                                self._onDataChange(parentKey);\n                            }\n                            return result;\n                        };\n                    }\n                    const type = typeof value;\n                    if (value && type === 'object') {\n                        return self._wrapData(value, parentKey);\n                    }\n                    return value;\n                },\n                ownKeys: (target) => { return Reflect.ownKeys(target); },\n                has: (target, key) => { return Reflect.has(target, key); },\n                set: (target, p, value) => {\n                    if (self._isDestroyed)\n                        return true;\n                    if (self._isInComputedEvaluation) {\n                        const key = String(parentKey) + (typeof p === 'symbol' ? '' : '.' + String(p));\n                        throw new Error(`[x-tool] Mutation of '${key}' is not allowed during computed evaluation.`);\n                    }\n                    if (typeof p === 'symbol')\n                        return true;\n                    const had = Reflect.has(target, p);\n                    const oldValue = had ? Reflect.get(target, p) : undefined;\n                    if (value && typeof value === 'object') {\n                        value = self._wrapData(value, typeof p === 'symbol' ? parentKey : (String(parentKey) + '.' + String(p)));\n                    }\n                    if (!had) {\n                        try {\n                            Reflect.defineProperty(target, p, {\n                                configurable: true,\n                                enumerable: true,\n                                writable: true,\n                                value\n                            });\n                        }\n                        catch {\n                            Reflect.set(target, p, value);\n                        }\n                        self._onDataChange(parentKey);\n                        return true;\n                    }\n                    if (oldValue === value)\n                        return true;\n                    Reflect.set(target, p, value);\n                    self._onDataChange(parentKey);\n                    return true;\n                },\n                deleteProperty: (target, p) => {\n                    if (self._isInComputedEvaluation) {\n                        const key = String(parentKey) + (typeof p === 'symbol' ? '' : '.' + String(p));\n                        throw new Error(`[x-tool] Deletion of '${key}' is not allowed during computed evaluation.`);\n                    }\n                    return Reflect.deleteProperty(target, p);\n                }\n            });\n            this._deepReactiveCache.set(data, proxy);\n            return proxy;\n        }\n        _createReactiveData(data) {\n            const self = this;\n            return new Proxy(data, {\n                get: (target, property, receiver) => {\n                    const value = Reflect.get(target, property, receiver);\n                    if (property === Symbol.iterator)\n                        return value;\n                    if (typeof property !== 'symbol') {\n                        self._trackDependency(property);\n                    }\n                    if (value && typeof value == 'object') {\n                        return self._wrapData(value, property);\n                    }\n                    return value;\n                },\n                ownKeys: (target) => Reflect.ownKeys(target),\n                has: (target, key) => Reflect.has(target, key),\n                set: (target, property, value, receiver) => {\n                    if (self._isDestroyed)\n                        return true;\n                    if (self._isInComputedEvaluation) {\n                        throw new Error(`[x-tool] Mutation of '${String(property)}' is not allowed during computed evaluation.`);\n                    }\n                    if (property === Symbol.iterator && ARRAY_ISARRAY(target))\n                        return value;\n                    const oldValue = Reflect.get(target, property);\n                    if (value && typeof value === 'object') {\n                        value = self._wrapData(value, property);\n                    }\n                    if (oldValue === value)\n                        return true;\n                    const had = Reflect.has(target, property);\n                    if (!had) {\n                        try {\n                            Reflect.defineProperty(target, property, {\n                                configurable: true,\n                                enumerable: true,\n                                writable: true,\n                                value\n                            });\n                        }\n                        catch {\n                            Reflect.set(target, property, value, receiver);\n                        }\n                    }\n                    else {\n                        Reflect.set(target, property, value, receiver);\n                    }\n                    this._onDataChange(property);\n                    if (this._propUpdateActive && property !== '$props') {\n                        const pc = target.$props;\n                        if (pc)\n                            pc[property] = value;\n                        const eff = this._propEffects[property];\n                        if (eff && !this._runningPropEffect) {\n                            this._runningPropEffect = true;\n                            this._safeExecute(() => eff.call(this._createMethodContext(), value, oldValue));\n                            this._runningPropEffect = false;\n                        }\n                    }\n                    return true;\n                }\n            });\n        }\n        _createMethodContext(_includeComputed = true) {\n            const specials = {\n                '$log': (..._args) => { },\n                '$destroy': () => this.destroy(),\n                '$forceUpdate': () => this._scheduleRender(),\n                '$addCleanupFunction': (fn) => this._addCleanupFunction(fn),\n                '$nextTick': (cb) => {\n                    if (cb) {\n                        this._nextTickQueue.push(cb);\n                        if (!this._renderScheduled)\n                            queueMicrotask(() => {\n                                if (!this._renderScheduled && this._nextTickQueue.length) {\n                                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                                    for (const fn of q) {\n                                        try {\n                                            fn();\n                                        }\n                                        catch { }\n                                    }\n                                }\n                            });\n                        return;\n                    }\n                    return new Promise(resolve => {\n                        this._nextTickQueue.push(() => resolve());\n                        if (!this._renderScheduled)\n                            queueMicrotask(() => {\n                                if (!this._renderScheduled && this._nextTickQueue.length) {\n                                    const q = this._nextTickQueue.splice(0, this._nextTickQueue.length);\n                                    for (const fn of q) {\n                                        try {\n                                            fn();\n                                        }\n                                        catch { }\n                                    }\n                                }\n                            });\n                    });\n                },\n                '$el': this._element,\n                '$id': this._id,\n                '$isMounted': this._isMounted,\n                '$isDestroyed': this._isDestroyed,\n                '$parent': this._parent,\n                '$children': this._children,\n                '$mutate': (fn) => {\n                    const prevMethod = this._isInMethodExecution;\n                    if (this._isInComputedEvaluation) {\n                        throw new Error('[x-tool] $mutate cannot be used inside computed evaluation; computed getters must be pure.');\n                    }\n                    this._isInMethodExecution = false;\n                    try {\n                        return typeof fn === 'function' ? fn() : undefined;\n                    }\n                    finally {\n                        this._isInMethodExecution = prevMethod;\n                        this._scheduleRender();\n                    }\n                }\n            };\n            return new Proxy(this._data, {\n                get: (target, propStr) => {\n                    if (propStr in target) {\n                        this._trackDependency(propStr);\n                        const v = target[propStr];\n                        return v;\n                    }\n                    if (FT_C && (propStr in this._computed))\n                        return this._getComputedValue(propStr);\n                    if (propStr in specials)\n                        return specials[propStr];\n                    return this._methods[propStr];\n                },\n                set: (_target, propStr, value) => {\n                    if (this._isInComputedEvaluation) {\n                        throw new Error(`[x-tool] Mutation of '${String(propStr)}' is not allowed during computed evaluation.`);\n                    }\n                    this._data[propStr] = value;\n                    return true;\n                }\n            });\n        }\n        _createContextProxy(event, targetElement) {\n            const component = this;\n            const mergedScope = targetElement ? this._collectLoopScope(targetElement) : null;\n            const scopeKeys = mergedScope ? new Set(_Okeys(mergedScope)) : new Set();\n            const gWindow = (typeof window !== 'undefined' ? window : undefined);\n            const gDocument = (typeof document !== 'undefined' ? document : undefined);\n            const cfg = this.framework._getConfig();\n            const sandbox = !!cfg.sandboxExpressions;\n            const allow = new Set((cfg.allowGlobals || []).map(s => String(s)));\n            const _lastListenerByTarget = new WeakMap();\n            const wrapTarget = (t) => {\n                if (!t)\n                    return t;\n                const hasAdd = typeof t.addEventListener === 'function';\n                if (!hasAdd)\n                    return t;\n                const handlerMap = new WeakMap();\n                const makeKey = (event, options) => {\n                    try {\n                        return event + '|' + (options === undefined ? '' : (typeof options === 'object' ? JSON.stringify(options) : String(options)));\n                    }\n                    catch {\n                        return event + '|';\n                    }\n                };\n                return new Proxy(t, {\n                    get(target, prop, receiver) {\n                        if (prop === 'addEventListener') {\n                            return function (event, handler, options) {\n                                const inv = component._currentInvoker || '__anonymous__';\n                                const eKey = makeKey(event, options);\n                                let invMap = _lastListenerByTarget.get(target);\n                                if (!invMap) {\n                                    invMap = new Map();\n                                    _lastListenerByTarget.set(target, invMap);\n                                }\n                                let evMap = invMap.get(inv);\n                                if (!evMap) {\n                                    evMap = new Map();\n                                    invMap.set(inv, evMap);\n                                }\n                                const prev = evMap.get(eKey);\n                                if (prev) {\n                                    try {\n                                        target.removeEventListener(event, prev.handler, prev.options);\n                                    }\n                                    catch { }\n                                    try {\n                                        prev.remover && prev.remover();\n                                    }\n                                    catch { }\n                                    evMap.delete(eKey);\n                                }\n                                target.addEventListener(event, handler, options);\n                                const remover = component._addCleanupFunction(() => {\n                                    try {\n                                        target.removeEventListener(event, handler, options);\n                                    }\n                                    catch { }\n                                });\n                                try {\n                                    if (typeof handler === 'function' && remover) {\n                                        let m = handlerMap.get(handler);\n                                        if (!m) {\n                                            m = new Map();\n                                            handlerMap.set(handler, m);\n                                        }\n                                        m.set(eKey, remover);\n                                    }\n                                }\n                                catch { }\n                                evMap.set(eKey, { handler, options, remover });\n                            };\n                        }\n                        if (prop === 'removeEventListener') {\n                            return function (event, handler, options) {\n                                try {\n                                    target.removeEventListener(event, handler, options);\n                                }\n                                catch { }\n                                const key = makeKey(event, options);\n                                try {\n                                    if (typeof handler === 'function') {\n                                        const m = handlerMap.get(handler);\n                                        if (m) {\n                                            const rem = m.get(key);\n                                            if (rem) {\n                                                try {\n                                                    rem();\n                                                }\n                                                catch { }\n                                                ;\n                                                m.delete(key);\n                                            }\n                                            if (m.size === 0)\n                                                handlerMap.delete(handler);\n                                        }\n                                    }\n                                }\n                                catch { }\n                                const invMap = _lastListenerByTarget.get(target);\n                                if (invMap) {\n                                    for (const [invKey, evMap] of invMap) {\n                                        const rec = evMap.get(key);\n                                        if (rec && rec.handler === handler) {\n                                            try {\n                                                rec.remover && rec.remover();\n                                            }\n                                            catch { }\n                                            evMap.delete(key);\n                                            if (evMap.size === 0)\n                                                invMap.delete(invKey);\n                                            break;\n                                        }\n                                    }\n                                }\n                            };\n                        }\n                        if (prop === 'querySelector') {\n                            return function (sel) { const res = target.querySelector(sel); return wrapTarget(res); };\n                        }\n                        if (prop === 'querySelectorAll') {\n                            return function (sel) { const list = target.querySelectorAll(sel); return Array.from(list).map(wrapTarget); };\n                        }\n                        if (prop === 'getElementById') {\n                            return function (id) { const res = target.getElementById(id); return wrapTarget(res); };\n                        }\n                        if (prop === 'document') {\n                            const doc = target.document;\n                            return wrapTarget(doc) || doc;\n                        }\n                        if (prop === 'body' && target === gDocument) {\n                            const b = target.body;\n                            return wrapTarget(b) || b;\n                        }\n                        if (prop === 'defaultView' && target === gDocument) {\n                            const w = target.defaultView;\n                            return wrapTarget(w) || w;\n                        }\n                        return Reflect.get(target, prop, receiver);\n                    }\n                });\n            };\n            const _timeoutRemovers = new Map();\n            const _intervalRemovers = new Map();\n            const _rafRemovers = new Map();\n            const ctxSetTimeout = (fn, ms, ...args) => {\n                const key = component._currentInvoker || '__anonymous__';\n                const prev = component._lastTimeoutByInvoker.get(key);\n                if (prev) {\n                    try {\n                        gWindow?.clearTimeout?.(prev.id);\n                    }\n                    catch { }\n                    ;\n                    try {\n                        prev.remover && prev.remover();\n                    }\n                    catch { }\n                }\n                const id = gWindow?.setTimeout?.(fn, ms, ...args);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.clearTimeout?.(id);\n                    }\n                    catch { } });\n                    _timeoutRemovers.set(id, remover);\n                    component._lastTimeoutByInvoker.set(key, { id, remover });\n                }\n                return id;\n            };\n            const ctxSetInterval = (fn, ms, ...args) => {\n                const key = component._currentInvoker || '__anonymous__';\n                const prev = component._lastIntervalByInvoker.get(key);\n                if (prev) {\n                    try {\n                        gWindow?.clearInterval?.(prev.id);\n                    }\n                    catch { }\n                    ;\n                    try {\n                        prev.remover && prev.remover();\n                    }\n                    catch { }\n                }\n                const id = gWindow?.setInterval?.(fn, ms, ...args);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.clearInterval?.(id);\n                    }\n                    catch { } });\n                    _intervalRemovers.set(id, remover);\n                    component._lastIntervalByInvoker.set(key, { id, remover });\n                }\n                return id;\n            };\n            const ctxRequestAnimationFrame = (cb) => {\n                const key = component._currentInvoker || '__anonymous__';\n                const prev = component._lastRafByInvoker.get(key);\n                if (prev) {\n                    try {\n                        gWindow?.cancelAnimationFrame?.(prev.id);\n                    }\n                    catch { }\n                    ;\n                    try {\n                        prev.remover && prev.remover();\n                    }\n                    catch { }\n                }\n                const id = gWindow?.requestAnimationFrame?.(cb);\n                if (id != null) {\n                    const remover = component._addCleanupFunction(() => { try {\n                        gWindow?.cancelAnimationFrame?.(id);\n                    }\n                    catch { } });\n                    _rafRemovers.set(id, remover);\n                    component._lastRafByInvoker.set(key, { id, remover });\n                }\n                return id;\n            };\n            const wrapObserverCtor = (Orig, kind) => {\n                if (!Orig)\n                    return undefined;\n                const Wrapped = function (...args) {\n                    const inst = new Orig(...args);\n                    const key = component._currentInvoker || '__anonymous__';\n                    let store = kind === 'mutation' ? component._lastObserverByInvoker.mutation : kind === 'resize' ? component._lastObserverByInvoker.resize : component._lastObserverByInvoker.intersection;\n                    const prev = store.get(key);\n                    if (prev) {\n                        try {\n                            prev.inst.disconnect();\n                        }\n                        catch { }\n                        ;\n                        try {\n                            prev.remover && prev.remover();\n                        }\n                        catch { }\n                    }\n                    const remover = component._addCleanupFunction(() => { try {\n                        inst.disconnect();\n                    }\n                    catch { } });\n                    store.set(key, { inst, remover });\n                    return inst;\n                };\n                Wrapped.prototype = Orig.prototype;\n                return Wrapped;\n            };\n            const specials = {\n                '$target': targetElement || null,\n                '$event': event || null,\n                ...(sandbox && !allow.has('setTimeout') ? {} : { 'setTimeout': ctxSetTimeout }),\n                ...(sandbox && !allow.has('clearTimeout') ? {} : { 'clearTimeout': (id) => { try {\n                        gWindow?.clearTimeout?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _timeoutRemovers.get(id);\n                            if (r) {\n                                r();\n                                _timeoutRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('setInterval') ? {} : { 'setInterval': ctxSetInterval }),\n                ...(sandbox && !allow.has('clearInterval') ? {} : { 'clearInterval': (id) => { try {\n                        gWindow?.clearInterval?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _intervalRemovers.get(id);\n                            if (r) {\n                                r();\n                                _intervalRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('requestAnimationFrame') ? {} : { 'requestAnimationFrame': ctxRequestAnimationFrame }),\n                ...(sandbox && !allow.has('cancelAnimationFrame') ? {} : { 'cancelAnimationFrame': (id) => { try {\n                        gWindow?.cancelAnimationFrame?.(id);\n                    }\n                    catch { }\n                    finally {\n                        try {\n                            const r = _rafRemovers.get(id);\n                            if (r) {\n                                r();\n                                _rafRemovers.delete(id);\n                            }\n                        }\n                        catch { }\n                    } } }),\n                ...(sandbox && !allow.has('MutationObserver') ? {} : { 'MutationObserver': wrapObserverCtor(gWindow?.MutationObserver, 'mutation') }),\n                ...(sandbox && !allow.has('ResizeObserver') ? {} : { 'ResizeObserver': wrapObserverCtor(gWindow?.ResizeObserver, 'resize') }),\n                ...(sandbox && !allow.has('IntersectionObserver') ? {} : { 'IntersectionObserver': wrapObserverCtor(gWindow?.IntersectionObserver, 'intersection') }),\n                ...(sandbox && !allow.has('window') ? {} : { 'window': wrapTarget(gWindow) }),\n                ...(sandbox && !allow.has('document') ? {} : { 'document': wrapTarget(gDocument) })\n            };\n            return new Proxy({}, {\n                get: (_t, propStr) => {\n                    if (mergedScope && propStr in mergedScope)\n                        return mergedScope[propStr];\n                    if (propStr in component._data)\n                        return component._data[propStr];\n                    if (propStr in component._computed)\n                        return component._getComputedValue(propStr);\n                    if (propStr in component._methods)\n                        return component._methods[propStr];\n                    if (propStr in specials)\n                        return specials[propStr];\n                    return undefined;\n                },\n                set: (_t, propStr, value) => {\n                    if (mergedScope && scopeKeys.has(propStr)) {\n                        mergedScope[propStr] = value;\n                    }\n                    else {\n                        component._data[propStr] = value;\n                    }\n                    return true;\n                },\n                has: (_t, propStr) => !!(mergedScope && propStr in mergedScope) ||\n                    propStr in component._data ||\n                    propStr in component._computed ||\n                    propStr in component._methods ||\n                    propStr in specials\n            });\n        }\n        _bindCustomDirective(element, _name, expression, directive, modifiers) {\n            const self = this;\n            const evaluator = self._createElementEvaluator(expression, element);\n            const directiveInfo = { type: 'custom', expression, customDirective: directive };\n            if (directive.bind) {\n                self._safeExecute(() => directive.bind(element, evaluator(), expression, self, modifiers, evaluator));\n            }\n            const update = () => {\n                if (directive.update)\n                    self._safeExecute(() => directive.update(element, evaluator(), expression, self, modifiers, evaluator));\n            };\n            const effect = self._createEffect(update);\n            directiveInfo.update = effect;\n            self._addDirective(element, directiveInfo);\n        }\n        _bindAttributeDirective(element, attributeName, expression) {\n            const self = this;\n            const evaluator = self._createElementEvaluator(expression, element);\n            if (attributeName === 'class') {\n                const el = element;\n                if (!self._initialClassSets.get(el)) {\n                    const baseSet = new Set();\n                    const oc = el.className || '';\n                    if (oc)\n                        for (const cls of oc.split(/\\s+/)) {\n                            if (cls)\n                                baseSet.add(cls);\n                        }\n                    self._initialClassSets.set(el, baseSet);\n                }\n            }\n            const elAny = element;\n            let propName = null;\n            if (attributeName in elAny)\n                propName = attributeName;\n            else {\n                const camel = attributeName.replace(/-([a-z])/g, (_, c) => c.toUpperCase());\n                if (camel in elAny)\n                    propName = camel;\n                else if (attributeName.toLowerCase() === 'readonly' && 'readOnly' in elAny)\n                    propName = 'readOnly';\n            }\n            const isBooleanProp = !!(propName && typeof elAny[propName] === 'boolean');\n            const hasNonFunctionProp = !!(propName && (propName in elAny) && typeof elAny[propName] !== 'function');\n            const isKnownBooleanAttr = !!ReactiveComponent._BA[attributeName.toLowerCase()];\n            const update = () => {\n                const value = evaluator();\n                if (attributeName === 'class') {\n                    const el = element;\n                    const base = self._initialClassSets.get(el);\n                    if (typeof value === 'string') {\n                        el.className = base && base.size ? [...base].join(' ') + (value ? ' ' + value : '') : value || '';\n                    }\n                    else if (ARRAY_ISARRAY(value)) {\n                        if (base && base.size)\n                            el.className = [...base, ...value.filter(Boolean)].join(' ');\n                        else\n                            el.className = value.filter(Boolean).join(' ');\n                    }\n                    else if (value && typeof value === 'object') {\n                        if (base && base.size)\n                            el.className = [...base].join(' ');\n                        for (const raw in value) {\n                            const on = !!value[raw];\n                            if (!raw)\n                                continue;\n                            const tokens = raw.split(/\\s+/);\n                            for (let i = 0; i < tokens.length; i++) {\n                                const tk = tokens[i];\n                                if (!tk)\n                                    continue;\n                                el.classList.toggle(tk, on);\n                            }\n                        }\n                    }\n                    else if (value == null && base && base.size) {\n                        el.className = [...base].join(' ');\n                    }\n                    else if (value == null) {\n                        el.removeAttribute('class');\n                    }\n                    return;\n                }\n                if (attributeName === STR_STYLE) {\n                    const el = element;\n                    if (typeof value === 'string') {\n                        el.style.cssText = value;\n                        return;\n                    }\n                    if (value && typeof value === 'object') {\n                        Object.assign(el.style, value);\n                        return;\n                    }\n                    if (value == null)\n                        el.removeAttribute('style');\n                    return;\n                }\n                if ((isBooleanProp && propName) || isKnownBooleanAttr) {\n                    const boolVal = !!value;\n                    if (propName && isBooleanProp)\n                        elAny[propName] = boolVal;\n                    if (boolVal)\n                        element.setAttribute(attributeName, '');\n                    else\n                        element.removeAttribute(attributeName);\n                    return;\n                }\n                let normalized = null;\n                if (value && typeof value === 'object') {\n                    const parts = [];\n                    for (const k in value) {\n                        if (value[k])\n                            parts.push(k);\n                    }\n                    normalized = parts.length ? parts.join(' ') : null;\n                }\n                else if (value !== null && value !== undefined) {\n                    normalized = String(value);\n                }\n                if (hasNonFunctionProp && propName) {\n                    if (normalized !== null) {\n                        try {\n                            elAny[propName] = normalized;\n                        }\n                        catch (e) {\n                            try {\n                                element.setAttribute(attributeName, normalized);\n                            }\n                            catch { }\n                        }\n                    }\n                    else {\n                        element.removeAttribute(attributeName);\n                    }\n                    return;\n                }\n                if (normalized !== null) {\n                    const cur = element.getAttribute(attributeName);\n                    if (cur !== normalized)\n                        element.setAttribute(attributeName, normalized);\n                }\n                else {\n                    if (element.hasAttribute(attributeName))\n                        element.removeAttribute(attributeName);\n                }\n            };\n            const effect = self._createEffect(update);\n            self._addDirective(element, { type: 'bind', expression, update: effect });\n        }\n        _collectLoopScope(el) {\n            if (!el)\n                return null;\n            if (!el.parentElement) {\n                const cur = el.__x_if_current;\n                if (cur && cur.parentElement) {\n                    el = cur;\n                }\n                else {\n                    const anchorParent = el.__x_if_anchorParent;\n                    if (anchorParent)\n                        el = anchorParent;\n                }\n            }\n            const merged = {};\n            let node = el;\n            while (node) {\n                const scope = this._loopScopes.get(node);\n                if (scope)\n                    Object.assign(merged, scope);\n                if (node === this.element)\n                    break;\n                node = node.parentElement;\n            }\n            return _Okeys(merged).length ? merged : null;\n        }\n        _updateElementDirectives(root) {\n            for (const [element, directives] of this._directives) {\n                for (const directive of directives) {\n                    if ((root === element || (element instanceof Element && root.contains(element))) && directive.update) {\n                        directive.update();\n                    }\n                }\n            }\n        }\n        _bindForDirective(element, expression) {\n            const self = this;\n            const match = expression.trim().match(/^(?:\\(\\s*([^,\\s]+)\\s*(?:,\\s*([^\\)]+))?\\s*\\)|([^,\\s]+))\\s+(in|of)\\s+(.+)$/);\n            if (!match) {\n                return;\n            }\n            const itemVar = match[1] || match[3];\n            const indexVar = match[2];\n            const listCode = match[5];\n            const placeholder = d.createComment('x-for');\n            element.parentNode?.insertBefore(placeholder, element);\n            let templateToClone;\n            if (element[STR_TAGNAME] === STR_TEMPLATE) {\n                templateToClone = d.createElement('div');\n                templateToClone.style[STR_DISPLAY] = STR_CONTENTS;\n                templateToClone.appendChild(element.content.cloneNode(true));\n                element.parentNode?.removeChild(element);\n            }\n            else {\n                templateToClone = element;\n                element.parentNode?.removeChild(element);\n            }\n            const contextAnchor = placeholder.parentElement || self.element;\n            const listEval = self._createElementEvaluator(listCode.trim(), contextAnchor);\n            const instances = [];\n            const createScope = (item, idxOrKey) => {\n                const scope = { [itemVar]: item };\n                if (indexVar)\n                    scope[indexVar] = idxOrKey;\n                return scope;\n            };\n            const update = () => {\n                const norm = self._safeExecute(() => {\n                    const result = listEval();\n                    if (_AisArr(result))\n                        return { list: result, keys: null };\n                    if (typeof Map !== 'undefined' && result instanceof Map) {\n                        return { list: _Afrom(result.values()), keys: _Afrom(result.keys()) };\n                    }\n                    if (typeof Set !== 'undefined' && result instanceof Set) {\n                        return { list: _Afrom(result.values()), keys: null };\n                    }\n                    if (result && typeof result[Symbol.iterator] === 'function') {\n                        return { list: _Afrom(result), keys: null };\n                    }\n                    if (result && typeof result === 'object') {\n                        const keys = Object.keys(result);\n                        const list = keys.map(k => result[k]);\n                        return { list, keys };\n                    }\n                    return { list: [], keys: null };\n                }, { list: [], keys: null });\n                const list = norm.list;\n                const keysArr = norm.keys;\n                if (instances.length > list.length) {\n                    while (instances.length > list.length) {\n                        const inst = instances.pop();\n                        if (inst.parentNode)\n                            inst.parentNode.removeChild(inst);\n                    }\n                }\n                const minLen = Math.min(instances.length, list.length);\n                for (let i = 0; i < minLen; i++) {\n                    const inst = instances[i];\n                    const keyVal = keysArr ? keysArr[i] : i;\n                    self._loopScopes.set(inst, createScope(list[i], keyVal));\n                    self._updateElementDirectives(inst);\n                }\n                if (list.length > instances.length) {\n                    const frag = d.createDocumentFragment();\n                    const start = instances.length;\n                    for (let i = start; i < list.length; i++) {\n                        const clone = templateToClone.cloneNode(true);\n                        clone.removeAttribute('x-for');\n                        const keyVal = keysArr ? keysArr[i] : i;\n                        self._loopScopes.set(clone, createScope(list[i], keyVal));\n                        try {\n                            self._parseDirectives(clone);\n                        }\n                        catch { }\n                        frag.appendChild(clone);\n                        instances.push(clone);\n                    }\n                    const ref = instances[start - 1] || placeholder;\n                    if (ref.parentNode)\n                        ref.parentNode.insertBefore(frag, ref.nextSibling);\n                }\n            };\n            const dir = { type: 'for', expression };\n            const effect = self._createEffect(update, dir);\n            dir.update = effect;\n            self._addDirective(placeholder, dir);\n        }\n        _render() {\n            const self = this;\n            for (const directives of self._directives.values()) {\n                for (const dr of directives) {\n                    if (XTOOL_ENABLE_STATIC_DIRECTIVES && dr._static)\n                        continue;\n                    if (dr.update) {\n                        try {\n                            dr.update();\n                        }\n                        catch (error) {\n                            if (!(error instanceof ReferenceError)) { }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    ReactiveComponent._BA = {\n        itemscope: 1, formnovalidate: 1, novalidate: 1, default: 1\n    };\n    const xTool = new XToolFramework();\n    return xTool;\n}();\nif (typeof window !== 'undefined') {\n    const w = window;\n    w.XTool = XToolFramework;\n    w.FyneJS = XToolFramework;\n}\n//# sourceMappingURL=x-tool.js.map"],"mappings":"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","ignoreList":[]}